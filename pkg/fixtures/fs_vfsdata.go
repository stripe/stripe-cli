// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package fixtures

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// FS statically implements the virtual filesystem provided to vfsgen.
var FS = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
		},
		"/charge.captured.json": &vfsgen۰CompressedFileInfo{
			name:             "charge.captured.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 399,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x51\x6b\xc4\x20\x10\x84\xdf\xfd\x15\xcb\xd2\xc7\xd0\xe4\x5e\xfd\x2b\xa5\x84\xc5\xec\x35\xa1\x67\x14\x77\x0d\x2d\x87\xff\xbd\x68\xee\xae\xa1\xa5\x7d\x52\x67\xe6\x63\x9c\xab\x01\xc0\xd1\xb3\x12\x5a\xa8\x0f\x00\x54\xf6\xf1\x42\xca\xe3\xc6\x49\x96\xb0\xa2\x85\xc1\x00\x94\xae\x66\xcf\xcb\x87\xe6\xc4\x82\x16\x5e\x5a\x7c\x87\x00\x70\x25\xcf\x68\x01\xdd\x4c\xe9\x8d\xb1\xbb\xeb\x91\x74\xae\x7a\xbf\x9d\xfa\xdd\x93\x6f\xd3\xb3\xce\x61\xaa\x76\x0c\xa2\x47\x28\x91\x97\xc7\x9f\x9a\x26\x21\x27\xd7\x2a\x34\xbc\x8f\xdb\x22\xf4\xc8\x03\x20\xf9\x90\x57\x45\x0b\xa7\x61\x38\xc8\x2e\xa7\xc4\xab\xfb\xac\x58\x96\xe9\x48\x38\x8a\x75\x0a\x5a\x38\xd3\x45\xf8\x66\x94\x76\x96\xee\x8f\x71\x37\xe6\xbf\x75\xfd\xd3\x75\xbf\x3d\x2f\x53\xe9\x7f\x11\x3f\x26\x9b\x7b\xe9\xab\x29\xe6\x2b\x00\x00\xff\xff\x99\x2e\xe2\xb5\x8f\x01\x00\x00"),
		},
		"/charge.disputed.created.json": &vfsgen۰CompressedFileInfo{
			name:             "charge.disputed.created.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 278,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x4d\x4e\xc4\x30\x0c\x85\xf7\x39\x85\xe5\xf5\x48\xd3\xd9\x66\xcd\x86\x33\x20\x54\x59\x19\x43\x23\xc8\x0f\xb6\x33\xa2\x42\xbd\x3b\x4a\x4b\x4b\x37\x91\xf2\x7d\xef\xd9\xfe\x71\x00\x38\x26\x36\x42\x0f\xfd\x03\x80\xc6\xa9\x7e\x92\xf1\xf8\x60\xd1\x58\x32\x7a\x18\x1c\xc0\x72\xe9\xd9\xb7\xf8\x6d\x4d\x58\xd1\xc3\xcb\x1a\xdf\x4a\x00\x98\x29\x31\x7a\xc0\x30\x91\xbc\x33\x5e\x76\x5e\xc9\xa6\xce\xaf\x8f\xdb\x75\x73\xfa\x2f\x13\xdb\x54\xee\x5d\xd7\xa2\x76\x2e\x09\x25\x3d\x6e\x5a\x99\x96\x26\x61\x5d\x61\xe5\x63\x0c\xc2\x64\xfc\x14\xb5\x36\xe3\xe7\xfc\xd5\xa2\xcc\x47\x1f\x00\x29\x95\x96\x0d\x3d\xdc\x86\xe1\x84\x43\x13\xe1\x1c\xe6\x3e\xa6\xe9\x1d\xff\xcc\xe2\xf6\xf7\xd5\x2d\xee\x37\x00\x00\xff\xff\x10\x83\xb1\x14\x16\x01\x00\x00"),
		},
		"/charge.failed.json": &vfsgen۰CompressedFileInfo{
			name:             "charge.failed.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 272,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x8e\x83\x20\x14\x45\xf7\x7c\xc5\xcd\x5b\x9b\xa8\x5b\xd6\xf3\x17\x93\x89\x21\xf8\xa6\x9a\x0a\x18\x78\x98\x36\x8d\xff\xde\xa0\xd5\xba\x21\xe1\x9c\x7b\x2f\xbc\x14\x40\x9d\x63\x31\xa4\x51\x2e\x00\x09\xbb\x79\x32\xc2\xdd\xc2\x31\x8d\xc1\x93\x46\xa3\x80\xb5\x2a\xd9\xff\xf1\x21\x39\x72\x22\x8d\xdf\x2d\xbe\x97\x00\xf2\xc6\x31\x69\x90\x1d\x4c\xbc\x31\x55\x07\x9f\x8d\x0c\x85\xd7\x4b\x5b\xef\x2e\x7d\xa5\x63\x19\x42\x5f\xf4\x1c\x92\x5c\x4b\xd1\xb8\x74\xfe\x69\x63\x29\xe4\x68\xb7\x27\x24\xdc\xbb\x7d\xea\x87\xed\x34\x7a\xee\xcf\x26\x40\xc6\x85\xec\x85\x34\xda\xa6\xb9\x60\x9b\x63\x64\x6f\x9f\x65\x20\xa7\x9e\x3e\x66\x55\xc7\xf9\xa7\x56\xf5\x0e\x00\x00\xff\xff\x6f\xef\xe2\x0e\x10\x01\x00\x00"),
		},
		"/charge.refunded.json": &vfsgen۰CompressedFileInfo{
			name:             "charge.refunded.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 411,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xc1\x6a\xc3\x30\x10\x44\xef\xfa\x8a\x61\xe9\xd1\x34\xce\x55\xbf\x52\x8a\x11\xf6\xa6\x36\xad\x24\xa3\x5d\x99\x96\xa0\x7f\x2f\xb2\xd2\x34\x14\x9f\x7a\x92\x34\x6f\x06\xed\xec\xd5\x00\x34\x78\x56\x47\x16\xf5\x01\x90\xb2\x5f\x3f\x9c\xf2\xb0\x71\x92\x25\x06\xb2\xe8\x0d\x50\xba\xea\xbd\x2c\x9f\x9a\x13\x0b\x59\xbc\xec\xf6\x16\x02\x28\x38\xcf\x64\x41\xe3\xec\xd2\x1b\x53\xf7\xa3\xaf\x4e\xe7\xaa\x9f\xb6\xf3\xa9\x31\xf9\x85\x9e\x75\x8e\x53\xc5\x6b\x14\x7d\x0c\x25\xe7\xe5\x3e\xd3\xae\x49\xcc\x69\xdc\xbf\xd0\xf8\x3e\x6c\x8b\xb8\xbb\x1f\x20\xe7\x63\x0e\x4a\x16\xe7\xbe\x7f\x90\xc7\x9c\x12\x87\xf1\xab\xc6\xb2\x4c\x74\x23\x65\x3f\x4b\x77\x5c\x21\xf1\x25\x87\xe9\xb8\x42\x63\xff\xac\x70\xdb\x8d\x05\x3d\x5d\xdb\xfd\x79\x99\xca\x9f\xa1\x0c\xf0\x6a\x8a\xf9\x0e\x00\x00\xff\xff\x19\xb1\x3e\x1e\x9b\x01\x00\x00"),
		},
		"/charge.succeeded.json": &vfsgen۰CompressedFileInfo{
			name:             "charge.succeeded.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 262,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x0a\x83\x30\x0c\x86\xef\x7d\x8a\x90\xb3\xa0\x5e\xfb\x2a\x63\x48\xa8\xd9\x94\xad\xad\x34\xa9\x6c\x0c\xdf\x7d\x54\xa7\xf3\x12\xc8\xf7\xfd\x3f\xc9\xc7\x00\x60\xe7\x59\x09\x2d\x94\x05\x00\x95\xfd\xf4\x24\xe5\x6e\xe6\x24\x63\x0c\x68\xa1\x31\x00\x4b\x55\xb2\xb7\xf1\xa5\x39\xb1\xa0\x85\xcb\x1a\xdf\x4a\x00\x18\xc8\x33\x5a\x40\x37\x50\xba\x33\x56\x3b\x9f\x48\x87\xc2\xeb\xb9\xad\x37\x27\x7f\xe9\x59\x87\xd8\x17\x3d\x45\xd1\x73\x29\x91\x97\xe3\xa7\x95\x49\xcc\xc9\xad\x27\x34\x3e\xba\x79\x14\x3a\xf2\x00\x48\x3e\xe6\xa0\x68\xa1\x6d\x9a\x13\x76\x39\x25\x0e\xee\x5d\x6a\x59\x7a\xfc\x99\xc5\xec\xf3\x6a\x16\xf3\x0d\x00\x00\xff\xff\x9b\xdc\x5e\x6a\x06\x01\x00\x00"),
		},
		"/checkout.session.completed.json": &vfsgen۰CompressedFileInfo{
			name:             "checkout.session.completed.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 1259,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xdd\x8e\xda\x30\x10\x85\xef\xf3\x14\x96\xb5\x97\x94\xb0\x95\x7a\x93\xab\xbe\x47\xb5\xb2\x8c\x33\x90\x11\xfe\xab\x67\x82\x16\xa1\xbc\x7b\x65\x67\x01\x93\xd2\x1f\x96\x1b\x6c\xcf\x77\xec\xc9\x9c\x73\x6e\x84\x90\xca\x01\x6b\xd9\x89\xbc\x11\x42\x32\xb8\x68\x35\x83\x3a\x42\x22\x0c\x5e\x76\x62\xd3\x08\x31\xad\x32\xbb\xc3\x77\x1e\x13\x90\xec\xc4\x8f\x82\xcf\x22\x21\xa4\xd7\x0e\x64\x27\xa4\x19\xc0\x1c\xc2\xc8\x8a\x80\x8a\x7c\x75\x21\xa2\xe6\x21\x13\xed\xf1\xb5\xbd\x50\xed\x07\x45\x37\xcc\x01\x0f\xa1\xcf\x60\x0c\xc4\xb5\x3c\x69\x47\xd7\x3e\xcb\x19\x8d\xc6\x00\x91\x1a\x93\xcd\x82\x81\x39\x52\xd7\xb6\xf9\x7f\x8b\x7e\x1d\xd2\xbe\xbd\xbb\x44\x08\x69\xb4\x37\x60\x9f\x51\x44\x7d\x72\xe0\x59\xcd\x8d\x29\x3e\xc5\xf9\xfb\xa5\xd1\xa9\x97\x6f\x15\x69\xd1\x83\x42\x06\x77\x9b\xcf\xfc\x3b\x57\xeb\x6a\x56\xfc\x85\x06\x4c\xf5\x63\xa5\xdc\x03\x99\x84\x91\xe7\xe1\x4b\x13\xdc\x2e\x24\xd6\x5b\x0b\xc2\x04\xe6\xe0\xc5\x1f\x84\xda\x85\xd1\x73\xd6\xbc\x7e\xdb\x6c\x96\x55\x33\xa6\x04\xde\x9c\x72\x7d\xa4\x7e\x59\xfe\x39\x6a\xcf\xc8\xb9\xfc\xb5\xaa\x4c\xd7\xf5\x5b\x53\x9f\x4c\xab\xc7\xfe\x5f\xa6\x15\xf5\x1e\x1e\x7b\x5f\x13\x0f\x7d\xdf\xc3\xbf\x6c\x9f\x43\xa3\xb0\xe0\x2f\xe7\x65\xe6\xd6\xd8\x4f\xf2\xa9\x6e\x3f\x1e\xff\x6b\xbf\x33\xf3\xc9\xa4\xe6\xd4\x14\x33\x73\x66\xee\xe2\x98\xfa\x3b\x32\xb3\xe1\x00\xc5\x79\x0e\x07\x75\x44\xd2\xf2\x5a\x9d\x2a\xe9\x16\xad\x45\xbf\x57\x3d\xb0\x46\x4b\xcb\x5b\xc0\x69\x2c\x19\x27\x4e\x18\xe1\x3b\xbc\x6b\x17\x2d\xac\x4d\x70\xd5\x7d\x4f\x7b\xaa\x4c\xf0\x3b\x4c\xee\x3f\xbc\x6d\x5f\xce\xf5\x3e\xbb\xd2\xfe\xa6\x7e\x66\x88\x0b\xb7\x8a\xf7\xf7\x67\x0f\x9c\x6f\x72\x72\xa7\xe6\x57\x00\x00\x00\xff\xff\x73\xc3\x80\x79\xeb\x04\x00\x00"),
		},
		"/customer.created.json": &vfsgen۰CompressedFileInfo{
			name:             "customer.created.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 160,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcb\x41\xaa\xc3\x30\x0c\x84\xe1\xbd\x4f\x31\xcc\x3a\x90\xf7\xb6\xbe\x4a\x29\xc1\xb4\x2a\x09\x54\xb1\xb1\x94\x50\x28\xbe\x7b\x71\x4a\xe8\x52\xfa\xfe\x79\x07\x80\x93\x8a\x27\x46\xf4\x03\xa0\x8b\x96\x67\x72\x99\x76\xa9\xb6\xe4\x95\x11\x7f\x01\x68\x43\x6f\x1f\xcb\xcb\xb7\x2a\xc6\x88\xcb\x91\x7f\x47\x00\xd7\xa4\xc2\x08\xde\x36\xf3\xac\x52\x39\x9c\x52\x92\xcf\x5d\xc6\xfd\x7f\x3c\xd5\x7e\xac\xe2\x73\xbe\xf7\xa0\x64\x73\x1e\xef\x16\x80\x6b\x68\xe1\x13\x00\x00\xff\xff\xc9\xf8\x11\x48\xa0\x00\x00\x00"),
		},
		"/customer.deleted.json": &vfsgen۰CompressedFileInfo{
			name:             "customer.deleted.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 278,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8d\x41\x0a\xc2\x30\x10\x45\xf7\x39\xc5\x67\x70\x59\xac\x6e\x73\x15\x91\x12\xcc\x48\x0b\x4d\x13\x92\x49\x11\x4a\xee\x2e\xa9\x06\x37\xa2\xbb\x64\xde\x9b\x79\x9b\x02\x68\x70\x2c\x86\x34\xea\x07\x20\x61\x17\x66\x23\x3c\xac\x1c\xd3\xe4\x17\xd2\x38\x29\xa0\x74\xd5\xbd\x4f\x0f\xc9\x91\x13\x69\x5c\x76\xfd\xb5\x04\xd0\x62\x1c\x93\x06\xdd\x72\x12\xef\x38\x52\xd7\x48\x30\x32\x56\xd2\xaf\xe7\xbe\xd1\xf4\xc1\x8e\x65\xf4\xb6\x0a\xc1\x27\xa1\x7d\x5c\xba\xdf\xc7\x87\x1c\xac\x11\xb6\x7f\x22\xfd\x61\x6b\xef\xe3\x64\xcb\xb7\xa6\xe5\x99\x85\xdf\x55\x05\x5c\x55\x51\xcf\x00\x00\x00\xff\xff\x73\x84\xe5\x74\x16\x01\x00\x00"),
		},
		"/customer.source.created.json": &vfsgen۰CompressedFileInfo{
			name:             "customer.source.created.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 339,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcd\xaa\xc3\x20\x10\x85\xf7\x3e\xc5\x30\xdc\x65\xb8\xb6\x5b\x5f\xa5\x14\x91\x64\x4a\xa4\x35\x06\x67\x12\x0a\xc1\x77\x2f\x26\xb1\xed\xa6\xed\x46\xf4\x7c\xe7\x07\x5c\x14\x00\xda\x40\xe2\xd0\x40\x79\x00\xa0\x50\x18\x6f\x4e\xc8\xce\x94\xd8\xc7\x01\x0d\x1c\x14\x40\x6e\x8a\xf7\xe2\xef\x32\x25\x62\x34\x70\x5a\xed\x5b\x08\x00\x07\x17\x08\x0d\x60\x3b\xb1\xc4\x40\x09\x9b\x4a\x46\x27\x7d\x21\x7a\x3e\xea\x4a\xf9\x85\x03\x49\x1f\xbb\x62\x18\x23\x0b\xae\x72\x6e\xbe\x97\x5b\x8e\x53\x6a\xe9\xc7\x86\xfe\x5b\xea\xfd\xdf\x77\x59\x6f\xa1\xcf\xd3\x6f\x6d\xc9\x05\x7e\x7e\xc9\xaa\xed\x8b\x06\x50\xe2\xd5\xce\x9e\x1d\xee\x30\xab\x7a\x9e\x55\x56\x8f\x00\x00\x00\xff\xff\x3f\x6f\x43\x14\x53\x01\x00\x00"),
		},
		"/customer.source.update.json": &vfsgen۰CompressedFileInfo{
			name:             "customer.source.update.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 574,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\xc1\x4e\xc3\x30\x0c\x86\xef\x79\x0a\xcb\xe2\x58\x51\xb8\xe6\x55\x10\x8a\xcc\xe2\x69\x15\x64\xae\x62\xb7\x42\x9a\xf2\xee\x28\x5d\x3a\xca\x01\xd0\x7a\x6b\xff\xcf\xfe\x7f\x3b\xbe\x38\x00\x0c\x89\x8d\xd0\x43\xfd\x01\x40\xe3\x34\x7e\x90\x71\x98\x39\xeb\x20\x67\xf4\xf0\xe4\x00\x4a\x57\x6b\x8f\xc3\xa7\x4d\x99\x15\x3d\xbc\x2c\xe5\xd7\x26\x00\x3c\x53\x62\xf4\x80\x87\x49\x4d\x12\x67\xec\x56\x32\x92\x9d\x2a\xe9\xe7\xe7\x7e\xa5\xfa\x8d\x13\xdb\x49\x62\x2d\x18\x45\x0d\x17\xb9\x74\x7f\x9b\x07\x95\x29\x1f\xf8\x9f\x8c\xfe\xe1\xb2\x7e\x3f\x0e\xb1\xf4\xd7\xa6\xdf\xa3\x37\x6e\x99\x92\xde\x9e\x64\xd1\x5a\xa2\x07\x34\x79\x0f\xf3\xa0\x84\x0d\x96\x7b\x46\x0e\xd3\x18\xc9\x38\xee\x1b\x7d\x23\x37\xbf\x4a\xf7\x2d\x54\xaf\x1e\x69\x73\xf9\xa6\x1f\x45\xaa\xc1\x1b\x65\xbc\xc9\xe5\xe7\xaa\x0e\xe0\xd5\x15\xf7\x15\x00\x00\xff\xff\x1c\x34\xda\xac\x3e\x02\x00\x00"),
		},
		"/customer.subscription.deleted.json": &vfsgen۰CompressedFileInfo{
			name:             "customer.subscription.deleted.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 851,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xcb\x6e\xc3\x20\x10\xbc\xfb\x2b\x56\xab\x1c\xa3\xc6\xed\xd1\xbf\x52\x45\x16\x85\xad\x82\x6a\x1e\x82\xc5\x6a\x14\xf1\xef\x15\x38\x76\x88\x94\x43\x1a\x5f\xcc\x32\xc3\x32\x33\xcb\xa5\x03\xc0\xd1\x10\x0b\x1c\xa0\x14\x00\xc8\x64\xfc\x24\x98\xc6\x99\x42\xd4\xce\xe2\x00\x7d\x07\x90\xf7\x85\xfb\xad\x7f\x39\x05\x8a\x38\xc0\x67\xa5\x2f\x87\x00\xd0\x0a\x43\x38\x00\xca\x14\xd9\x19\x0a\xb8\x5f\x11\x2f\xf8\x54\x90\xc3\xfc\x7e\x58\xd1\x78\x83\x0d\xf1\xc9\xa9\x42\xf0\x2e\x72\x7b\x2c\x08\x13\x37\x5d\x75\x2f\xba\x14\x64\xbd\x86\xdd\xcf\x38\xeb\x28\xf0\x0a\xe6\xfa\xcf\xfb\xc7\xa2\xfc\x24\xec\x63\x41\x05\x79\x51\x8c\x4c\x21\x90\x95\xe7\xc2\x4e\x51\x6d\x64\x00\xd4\x96\x29\xcc\x62\x2a\x90\x71\x96\x4f\x2d\x28\x8c\x4b\x96\x71\x80\x8f\xbe\xef\x9b\x7d\x1f\x9c\x4a\x92\xef\x2e\x69\x3c\x98\xf3\x4a\xd8\xd0\xfc\x94\xf9\x98\xbe\xa2\x0c\xda\x73\x19\xe6\xc3\x10\x5a\xc6\xcb\x61\x5c\xc7\x3e\x00\xee\x2e\x6b\xf5\xa6\x55\xbe\xcb\x85\xc9\xdc\xde\xce\xf2\xb5\x66\xe1\x3a\xaa\xda\xa4\xac\x6a\x83\x86\x90\xb7\xf5\xf1\xdf\xde\x47\x45\x13\x31\xa9\x27\x32\x38\xec\x2e\x6d\x7d\x67\xa3\x89\x65\x69\xb8\xe8\x2b\x3a\x8e\x5d\xee\xfe\x02\x00\x00\xff\xff\x80\x25\x3b\x78\x53\x03\x00\x00"),
		},
		"/customer.subscription.updated.json": &vfsgen۰CompressedFileInfo{
			name:             "customer.subscription.updated.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 931,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\xcd\x8a\xf3\x30\x0c\xbc\xe7\x29\x84\xe8\xb1\x7c\xcd\xb7\xc7\xbc\xca\xb2\x04\x37\x56\x69\xd8\xfa\x07\x5b\x0e\x5b\x8a\xdf\x7d\x91\x9b\xa4\x2e\x74\xa1\x6d\x2e\xb1\x34\x63\x59\x33\xb2\x2f\x0d\x00\xf6\x86\x58\x61\x07\x12\x00\x20\x93\xf1\x27\xc5\xd4\x4f\x14\xe2\xe8\x2c\x76\xd0\x36\x00\x79\x2b\xdc\xc3\xf8\xc3\x29\x50\xc4\x0e\x3e\x0b\xfd\xba\x09\x00\xad\x32\x84\x1d\xe0\x90\x22\x3b\x43\x01\xb7\x0b\xe2\x15\x1f\x05\xd9\x4d\xff\x77\x0b\x1a\x6f\xb0\x21\x3e\x3a\x2d\x04\xef\x22\xd7\xdb\x82\x32\x71\xed\xab\xe4\xa2\x4b\x61\x28\xc7\xb0\xfb\xee\xa7\x31\x2a\x9c\xc1\x5c\xfe\x79\xfb\xb8\x29\x7f\x52\xf6\x71\x43\x82\xbc\xd9\xcc\x90\x42\x20\x3b\x9c\x85\x9d\xa2\x5e\xc9\x00\x38\x5a\xa6\x30\xa9\x93\x40\xc6\x59\x3e\xd6\xa0\x32\x2e\x59\xc6\x0e\x3e\xda\xb6\xad\xf2\x3e\x38\x9d\x06\xbe\x3b\xa4\xd2\x60\xce\x0b\x61\x45\xf3\x53\xe2\x63\xda\xc7\x21\x8c\x9e\x65\x98\x0f\x4d\xa8\x19\x6f\x9b\x31\x8f\xbd\x03\xdc\x5c\x96\xe8\xdf\xa8\xf3\x9d\x2f\x4c\xe6\x76\x77\xae\x5f\x2d\x16\xe6\x51\x95\x22\xb2\x2a\x05\x2a\x42\x5e\xd7\x5f\x2f\x6b\xef\x93\xd7\x8a\x49\x3f\xe1\xc1\x6e\x73\xa9\xe3\x3b\x19\x2f\xd9\x22\x4f\x4b\xab\xea\x79\xcd\xf9\x83\x73\x52\x60\xaf\xc2\x9f\xd3\x6c\x44\x63\x6e\x7e\x03\x00\x00\xff\xff\xd2\x9d\x26\x7f\xa3\x03\x00\x00"),
		},
		"/customer.updated.json": &vfsgen۰CompressedFileInfo{
			name:             "customer.updated.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 358,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcf\xca\xc2\x30\x10\xc4\xef\x79\x8a\x65\xf9\x8e\xe5\xab\x5e\xf3\x2a\x22\x65\x35\x5b\x5a\x30\x4d\x48\xb6\x45\x28\x79\x77\x49\x35\x35\x17\xf5\x92\x3f\x33\xbf\x9d\x85\x59\x15\x00\x76\x96\x85\x50\x43\xfe\x00\xa0\xb0\xf5\x37\x12\xee\x16\x0e\x71\x74\x13\x6a\x38\x28\x80\xd4\x64\xb6\x1f\xef\x32\x07\x8e\xa8\xe1\xb4\xe1\xcf\x21\x00\x9c\xc8\x32\x6a\xc0\xeb\x1c\xc5\x59\x0e\xd8\x14\xc7\x93\x0c\xd9\x69\x97\x63\x5b\xdc\xf8\xb6\x2d\xcb\xe0\x4c\x06\xbc\x8b\x82\x9b\x9c\x9a\xef\xe1\xdd\xec\x0d\x09\x9b\x1f\x4b\xda\xbf\xb5\xbc\xff\x47\x93\x3e\xee\xac\x52\x02\xd9\xb8\x77\x51\x58\x32\x54\x35\xf4\xd2\x7b\xe7\x72\xc0\x85\x02\xee\x72\x52\xf5\x9d\xcf\xb3\x4a\xea\x11\x00\x00\xff\xff\x3a\xc1\x54\x1a\x66\x01\x00\x00"),
		},
		"/invoice.created.json": &vfsgen۰CompressedFileInfo{
			name:             "invoice.created.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 585,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xd1\x4a\xc4\x30\x10\x45\xdf\xfb\x15\x97\xc1\xc7\xe2\x56\x1f\xf3\x2b\x22\x25\xa4\x23\x1b\x34\x49\xc9\x4c\x8a\xb2\xe4\xdf\x25\xd5\xae\x15\x56\x61\xf7\x29\x4c\xee\x19\x72\x6e\x4e\x1d\x40\x63\x60\xb5\x64\xd0\x06\x80\x94\xc3\xfc\x66\x95\xc7\x85\xb3\xf8\x14\xc9\x60\xe8\x80\xda\x37\xf6\xc5\xbf\x6b\xc9\x2c\x64\xf0\xb4\xe2\x5f\x4b\x00\x45\x1b\x98\x0c\xc8\x15\xd1\x14\x38\x53\xbf\x25\xb3\xd5\x63\x4b\x0e\xcb\xc3\x61\x4b\xe5\x27\x0e\xac\xc7\x34\x35\x60\x4e\xa2\xfb\xb5\x6c\x83\x9c\xbd\xd6\x3b\x49\x25\xbb\xf5\x19\x4d\xaf\xe3\xe2\xc5\xd2\x77\x58\xd7\xb3\xf6\x97\xa5\x7c\x5c\x92\x77\xec\x95\xc3\x65\xaf\x1d\x70\xa3\x9a\x2b\x39\x73\x74\x1f\x8d\x2e\x32\x9d\x61\xec\xbe\xc4\x80\xee\x4e\xdb\x74\xef\xa7\xba\xa7\x6c\x48\x25\x2a\x19\x3c\x0e\xc3\x70\x4d\xab\x7f\x1b\xdd\xdc\xe6\x4f\xe5\xdf\x6a\x1d\xf0\xdc\xd5\xee\x33\x00\x00\xff\xff\x59\x6c\x80\x60\x49\x02\x00\x00"),
		},
		"/invoice.finalized.json": &vfsgen۰CompressedFileInfo{
			name:             "invoice.finalized.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 710,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x21\x7a\x0c\x4b\xb6\xa3\x5f\x65\x8c\x60\x1c\x95\x9a\xd5\x76\xb0\xe4\xb0\x2d\xf8\xdd\x87\xb3\xa6\x0b\x23\x2b\xb4\x27\x5b\xfe\x3f\xa1\x4f\x9e\x15\x00\xf6\x9e\xc4\xa0\x86\x5a\x00\xa0\x90\x1f\xcf\x46\xa8\x9f\x28\xb1\x8b\x01\x35\x74\x0a\xa0\x34\x95\x3d\xba\x0f\xc9\x89\x18\x35\xbc\x2e\xf8\x4f\x13\x00\x06\xe3\x09\x35\xa0\xcd\x2c\xd1\x53\xc2\x66\x4d\x46\x23\xa7\x9a\xb4\xd3\x73\xbb\xa6\xfc\x1b\x7b\x92\x53\x1c\x2a\x30\x46\x96\x6d\x5b\x32\x9e\xaf\x5e\xcb\x1b\xc7\x9c\xec\x32\x46\xe2\x7b\x3f\x39\x36\x78\x09\xcb\x72\x96\x66\x5f\xca\x85\x29\x3a\x4b\x4e\xc8\xef\x7b\x6d\x80\x07\xd5\x6c\x4e\x89\x82\xfd\xac\x74\xe6\xe1\x0a\xc3\xe6\x4b\x34\xe0\x61\x5e\xab\x27\x37\x94\x2d\x65\x7c\xcc\x41\x50\xc3\x4b\xd7\x75\xf7\x6c\x75\x73\xa3\x87\xb7\xf9\x57\xf9\x1e\xb5\xfe\xe8\x82\x39\xbb\x2f\x1a\x6e\x4b\xb6\x87\xf9\x72\xad\x23\xda\x9d\xae\x3f\xf2\x6a\x55\x78\x53\x45\x7d\x07\x00\x00\xff\xff\xfa\x16\x66\x75\xc6\x02\x00\x00"),
		},
		"/invoice.payment_failed.json": &vfsgen۰CompressedFileInfo{
			name:             "invoice.payment_failed.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 712,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xc1\x6a\x84\x30\x10\x86\xef\x79\x8a\x61\xd8\xa3\x54\xdb\x63\xae\x85\xbe\x44\x29\x12\xe2\xb4\x86\x6e\x12\x49\x26\xd2\x45\xf2\xee\x25\x56\xb7\xb6\xec\x2e\xac\x27\x1d\xff\x6f\x66\xbe\x71\x12\x00\xd8\x5a\x62\x85\x12\x4a\x01\x80\x4c\x76\x38\x2a\xa6\x76\xa4\x10\x8d\x77\x28\xa1\x11\x00\xb9\x2a\xec\xbb\xf9\xe2\x14\x28\xa2\x84\xd7\x19\xff\x69\x02\x40\xa7\x2c\xa1\x04\xd4\x29\xb2\xb7\x14\xb0\x5a\x93\x41\x71\x5f\x92\x7a\x7c\xac\xd7\x34\xfe\xc6\x96\xb8\xf7\x5d\x01\x06\x1f\x79\xdb\x16\x94\x8d\x67\xaf\xf9\x5b\xf4\x29\xe8\x79\x0d\xfb\xcf\x56\xf7\x2a\x7c\xd0\xf3\x32\xf2\x45\x99\x23\x2e\x68\x9e\x9f\xb9\xba\xac\x68\xdc\xe8\x8d\x26\xc3\x64\x2f\x5b\x6e\x80\x9d\xa2\x3a\x85\x40\x4e\x9f\x0a\x9d\x62\x77\x86\x61\xf3\x83\x24\xe0\x61\x5a\xab\x07\xd3\xe5\x2d\xa5\xac\x4f\x8e\x51\xc2\x53\xd3\x34\xf7\x5c\x75\xf3\xa2\xdd\xd7\x5c\x55\xbe\x47\xad\x1d\xd4\xe9\xb6\x5e\x7d\x98\x96\xd7\x32\xbc\xfe\xc3\xff\x13\x16\xeb\xda\x37\x91\xc5\x77\x00\x00\x00\xff\xff\xae\xc8\xa4\xc2\xc8\x02\x00\x00"),
		},
		"/invoice.payment_succeeded.json": &vfsgen۰CompressedFileInfo{
			name:             "invoice.payment_succeeded.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 698,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\x21\x7a\x0c\x4b\xb6\xa3\x5f\x65\x8c\x60\x1c\x8d\x9a\xcd\x76\xb0\xe4\xb0\x12\xfc\xee\xc3\x59\xd3\x65\xa3\x2d\x34\xa7\x44\xfe\x3f\x59\x9f\x3c\x2b\x00\xec\x3d\x89\x41\x0d\xb5\x00\x40\x21\x3f\x7e\x1a\xa1\x7e\xa2\xc4\x2e\x06\xd4\xd0\x29\x80\xd2\x54\xf6\xdd\x7d\x49\x4e\xc4\xa8\xe1\x75\xc1\x7f\x9a\x00\x30\x18\x4f\xa8\x01\x6d\x66\x89\x9e\x12\x36\x6b\x32\x1a\x39\xd6\xa4\x9d\x9e\xdb\x35\xe5\xdf\xd8\x93\x1c\xe3\x50\x81\x31\xb2\x6c\xdb\x92\xf1\x7c\xf1\x5a\xce\x38\xe6\x64\x97\x31\x12\x3f\xfa\xc9\xb1\xc1\x73\x58\x96\x6f\x69\xae\x4b\xb9\x30\x45\x67\xc9\x09\xf9\xeb\x5e\x1b\x60\xa7\x9a\xcd\x29\x51\xb0\xa7\x4a\x67\x1e\x2e\x30\x6c\x9e\x44\x03\x1e\xe6\xb5\x7a\x72\x43\xd9\x52\xc6\xc7\x1c\x04\x35\xbc\x74\x5d\xf7\xc8\x56\x77\x37\xda\xbd\xcd\x4d\xe5\x47\xd4\xfa\xd1\x9c\xee\xeb\xb5\x87\xf9\xfc\x5b\x2f\x6f\xff\xf0\xff\x84\xd5\x3a\xf6\x4d\x15\xf5\x1d\x00\x00\xff\xff\xee\xd3\x39\xca\xba\x02\x00\x00"),
		},
		"/invoice.updated.json": &vfsgen۰CompressedFileInfo{
			name:             "invoice.updated.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 724,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x6b\xc4\x20\x10\x85\xef\xfe\x8a\x61\xd8\x63\x68\xd2\x1e\xfd\x2b\xa5\x04\x1b\x67\x59\xa1\x6a\xd0\x31\xb4\x04\xff\x7b\x31\x4d\x52\x17\x76\x97\xa6\xb7\xf8\xde\xe7\xe4\x3d\x99\x59\x00\x60\x6f\x89\x15\x4a\x28\x07\x00\x64\xb2\xe3\x87\x62\xea\x27\x0a\xd1\x78\x87\x12\x3a\x01\x90\x9b\xc2\x9e\xcd\x27\xa7\x40\x11\x25\xbc\x2e\xf8\xcf\x25\x00\x74\xca\x12\x4a\xc0\x21\x45\xf6\x96\x02\x36\x9b\x33\x2a\xbe\x14\xa7\x9d\x9e\xdb\xcd\x8d\xbf\xb6\x25\xbe\x78\x5d\x80\xd1\x47\xc6\x45\xce\xcd\xed\xe1\xc6\x4d\xde\x0c\x64\x98\xec\xed\xf9\x15\x70\xff\x17\xd5\xcd\xa0\x6c\xdc\xab\x2f\xda\x90\x42\x20\x37\x7c\x15\x3a\x45\xbd\xc3\x50\x55\x93\x80\xa7\x79\x3b\x3d\x19\x9d\x6b\x4a\x59\x9f\x1c\xa3\x84\x97\xae\xeb\x56\x39\xff\xa5\xd5\xc3\x46\xff\x6e\x73\x37\xf2\x91\x68\x7d\x1a\xb5\x62\xd2\x8f\x23\xb6\xa7\x79\xfd\xbc\x7a\x93\x43\x81\xcb\x2e\x6a\x55\xed\xe3\xaa\x9f\xbd\x2f\x03\xde\x55\xc0\x5d\xce\xd7\x15\x04\xc0\x9b\xc8\xe2\x3b\x00\x00\xff\xff\x93\x77\xc2\x1d\xd4\x02\x00\x00"),
		},
		"/payment_intent.canceled.json": &vfsgen۰CompressedFileInfo{
			name:             "payment_intent.canceled.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 473,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x51\xcd\x4a\xc4\x30\x10\xbe\xe7\x29\x86\xc1\x63\xb1\xd5\x63\x5e\x45\x24\x8c\xc9\xc8\x06\x9a\xa4\x26\x93\xc5\xb2\xe4\xdd\xa5\xa9\xba\xd4\x53\xf1\x14\xf2\xfd\xf1\x7d\xcc\x4d\x01\xa0\x09\x2c\x84\x1a\xb6\x0f\x00\x0a\x87\x65\x26\x61\x73\xe5\x5c\x7c\x8a\xa8\x61\x52\x00\x6d\xd8\xb4\xef\xfe\x53\x6a\xe6\x82\x1a\x5e\xba\x7c\x37\x01\x60\xa4\xc0\xa8\x01\x17\x5a\x03\x47\x31\x3e\x0a\x47\xc1\xe1\x87\x5f\x48\x2e\x1b\x3f\x5e\x9f\xc6\xa3\xa6\xdc\x45\x81\xe5\x92\x5c\x8f\x49\xe5\x60\xce\x14\xca\x6f\xc7\x8e\x51\x48\x35\x0a\x6a\x78\x9e\xa6\x69\xb8\xe3\xb6\xe6\xcc\xd1\xae\x5b\x4a\x2d\x0e\xbf\x99\xd6\xdf\x36\x9c\x69\x6d\x2c\x45\xcb\x33\xbb\x53\xf5\xc7\x87\xdb\x11\x79\xf4\xae\x8d\x7b\xc4\xff\xa6\xed\xde\x99\xc4\xa7\x68\x32\x53\xe9\x57\xc0\xcc\x1f\x95\x8b\xb0\x33\x6f\xab\xb1\xb5\x48\x0a\x9c\xff\xec\x53\x00\xaf\xaa\xa9\xaf\x00\x00\x00\xff\xff\x72\x34\xbb\xdc\xd9\x01\x00\x00"),
		},
		"/payment_intent.created.json": &vfsgen۰CompressedFileInfo{
			name:             "payment_intent.created.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 291,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xcf\xca\x83\x30\x10\xc4\xef\x79\x8a\x65\xcf\x82\xf9\xbe\x63\x5e\xa5\x48\x58\x74\x8b\x42\xf3\x87\x64\x23\x95\xe2\xbb\x97\x68\xad\xf5\x12\xc8\xcc\x6f\x66\x92\x97\x02\x40\xeb\x58\x08\x0d\xd4\x0b\x00\x0a\xbb\xf8\x20\x61\x3b\x73\xca\x53\xf0\x68\x40\x2b\x80\xb5\xa9\xec\x7d\x7a\x4a\x49\x9c\xd1\xc0\x6d\xc3\xf7\x10\x00\x7a\x72\x8c\x06\x30\xd2\xe2\xd8\x8b\x9d\xbc\xb0\x17\x6c\x0e\x3f\x92\x8c\xd5\x6f\xe7\xbf\xf6\xca\xe4\x13\x72\x2c\x63\x18\xb6\x9a\x90\x2f\xe1\x44\x2e\x7f\xdf\xb8\x69\xe4\x42\xf1\x82\x06\xfe\xb5\xd6\xcd\xa9\xf7\x25\x25\xf6\xfd\x52\x5b\x4a\x1e\xf0\xc7\x3a\x76\xf7\x19\x2b\x4b\xdc\x7f\x82\x3d\xa5\x01\xbb\x0f\xb8\xaa\xe3\xec\xd4\xaa\xde\x01\x00\x00\xff\xff\xf4\x28\x40\xb3\x23\x01\x00\x00"),
		},
		"/payment_intent.payment_failed.json": &vfsgen۰CompressedFileInfo{
			name:             "payment_intent.payment_failed.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 674,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x4d\x6a\xf3\x30\x10\xdd\xeb\x14\xc3\xf0\x2d\xcd\x17\xc5\x64\xa5\xab\x94\x60\x54\x67\x42\x0c\x95\x64\xa4\x91\x89\x09\xbe\x7b\x19\x3b\x4d\xa4\xd2\x66\x51\x6f\x8c\xf4\x7e\xe6\xf1\x46\x37\x05\x80\x9d\x23\xb6\x68\x40\x0e\x00\xc8\xe4\xc6\x0f\xcb\xd4\x4d\x14\xd3\x10\x3c\x1a\xd0\x0a\x60\x69\x84\x7b\x1e\xae\x9c\x23\x25\x34\xf0\xb6\xd2\x37\x11\x00\x7a\xeb\x08\x0d\xe0\x68\x67\x47\x9e\xc5\xf4\x12\x4e\xd8\x7c\xe1\xa3\xe5\x8b\xe0\xbb\x69\xbf\xab\x39\xe9\x49\xba\x8b\xc4\x26\x24\x2e\xc5\xd1\xba\xf4\xc8\xb8\xe5\x9c\xc7\x75\x60\x6f\xe3\x73\x0c\xdc\xcf\x25\x53\xc2\x65\xf7\x4e\x51\xd8\x07\x5d\x7d\x6d\xa1\x04\x40\xba\x8e\x9d\x0b\x7e\x4b\xba\xff\x01\x9c\xc9\xae\x36\xad\x6e\x75\x8d\xf6\x53\xbf\xfa\xb7\x07\x7c\x5c\x2f\xaa\xfc\x2f\xcd\xeb\xc6\x06\xcf\xe4\xf9\x75\x63\x1b\xe7\x8f\x8d\x59\x17\xb2\x67\x34\xd0\x6a\xad\xcb\xc6\x82\x3f\x0f\xd1\x89\x09\xc7\x4c\x55\x99\x39\x46\xf2\xfd\x2c\x58\x4e\x55\xcf\xdf\x16\x6d\x00\xff\xdd\xea\xbb\xff\xc3\x69\xf9\x5d\xd1\xc9\x02\xd7\x87\xb4\xad\xec\x58\x97\xa5\x00\x8e\x6a\x51\x9f\x01\x00\x00\xff\xff\x0e\x8b\x4a\x83\xa2\x02\x00\x00"),
		},
		"/payment_intent.succeeded.json": &vfsgen۰CompressedFileInfo{
			name:             "payment_intent.succeeded.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 674,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xcd\x6a\xc3\x30\x0c\xbe\xfb\x29\x84\xd8\xb1\xac\x6e\xd8\xc9\xaf\x32\x4a\xf0\x52\x95\x06\x66\x3b\xd8\x72\x68\x28\x79\xf7\xa1\x24\x6b\xed\xb1\xf5\x30\x72\x08\xf6\xf7\xa3\x8f\x4f\xbe\x29\x00\x6c\x1d\xb1\x45\x03\x72\x00\x40\x26\x37\x7c\x5a\xa6\x76\xa4\x98\xfa\xe0\xd1\x80\x56\x00\xf3\x4e\xb8\xe7\xfe\xca\x39\x52\x42\x03\xef\x0b\x7d\x15\x01\xa0\xb7\x8e\xd0\x00\x0e\x76\x72\xe4\x59\x4c\x2f\xe1\x84\xbb\x6f\x7c\xb0\x7c\x11\x7c\x3f\x1e\xf6\x35\x27\x3d\x48\x9b\x48\x6c\x42\xe2\x52\x1c\xad\x4b\xf7\x8c\x6b\xce\x69\x58\x06\x76\x36\x3e\xc6\xc0\x76\x2e\x99\x12\x2e\xbb\x0f\x8a\xc2\x7e\x6b\xea\xaf\x50\x02\x20\x5d\x87\xd6\x05\xbf\x26\x3d\xfc\x02\x4e\x64\x17\x9b\x46\x37\xba\x46\xbb\xb1\xdb\xfc\xf1\x7e\x3d\xab\xf2\x3f\xef\x9e\x37\xd6\x7b\x26\xcf\xcf\x1b\x5b\x39\xff\x6c\xcc\xba\x90\x3d\xa3\x81\x46\x6b\x5d\x36\x16\xfc\xb9\x8f\x4e\x4c\x38\x66\xaa\xca\xcc\x31\x92\xef\x26\xc1\x72\xaa\x7a\xfe\xb1\x68\x03\xf8\x72\xab\xef\x5e\xfb\xd3\xfc\xb7\xa2\x95\x05\x2e\x0f\x69\x5d\xd9\xb1\x2e\x4b\x01\x1c\xd5\xac\xbe\x02\x00\x00\xff\xff\x97\x12\x42\xea\xa2\x02\x00\x00"),
		},
		"/payment_method.attached.json": &vfsgen۰CompressedFileInfo{
			name:             "payment_method.attached.json",
			modTime:          time.Date(1970, 1, 1, 0, 0, 0, 0, time.UTC),
			uncompressedSize: 606,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\x5f\x6b\x84\x30\x0c\x7f\xef\xa7\x08\x61\x8f\x32\x3d\xd9\x93\x5f\x65\x0c\xc9\xbc\x0c\x85\xc5\x96\x36\xca\xc9\xd1\xef\x3e\xaa\xde\x9d\x0e\x0f\x8e\x3e\x94\xe4\xf7\x27\xe9\xaf\x57\x03\x80\xb5\xb0\x12\x56\x90\x0a\x00\x54\x16\xf7\x4b\xca\xf5\xc8\x3e\x74\xb6\xc7\x0a\x0a\x03\x10\xb3\xc4\xfd\xe9\x2e\x3a\x78\x0e\x58\xc1\xe7\x4c\x5f\x44\x00\xd8\x93\x30\x56\x80\xcd\x10\xd4\x0a\x7b\xcc\x6e\x88\x23\x6d\x13\x92\x8f\xa7\xfc\x86\x86\x07\x2c\xac\xad\x3d\x27\x82\xb3\x41\x71\x6e\xc7\xec\xd8\xdc\xd1\x24\xdc\x6b\xbd\x6a\x0e\x47\xec\x39\xcf\x07\x6d\xc4\x9e\x24\xdc\x03\x58\x42\x98\xdc\xf2\x1a\xf2\x8f\x31\xb0\xd6\x5b\x66\x5a\x6e\x90\x6f\xf6\x89\xfd\x51\xee\xcf\x46\x09\x80\x7c\x71\xb5\xd8\x7e\xd9\xf4\x74\x00\x4e\x4c\xb3\x4d\x59\x94\xc5\x1e\x6d\xc6\x66\xf5\xc7\x7b\x3b\x9a\xed\xfd\x5a\x62\x35\xa9\x52\xd3\xbe\x14\x5c\xfe\x76\xdd\x77\xde\xbb\x73\xcc\xff\x1b\x1c\xfe\x9e\x01\xf8\x32\xd1\xfc\x05\x00\x00\xff\xff\xc4\x03\xec\xbb\x5e\x02\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/charge.captured.json"].(os.FileInfo),
		fs["/charge.disputed.created.json"].(os.FileInfo),
		fs["/charge.failed.json"].(os.FileInfo),
		fs["/charge.refunded.json"].(os.FileInfo),
		fs["/charge.succeeded.json"].(os.FileInfo),
		fs["/checkout.session.completed.json"].(os.FileInfo),
		fs["/customer.created.json"].(os.FileInfo),
		fs["/customer.deleted.json"].(os.FileInfo),
		fs["/customer.source.created.json"].(os.FileInfo),
		fs["/customer.source.update.json"].(os.FileInfo),
		fs["/customer.subscription.deleted.json"].(os.FileInfo),
		fs["/customer.subscription.updated.json"].(os.FileInfo),
		fs["/customer.updated.json"].(os.FileInfo),
		fs["/invoice.created.json"].(os.FileInfo),
		fs["/invoice.finalized.json"].(os.FileInfo),
		fs["/invoice.payment_failed.json"].(os.FileInfo),
		fs["/invoice.payment_succeeded.json"].(os.FileInfo),
		fs["/invoice.updated.json"].(os.FileInfo),
		fs["/payment_intent.canceled.json"].(os.FileInfo),
		fs["/payment_intent.created.json"].(os.FileInfo),
		fs["/payment_intent.payment_failed.json"].(os.FileInfo),
		fs["/payment_intent.succeeded.json"].(os.FileInfo),
		fs["/payment_method.attached.json"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
