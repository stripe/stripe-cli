{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Stripe API v2",
    "description" : "The v2 endpoints of the Stripe REST API. Please see https://stripe.com/docs/api for more\n    details.",
    "termsOfService" : "https://stripe.com/us/terms/",
    "contact" : {
      "name" : "Stripe Dev Platform Team",
      "url" : "https://stripe.com",
      "email" : "dev-platform@stripe.com"
    },
    "version" : "2025-03-31.preview",
    "x-stripeSpecFilename" : "spec3.v2.preview.cli"
  },
  "servers" : [ {
    "url" : "https://api.stripe.com/"
  } ],
  "security" : [ {
    "basicAuth" : [ ],
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/v2/core/accounts" : {
      "get" : {
        "description" : "Returns a list of Accounts.",
        "operationId" : "GetCoreAccounts",
        "parameters" : [ {
          "name" : "applied_configurations",
          "in" : "query",
          "description" : "Filter only accounts that have all of the configurations specified. If omitted, returns all accounts regardless of which configurations they have.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The upper limit on the number of accounts returned by the List Account request.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token to navigate to next or previous batch of accounts given by the list request.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "A list of retrieved Account objects.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.core.account"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "An Account is a representation of a company, individual or other entity that a user interacts with. Accounts contain identifying information about the entity, and configurations that store the features an account has access to. An account can be configured as any or all of the following configurations: Customer, Merchant and/or Recipient.",
        "operationId" : "PostCoreAccounts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "configuration" : {
                    "type" : "object",
                    "properties" : {
                      "customer" : {
                        "type" : "object",
                        "properties" : {
                          "automatic_indirect_tax" : {
                            "type" : "object",
                            "properties" : {
                              "exempt" : {
                                "type" : "string",
                                "description" : "Describes the customer's tax exemption status, which is `none`, `exempt`, or `reverse`. When set to reverse, invoice and receipt PDFs include the following text: “Reverse charge”.",
                                "enum" : [ "exempt", "none", "reverse" ]
                              },
                              "ip_address" : {
                                "type" : "string",
                                "description" : "A recent IP address of the customer used for tax reporting and tax location inference."
                              },
                              "location_source" : {
                                "type" : "string",
                                "description" : "The data source used by Stripe Tax to identify the customer's location - defaults to 'identity_address'. Will only be used for automatic tax calculation on the customer's Invoices and Subscriptions.",
                                "enum" : [ "identity_address", "ip_address", "shipping_address" ]
                              }
                            },
                            "description" : "Automatic indirect tax settings to be used when automatic tax calculation is enabled on the customer's invoices, subscriptions, checkout sessions, or payment links. Surfaces if automatic tax calculation is possible given the current customer location information."
                          },
                          "billing" : {
                            "type" : "object",
                            "properties" : {
                              "invoice" : {
                                "type" : "object",
                                "properties" : {
                                  "custom_fields" : {
                                    "type" : "array",
                                    "description" : "The list of up to 4 default custom fields to be displayed on invoices for this customer.",
                                    "items" : {
                                      "required" : [ "name", "value" ],
                                      "type" : "object",
                                      "properties" : {
                                        "name" : {
                                          "type" : "string",
                                          "description" : "The name of the custom field. This may be up to 40 characters."
                                        },
                                        "value" : {
                                          "type" : "string",
                                          "description" : "The value of the custom field. This may be up to 140 characters. When updating, pass an empty string to remove previously-defined values."
                                        }
                                      }
                                    }
                                  },
                                  "footer" : {
                                    "type" : "string",
                                    "description" : "Default footer to be displayed on invoices for this customer."
                                  },
                                  "next_sequence" : {
                                    "type" : "integer",
                                    "description" : "The sequence to be used on the customer's next invoice. Defaults to 1."
                                  },
                                  "prefix" : {
                                    "type" : "string",
                                    "description" : "The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers."
                                  },
                                  "rendering" : {
                                    "type" : "object",
                                    "properties" : {
                                      "amount_tax_display" : {
                                        "type" : "string",
                                        "description" : "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs. One of exclude_tax or include_inclusive_tax. include_inclusive_tax will include inclusive tax (and exclude exclusive tax) in invoice PDF amounts. exclude_tax will exclude all tax (inclusive and exclusive alike) from invoice PDF amounts.",
                                        "enum" : [ "exclude_tax", "include_inclusive_tax" ]
                                      },
                                      "template" : {
                                        "type" : "string",
                                        "description" : "ID of the invoice rendering template to use for future invoices."
                                      }
                                    },
                                    "description" : "Default options for invoice PDF rendering for this customer."
                                  }
                                },
                                "description" : "Default settings used on invoices for this customer."
                              }
                            },
                            "description" : "Billing settings - default settings used for this customer in Billing flows such as Invoices and Subscriptions."
                          },
                          "capabilities" : {
                            "type" : "object",
                            "properties" : {
                              "automatic_indirect_tax" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Generates requirements for enabling automatic indirect tax calculation on this customer's invoices or subscriptions. Recommended to request this capability if planning to enable automatic tax calculation on this customer's invoices or subscriptions. Uses the `location_source` field."
                              }
                            },
                            "description" : "Capabilities that have been requested on the Customer Configuration."
                          },
                          "shipping" : {
                            "type" : "object",
                            "properties" : {
                              "address" : {
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  }
                                },
                                "description" : "Customer shipping address."
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "Customer name."
                              },
                              "phone" : {
                                "type" : "string",
                                "description" : "Customer phone (including extension)."
                              }
                            },
                            "description" : "The customer's shipping information. Appears on invoices emailed to this customer."
                          },
                          "test_clock" : {
                            "type" : "string",
                            "description" : "ID of the test clock to attach to the customer. Can only be set on testmode Accounts, and when the Customer Configuration is first set on an Account."
                          }
                        },
                        "description" : "The Customer Configuration allows the Account to be used in inbound payment flows."
                      },
                      "merchant" : {
                        "type" : "object",
                        "properties" : {
                          "bacs_debit_payments" : {
                            "type" : "object",
                            "properties" : {
                              "display_name" : {
                                "type" : "string",
                                "description" : "Display name for Bacs debit payments."
                              }
                            },
                            "description" : "Settings used for Bacs debit payments."
                          },
                          "branding" : {
                            "type" : "object",
                            "properties" : {
                              "icon" : {
                                "type" : "string",
                                "description" : "ID of a [file upload](https://docs.stripe.com/api/persons/update#create_file): An icon for the merchant. Must be square and at least 128px x 128px."
                              },
                              "logo" : {
                                "type" : "string",
                                "description" : "ID of a [file upload](https://docs.stripe.com/api/persons/update#create_file): A logo for the merchant that will be used in Checkout instead of the icon and without the merchant's name next to it if provided. Must be at least 128px x 128px."
                              },
                              "primary_color" : {
                                "type" : "string",
                                "description" : "A CSS hex color value representing the primary branding color for the merchant."
                              },
                              "secondary_color" : {
                                "type" : "string",
                                "description" : "A CSS hex color value representing the secondary branding color for the merchant."
                              }
                            },
                            "description" : "Settings used to apply the merchant's branding to email receipts, invoices, Checkout, and other products."
                          },
                          "capabilities" : {
                            "type" : "object",
                            "properties" : {
                              "ach_debit_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process ACH debit payments."
                              },
                              "acss_debit_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process ACSS debit payments."
                              },
                              "affirm_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Affirm payments."
                              },
                              "afterpay_clearpay_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Afterpay/Clearpay payments."
                              },
                              "alma_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Alma payments."
                              },
                              "amazon_pay_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Amazon Pay payments."
                              },
                              "au_becs_debit_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Australian BECS Direct Debit payments."
                              },
                              "bacs_debit_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process BACS Direct Debit payments."
                              },
                              "bancontact_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Bancontact payments."
                              },
                              "blik_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process BLIK payments."
                              },
                              "boleto_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Boleto payments."
                              },
                              "card_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to collect card payments."
                              },
                              "cartes_bancaires_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Cartes Bancaires payments."
                              },
                              "cashapp_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Cash App payments."
                              },
                              "eps_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process EPS payments."
                              },
                              "fpx_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process FPX payments."
                              },
                              "gb_bank_transfer_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process UK bank transfer payments."
                              },
                              "grabpay_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process GrabPay payments."
                              },
                              "ideal_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process iDEAL payments."
                              },
                              "jcb_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process JCB card payments."
                              },
                              "jp_bank_transfer_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Japanese bank transfer payments."
                              },
                              "kakao_pay_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Kakao Pay payments."
                              },
                              "klarna_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Klarna payments."
                              },
                              "konbini_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Konbini convenience store payments."
                              },
                              "kr_card_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Korean card payments."
                              },
                              "link_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Link payments."
                              },
                              "mobilepay_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process MobilePay payments."
                              },
                              "multibanco_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Multibanco payments."
                              },
                              "mx_bank_transfer_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Mexican bank transfer payments."
                              },
                              "naver_pay_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Naver Pay payments."
                              },
                              "oxxo_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process OXXO payments."
                              },
                              "p24_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Przelewy24 (P24) payments."
                              },
                              "pay_by_bank_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Pay by Bank payments."
                              },
                              "payco_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process PAYCO payments."
                              },
                              "paynow_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process PayNow payments."
                              },
                              "promptpay_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process PromptPay payments."
                              },
                              "revolut_pay_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Revolut Pay payments."
                              },
                              "samsung_pay_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Samsung Pay payments."
                              },
                              "sepa_bank_transfer_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process SEPA bank transfer payments."
                              },
                              "sepa_debit_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process SEPA Direct Debit payments."
                              },
                              "swish_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Swish payments."
                              },
                              "twint_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process TWINT payments."
                              },
                              "us_bank_transfer_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process US bank transfer payments."
                              },
                              "zip_payments" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Zip payments."
                              }
                            },
                            "description" : "Capabilities to request on the Merchant Configuration."
                          },
                          "card_payments" : {
                            "type" : "object",
                            "properties" : {
                              "decline_on" : {
                                "type" : "object",
                                "properties" : {
                                  "avs_failure" : {
                                    "type" : "boolean",
                                    "description" : "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification."
                                  },
                                  "cvc_failure" : {
                                    "type" : "boolean",
                                    "description" : "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification."
                                  }
                                },
                                "description" : "Automatically declines certain charge types regardless of whether the card issuer accepted or declined the charge."
                              }
                            },
                            "description" : "Card payments settings."
                          },
                          "mcc" : {
                            "type" : "string",
                            "description" : "The merchant category code for the Merchant Configuration. MCCs are used to classify businesses based on the goods or services they provide."
                          },
                          "statement_descriptor" : {
                            "type" : "object",
                            "properties" : {
                              "descriptor" : {
                                "type" : "string",
                                "description" : "The default text that appears on statements for non-card charges outside of Japan. For card charges, if you don’t set a statement_descriptor_prefix, this text is also used as the statement descriptor prefix. In that case, if concatenating the statement descriptor suffix causes the combined statement descriptor to exceed 22 characters, we truncate the statement_descriptor text to limit the full descriptor to 22 characters. For more information about statement descriptors and their requirements, see the Merchant Configuration settings documentation."
                              },
                              "prefix" : {
                                "type" : "string",
                                "description" : "Default text that appears on statements for card charges outside of Japan, prefixing any dynamic statement_descriptor_suffix specified on the charge. To maximize space for the dynamic part of the descriptor, keep this text short. If you don’t specify this value, statement_descriptor is used as the prefix. For more information about statement descriptors and their requirements, see the Merchant Configuration settings documentation."
                              }
                            },
                            "description" : "Statement descriptor."
                          },
                          "support" : {
                            "type" : "object",
                            "properties" : {
                              "address" : {
                                "required" : [ "country" ],
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "A publicly available mailing address for sending support issues to."
                              },
                              "email" : {
                                "type" : "string",
                                "description" : "A publicly available email address for sending support issues to."
                              },
                              "phone" : {
                                "type" : "string",
                                "description" : "A publicly available phone number to call with support issues."
                              },
                              "url" : {
                                "type" : "string",
                                "description" : "A publicly available website for handling support issues."
                              }
                            },
                            "description" : "Publicly available contact information for sending support issues to."
                          }
                        },
                        "description" : "The Merchant configuration allows the Account to act as a connected account and collect payments facilitated by a Connect platform. You can add this configuration to your connected accounts only if you’ve completed onboarding as a Connect platform."
                      },
                      "recipient" : {
                        "type" : "object",
                        "properties" : {
                          "capabilities" : {
                            "type" : "object",
                            "properties" : {
                              "bank_accounts" : {
                                "type" : "object",
                                "properties" : {
                                  "local" : {
                                    "required" : [ "requested" ],
                                    "type" : "object",
                                    "properties" : {
                                      "requested" : {
                                        "type" : "boolean",
                                        "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                      }
                                    },
                                    "description" : "Enables this Account to receive OutboundPayments to linked bank accounts over local networks."
                                  },
                                  "wire" : {
                                    "required" : [ "requested" ],
                                    "type" : "object",
                                    "properties" : {
                                      "requested" : {
                                        "type" : "boolean",
                                        "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                      }
                                    },
                                    "description" : "Enables this Account to receive OutboundPayments to linked bank accounts over wire."
                                  }
                                },
                                "description" : "Capabilities that enable OutboundPayments to a bank account linked to this Account."
                              },
                              "cards" : {
                                "required" : [ "requested" ],
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Capabilities that enable OutboundPayments to a card linked to this Account."
                              },
                              "stripe_balance" : {
                                "type" : "object",
                                "properties" : {
                                  "stripe_transfers" : {
                                    "required" : [ "requested" ],
                                    "type" : "object",
                                    "properties" : {
                                      "requested" : {
                                        "type" : "boolean",
                                        "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                      }
                                    },
                                    "description" : "Allows the recipient to receive /v1/transfers into their Stripe Balance (/v1/balance)."
                                  }
                                },
                                "description" : "Capabilities that enable the recipient to receive money into their Stripe Balance (/v1/balance)."
                              }
                            },
                            "description" : "Capabilities to be requested on the Recipient Configuration."
                          }
                        },
                        "description" : "The Recipient Configuration allows the Account to receive funds."
                      }
                    },
                    "description" : "An Account Configuration which allows the Account to take on a key persona across Stripe products."
                  },
                  "contact_email" : {
                    "type" : "string",
                    "description" : "The default contact email address for the Account. Required when configuring the account as a merchant or recipient."
                  },
                  "dashboard" : {
                    "type" : "string",
                    "description" : "A value indicating the Stripe dashboard this Account has access to. This will depend on which configurations are enabled for this account.",
                    "enum" : [ "express", "full", "none" ]
                  },
                  "defaults" : {
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
                      },
                      "locales" : {
                        "type" : "array",
                        "description" : "The Account's preferred locales (languages), ordered by preference.",
                        "items" : {
                          "type" : "string",
                          "enum" : [ "ar-SA", "bg", "bg-BG", "cs", "cs-CZ", "da", "da-DK", "de", "de-DE", "el", "el-GR", "en", "en-AU", "en-CA", "en-GB", "en-IE", "en-IN", "en-NZ", "en-SG", "en-US", "es", "es-419", "es-ES", "et", "et-EE", "fi", "fil", "fil-PH", "fi-FI", "fr", "fr-CA", "fr-FR", "he-IL", "hr", "hr-HR", "hu", "hu-HU", "id", "id-ID", "it", "it-IT", "ja", "ja-JP", "ko", "ko-KR", "lt", "lt-LT", "lv", "lv-LV", "ms", "ms-MY", "mt", "mt-MT", "nb", "nb-NO", "nl", "nl-NL", "pl", "pl-PL", "pt", "pt-BR", "pt-PT", "ro", "ro-RO", "ru", "ru-RU", "sk", "sk-SK", "sl", "sl-SI", "sv", "sv-SE", "th", "th-TH", "tr", "tr-TR", "vi", "vi-VN", "zh", "zh-Hans", "zh-Hant-HK", "zh-Hant-TW", "zh-HK", "zh-TW" ]
                        }
                      },
                      "responsibilities" : {
                        "required" : [ "fees_collector", "losses_collector" ],
                        "type" : "object",
                        "properties" : {
                          "fees_collector" : {
                            "type" : "string",
                            "description" : "A value indicating the party responsible for collecting fees from this account.",
                            "enum" : [ "application", "stripe" ]
                          },
                          "losses_collector" : {
                            "type" : "string",
                            "description" : "A value indicating who is responsible for losses when this Account can’t pay back negative balances from payments.",
                            "enum" : [ "application", "stripe" ]
                          }
                        },
                        "description" : "Default responsibilities held by either Stripe or the platform."
                      }
                    },
                    "description" : "Default values to be used on Account Configurations."
                  },
                  "display_name" : {
                    "type" : "string",
                    "description" : "A descriptive name for the Account. This name will be surfaced in the Stripe Dashboard and on any invoices sent to the Account."
                  },
                  "identity" : {
                    "type" : "object",
                    "properties" : {
                      "attestations" : {
                        "type" : "object",
                        "properties" : {
                          "directorship_declaration" : {
                            "type" : "object",
                            "properties" : {
                              "date" : {
                                "type" : "string",
                                "description" : "The time marking when the director attestation was made. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                                "format" : "date-time"
                              },
                              "ip" : {
                                "type" : "string",
                                "description" : "The IP address from which the director attestation was made."
                              },
                              "user_agent" : {
                                "type" : "string",
                                "description" : "The user agent of the browser from which the director attestation was made."
                              }
                            },
                            "description" : "This hash is used to attest that the directors information provided to Stripe is both current and correct."
                          },
                          "ownership_declaration" : {
                            "type" : "object",
                            "properties" : {
                              "date" : {
                                "type" : "string",
                                "description" : "The time marking when the beneficial owner attestation was made. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                                "format" : "date-time"
                              },
                              "ip" : {
                                "type" : "string",
                                "description" : "The IP address from which the beneficial owner attestation was made."
                              },
                              "user_agent" : {
                                "type" : "string",
                                "description" : "The user agent of the browser from which the beneficial owner attestation was made."
                              }
                            },
                            "description" : "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct."
                          },
                          "persons_provided" : {
                            "type" : "object",
                            "properties" : {
                              "directors" : {
                                "type" : "boolean",
                                "description" : "Whether the company’s directors have been provided. Set this Boolean to true after creating all the company’s directors with the [Persons API](https://docs.stripe.com/api/v2/core/accounts/createperson)."
                              },
                              "executives" : {
                                "type" : "boolean",
                                "description" : "Whether the company’s executives have been provided. Set this Boolean to true after creating all the company’s executives with the [Persons API](https://docs.stripe.com/api/v2/core/accounts/createperson)."
                              },
                              "owners" : {
                                "type" : "boolean",
                                "description" : "Whether the company’s owners have been provided. Set this Boolean to true after creating all the company’s owners with the [Persons API](https://docs.stripe.com/api/v2/core/accounts/createperson)."
                              },
                              "ownership_exemption_reason" : {
                                "type" : "string",
                                "description" : "Reason for why the company is exempt from providing ownership information.",
                                "enum" : [ "qualified_entity_exceeds_ownership_threshold", "qualifies_as_financial_institution" ]
                              }
                            },
                            "description" : "Attestation that all Persons with a specific Relationship value have been provided."
                          },
                          "terms_of_service" : {
                            "type" : "object",
                            "properties" : {
                              "account" : {
                                "required" : [ "date", "ip" ],
                                "type" : "object",
                                "properties" : {
                                  "date" : {
                                    "type" : "string",
                                    "description" : "The time when the Account's representative accepted the terms of service. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                                    "format" : "date-time"
                                  },
                                  "ip" : {
                                    "type" : "string",
                                    "description" : "The IP address from which the Account's representative accepted the terms of service."
                                  },
                                  "user_agent" : {
                                    "type" : "string",
                                    "description" : "The user agent of the browser from which the Account's representative accepted the terms of service."
                                  }
                                },
                                "description" : "Details on the Account's acceptance of the [Stripe Services Agreement](https://docs.stripe.com/connect/updating-accounts#tos-acceptance)."
                              }
                            },
                            "description" : "Attestations of accepted terms of service agreements."
                          }
                        },
                        "description" : "Attestations from the identity's key people, e.g. owners, executives, directors."
                      },
                      "business_details" : {
                        "type" : "object",
                        "properties" : {
                          "address" : {
                            "required" : [ "country" ],
                            "type" : "object",
                            "properties" : {
                              "city" : {
                                "type" : "string",
                                "description" : "City, district, suburb, town, or village."
                              },
                              "country" : {
                                "type" : "string",
                                "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                              },
                              "line1" : {
                                "type" : "string",
                                "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                              },
                              "line2" : {
                                "type" : "string",
                                "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                              },
                              "postal_code" : {
                                "type" : "string",
                                "description" : "ZIP or postal code."
                              },
                              "state" : {
                                "type" : "string",
                                "description" : "State, county, province, or region."
                              },
                              "town" : {
                                "type" : "string",
                                "description" : "Town or cho-me."
                              }
                            },
                            "description" : "The business registration address of the business entity."
                          },
                          "annual_revenue" : {
                            "type" : "object",
                            "properties" : {
                              "amount" : {
                                "type" : "object",
                                "properties" : {
                                  "amount" : {
                                    "type" : "integer",
                                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                                    "nullable" : false
                                  },
                                  "currency" : {
                                    "type" : "string",
                                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                                    "nullable" : false
                                  }
                                },
                                "description" : "A non-negative integer representing the amount in the smallest currency unit."
                              },
                              "fiscal_year_end" : {
                                "type" : "string",
                                "description" : "The close-out date of the preceding fiscal year in ISO 8601 format. E.g. 2023-12-31 for the 31st of December, 2023."
                              }
                            },
                            "description" : "The business gross annual revenue for its preceding fiscal year."
                          },
                          "documents" : {
                            "type" : "object",
                            "properties" : {
                              "bank_account_ownership_verification" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that support the bank account ownership verification requirement. Must be a document associated with the account’s primary active bank account that displays the last 4 digits of the account number, either a statement or a check."
                              },
                              "company_license" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof of a company’s license to operate."
                              },
                              "company_memorandum_of_association" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents showing the company’s Memorandum of Association."
                              },
                              "company_ministerial_decree" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "Certain countries only: One or more documents showing the ministerial decree legalizing the company’s establishment."
                              },
                              "company_registration_verification" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof of a company’s registration with the appropriate local authorities."
                              },
                              "company_tax_id_verification" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof of a company’s tax ID."
                              },
                              "primary_verification" : {
                                "required" : [ "front_back", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "front_back" : {
                                    "required" : [ "front" ],
                                    "type" : "object",
                                    "properties" : {
                                      "back" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      },
                                      "front" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      }
                                    },
                                    "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the verification document. Currently supports `front_back` only.",
                                    "enum" : [ "front_back" ]
                                  }
                                },
                                "description" : "A document verifying the business."
                              },
                              "proof_of_registration" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents showing the company’s proof of registration with the national business registry."
                              },
                              "proof_of_ultimate_beneficial_ownership" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof of ultimate beneficial ownership."
                              }
                            },
                            "description" : "A document verifying the business."
                          },
                          "doing_business_as" : {
                            "type" : "string",
                            "description" : "The name which is used by the business."
                          },
                          "estimated_worker_count" : {
                            "type" : "integer",
                            "description" : "An estimated upper bound of employees, contractors, vendors, etc. currently working for the business."
                          },
                          "id_numbers" : {
                            "type" : "array",
                            "description" : "The ID numbers of a business entity.",
                            "items" : {
                              "required" : [ "type", "value" ],
                              "type" : "object",
                              "properties" : {
                                "registrar" : {
                                  "type" : "string",
                                  "description" : "The registrar of the ID number (Only valid for DE ID number types)."
                                },
                                "type" : {
                                  "type" : "string",
                                  "description" : "Open Enum. The ID number type of a business entity.",
                                  "enum" : [ "ae_crn", "ae_vat", "at_fn", "au_abn", "au_acn", "au_in", "be_cbe", "bg_uic", "br_cnpj", "ca_cn", "ca_crarr", "ca_neq", "ca_rid", "ch_chid", "ch_uid", "cy_tic", "cz_ico", "de_hrn", "de_vat", "dk_cvr", "ee_rk", "es_cif", "fi_yt", "fr_siren", "fr_vat", "gb_crn", "gi_crn", "gr_gemi", "hk_br", "hk_cr", "hk_mbs", "hu_cjs", "ie_crn", "it_rea", "it_vat", "jp_cn", "li_uid", "lt_ccrn", "lu_rcs", "lv_urn", "mt_crn", "mx_rfc", "my_brn", "my_coid", "my_sst", "nl_kvk", "no_orgnr", "nz_bn", "pl_regon", "pt_vat", "ro_cui", "se_orgnr", "sg_uen", "si_msp", "sk_ico", "th_crn", "th_prn", "th_tin", "us_ein" ]
                                },
                                "value" : {
                                  "type" : "string",
                                  "description" : "The value of the ID number."
                                }
                              }
                            }
                          },
                          "monthly_estimated_revenue" : {
                            "type" : "object",
                            "properties" : {
                              "amount" : {
                                "type" : "object",
                                "properties" : {
                                  "amount" : {
                                    "type" : "integer",
                                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                                    "nullable" : false
                                  },
                                  "currency" : {
                                    "type" : "string",
                                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                                    "nullable" : false
                                  }
                                },
                                "description" : "A non-negative integer representing the amount in the smallest currency unit."
                              }
                            },
                            "description" : "An estimate of the monthly revenue of the business."
                          },
                          "phone" : {
                            "type" : "string",
                            "description" : "The phone number of the Business Entity."
                          },
                          "product_description" : {
                            "type" : "string",
                            "description" : "Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes."
                          },
                          "registered_name" : {
                            "type" : "string",
                            "description" : "The business legal name."
                          },
                          "script_addresses" : {
                            "type" : "object",
                            "properties" : {
                              "kana" : {
                                "required" : [ "country" ],
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "Kana Address."
                              },
                              "kanji" : {
                                "required" : [ "country" ],
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "Kanji Address."
                              }
                            },
                            "description" : "The business registration address of the business entity in non latin script."
                          },
                          "script_names" : {
                            "type" : "object",
                            "properties" : {
                              "kana" : {
                                "type" : "object",
                                "properties" : {
                                  "registered_name" : {
                                    "type" : "string",
                                    "description" : "Registered name of the business."
                                  }
                                },
                                "description" : "Kana name."
                              },
                              "kanji" : {
                                "type" : "object",
                                "properties" : {
                                  "registered_name" : {
                                    "type" : "string",
                                    "description" : "Registered name of the business."
                                  }
                                },
                                "description" : "Kanji name."
                              }
                            },
                            "description" : "The business legal name in non latin script."
                          },
                          "structure" : {
                            "type" : "string",
                            "description" : "The category identifying the legal structure of the business.",
                            "enum" : [ "free_zone_establishment", "free_zone_llc", "governmental_unit", "government_instrumentality", "incorporated_non_profit", "incorporated_partnership", "llc", "multi_member_llc", "private_company", "private_corporation", "private_partnership", "public_company", "public_corporation", "public_partnership", "registered_charity", "single_member_llc", "sole_establishment", "sole_proprietorship", "tax_exempt_government_instrumentality", "unincorporated_association", "unincorporated_non_profit", "unincorporated_partnership" ]
                          },
                          "url" : {
                            "type" : "string",
                            "description" : "The business's publicly available website."
                          }
                        },
                        "description" : "Information about the company or business."
                      },
                      "country" : {
                        "type" : "string",
                        "description" : "The country in which the account holder resides, or in which the business is legally established. This should be an [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code."
                      },
                      "entity_type" : {
                        "type" : "string",
                        "description" : "The entity type.",
                        "enum" : [ "company", "government_entity", "individual", "non_profit" ]
                      },
                      "individual" : {
                        "type" : "object",
                        "properties" : {
                          "additional_addresses" : {
                            "type" : "array",
                            "description" : "Additional addresses associated with the individual.",
                            "items" : {
                              "required" : [ "country", "purpose" ],
                              "type" : "object",
                              "properties" : {
                                "city" : {
                                  "type" : "string",
                                  "description" : "City, district, suburb, town, or village."
                                },
                                "country" : {
                                  "type" : "string",
                                  "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                },
                                "line1" : {
                                  "type" : "string",
                                  "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                },
                                "line2" : {
                                  "type" : "string",
                                  "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                },
                                "postal_code" : {
                                  "type" : "string",
                                  "description" : "ZIP or postal code."
                                },
                                "purpose" : {
                                  "type" : "string",
                                  "description" : "Purpose of additional address.",
                                  "enum" : [ "registered" ]
                                },
                                "state" : {
                                  "type" : "string",
                                  "description" : "State, county, province, or region."
                                },
                                "town" : {
                                  "type" : "string",
                                  "description" : "Town or cho-me."
                                }
                              }
                            }
                          },
                          "additional_names" : {
                            "type" : "array",
                            "description" : "Additional names (e.g. aliases) associated with the individual.",
                            "items" : {
                              "required" : [ "purpose" ],
                              "type" : "object",
                              "properties" : {
                                "full_name" : {
                                  "type" : "string",
                                  "description" : "The person's full name."
                                },
                                "given_name" : {
                                  "type" : "string",
                                  "description" : "The person's first or given name."
                                },
                                "purpose" : {
                                  "type" : "string",
                                  "description" : "The purpose or type of the additional name.",
                                  "enum" : [ "alias", "maiden" ]
                                },
                                "surname" : {
                                  "type" : "string",
                                  "description" : "The person's last or family name."
                                }
                              }
                            }
                          },
                          "address" : {
                            "required" : [ "country" ],
                            "type" : "object",
                            "properties" : {
                              "city" : {
                                "type" : "string",
                                "description" : "City, district, suburb, town, or village."
                              },
                              "country" : {
                                "type" : "string",
                                "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                              },
                              "line1" : {
                                "type" : "string",
                                "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                              },
                              "line2" : {
                                "type" : "string",
                                "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                              },
                              "postal_code" : {
                                "type" : "string",
                                "description" : "ZIP or postal code."
                              },
                              "state" : {
                                "type" : "string",
                                "description" : "State, county, province, or region."
                              },
                              "town" : {
                                "type" : "string",
                                "description" : "Town or cho-me."
                              }
                            },
                            "description" : "The individual's residential address."
                          },
                          "date_of_birth" : {
                            "required" : [ "day", "month", "year" ],
                            "type" : "object",
                            "properties" : {
                              "day" : {
                                "type" : "integer",
                                "description" : "The day of birth."
                              },
                              "month" : {
                                "type" : "integer",
                                "description" : "The month of birth."
                              },
                              "year" : {
                                "type" : "integer",
                                "description" : "The year of birth."
                              }
                            },
                            "description" : "The individual's date of birth."
                          },
                          "documents" : {
                            "type" : "object",
                            "properties" : {
                              "company_authorization" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof that this person is authorized to represent the company."
                              },
                              "passport" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents showing the person’s passport page with photo and personal data."
                              },
                              "primary_verification" : {
                                "required" : [ "front_back", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "front_back" : {
                                    "required" : [ "front" ],
                                    "type" : "object",
                                    "properties" : {
                                      "back" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      },
                                      "front" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      }
                                    },
                                    "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the verification document. Currently supports `front_back` only.",
                                    "enum" : [ "front_back" ]
                                  }
                                },
                                "description" : "An identifying document showing the person's name, either a passport or local ID card."
                              },
                              "secondary_verification" : {
                                "required" : [ "front_back", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "front_back" : {
                                    "required" : [ "front" ],
                                    "type" : "object",
                                    "properties" : {
                                      "back" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      },
                                      "front" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      }
                                    },
                                    "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the verification document. Currently supports `front_back` only.",
                                    "enum" : [ "front_back" ]
                                  }
                                },
                                "description" : "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company."
                              },
                              "visa" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents showing the person’s visa required for living in the country where they are residing."
                              }
                            },
                            "description" : "Documents that may be submitted to satisfy various informational requests."
                          },
                          "email" : {
                            "type" : "string",
                            "description" : "The individual's email address."
                          },
                          "given_name" : {
                            "type" : "string",
                            "description" : "The individual's first name."
                          },
                          "id_numbers" : {
                            "type" : "array",
                            "description" : "The identification numbers (e.g., SSN) associated with the individual.",
                            "items" : {
                              "required" : [ "type", "value" ],
                              "type" : "object",
                              "properties" : {
                                "type" : {
                                  "type" : "string",
                                  "description" : "The ID number type of an individual.",
                                  "enum" : [ "ae_eid", "br_cpf", "de_stn", "hk_id", "mx_rfc", "my_nric", "nl_bsn", "sg_fin", "sg_nric", "th_lc", "th_pin", "us_itin", "us_itin_last_4", "us_ssn", "us_ssn_last_4" ]
                                },
                                "value" : {
                                  "type" : "string",
                                  "description" : "The value of the ID number."
                                }
                              }
                            }
                          },
                          "legal_gender" : {
                            "type" : "string",
                            "description" : "The individual's gender (International regulations require either \"male\" or \"female\").",
                            "enum" : [ "female", "male" ]
                          },
                          "metadata" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            },
                            "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
                          },
                          "nationalities" : {
                            "type" : "array",
                            "description" : "The countries where the individual is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "phone" : {
                            "type" : "string",
                            "description" : "The individual's phone number."
                          },
                          "political_exposure" : {
                            "type" : "string",
                            "description" : "The individual's political exposure.",
                            "enum" : [ "existing", "none" ]
                          },
                          "relationship" : {
                            "type" : "object",
                            "properties" : {
                              "director" : {
                                "type" : "boolean",
                                "description" : "Whether the person is a director of the account's identity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations."
                              },
                              "executive" : {
                                "type" : "boolean",
                                "description" : "Whether the person has significant responsibility to control, manage, or direct the organization."
                              },
                              "owner" : {
                                "type" : "boolean",
                                "description" : "Whether the person is an owner of the account’s identity."
                              },
                              "percent_ownership" : {
                                "type" : "string",
                                "description" : "The percent owned by the person of the account's legal entity.",
                                "format" : "decimal"
                              },
                              "title" : {
                                "type" : "string",
                                "description" : "The person's title (e.g., CEO, Support Engineer)."
                              }
                            },
                            "description" : "The relationship that this individual has with the account's identity."
                          },
                          "script_addresses" : {
                            "type" : "object",
                            "properties" : {
                              "kana" : {
                                "required" : [ "country" ],
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "Kana Address."
                              },
                              "kanji" : {
                                "required" : [ "country" ],
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "Kanji Address."
                              }
                            },
                            "description" : "The script addresses (e.g., non-Latin characters) associated with the individual."
                          },
                          "script_names" : {
                            "type" : "object",
                            "properties" : {
                              "kana" : {
                                "type" : "object",
                                "properties" : {
                                  "given_name" : {
                                    "type" : "string",
                                    "description" : "The person's first or given name."
                                  },
                                  "surname" : {
                                    "type" : "string",
                                    "description" : "The person's last or family name."
                                  }
                                },
                                "description" : "Persons name in kana script."
                              },
                              "kanji" : {
                                "type" : "object",
                                "properties" : {
                                  "given_name" : {
                                    "type" : "string",
                                    "description" : "The person's first or given name."
                                  },
                                  "surname" : {
                                    "type" : "string",
                                    "description" : "The person's last or family name."
                                  }
                                },
                                "description" : "Persons name in kanji script."
                              }
                            },
                            "description" : "The individuals primary name in non latin script."
                          },
                          "surname" : {
                            "type" : "string",
                            "description" : "The individual's last name."
                          }
                        },
                        "description" : "Information about the person represented by the account."
                      }
                    },
                    "description" : "Information about the company, individual, and business represented by the Account."
                  },
                  "include" : {
                    "type" : "array",
                    "description" : "Additional fields to include in the response.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "configuration.customer", "configuration.merchant", "configuration.recipient", "defaults", "identity", "requirements" ]
                    }
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.account_controller_express_dash_without_application_losses_or_fees"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_controller_stripe_pricing_platform_liable"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_controller_unsupported_configuration"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_controller_unsupported_configuration_private_preview"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_country_unsupported_currency"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_create_activation_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_creation_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_characters_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_country_identity_country_mismatch"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_postal_code_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_state_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_town_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.can_create_platform_owned_onboarding_accounts_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.cannot_create_connected_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.cannot_create_new_account_rejected"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_cannot_be_unrequested_due_to_other_capability_requirement"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_for_dashboard_type"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_for_entity_type_in_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_in_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_in_platform_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_without_other_capability"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_without_other_capability_in_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.configuration_creation_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.connect_identity_not_verified"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.connect_profile_not_submitted"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.custom_account_beta"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.date_of_birth_age_restriction"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.date_of_birth_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.default_currency_immutable"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.default_payment_method_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.default_payment_method_invalid_type"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.document_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.document_purpose_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.email_domain_invalid_for_recipient"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.email_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.entity_type_not_supported_in_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.id_number_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.identity_country_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.incorrect_id_number_for_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_id_number_for_structure"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_id_number_registrar"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invoice_rendering_template_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.ip_address_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.mcc_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.non_jp_kana_kanji_address"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.person_percent_ownership_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.phone_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.platform_registration_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.script_characters_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.shipping_address_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.shipping_name_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.statement_descriptor_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.structure_incompatible_for_entity_type_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.test_clock_disallowed_on_live_mode"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.test_clock_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.test_clocks_advance_in_progress"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.test_clocks_customer_limit_reached"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.tos_acceptance_on_behalf_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.unsupported_field_for_configs"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.unsupported_identity_field_for_configs"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.url_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/outbound_transfers/{id}" : {
      "get" : {
        "description" : "Retrieves the details of an existing OutboundTransfer by passing the unique OutboundTransfer ID from either the OutboundPayment create or list response.",
        "operationId" : "GetMoneyManagementOutboundTransfersId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the OutboundTransfer to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_transfer"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/received_credits/{id}" : {
      "get" : {
        "description" : "Retrieve a ReceivedCredit by ID.",
        "operationId" : "GetMoneyManagementReceivedCreditsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the ReceivedCredit to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.received_credit"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/event_destinations" : {
      "get" : {
        "description" : "Lists all event destinations.",
        "operationId" : "GetCoreEventDestinations",
        "parameters" : [ {
          "name" : "include",
          "in" : "query",
          "description" : "Additional fields to include in the response. Currently supports `webhook_endpoint.url`.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "webhook_endpoint.url" ]
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The page size.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The requested page.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "List of event destinations.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.core.event_destination"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Create a new event destination.",
        "operationId" : "PostCoreEventDestinations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "enabled_events", "event_payload", "name", "type" ],
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "description" : "An optional description of what the event destination is used for."
                  },
                  "enabled_events" : {
                    "type" : "array",
                    "description" : "The list of events to enable for this endpoint.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "event_payload" : {
                    "type" : "string",
                    "description" : "Payload type of events being subscribed to.",
                    "enum" : [ "snapshot", "thin" ]
                  },
                  "events_from" : {
                    "type" : "array",
                    "description" : "Where events should be routed from.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "other_accounts", "self" ]
                    }
                  },
                  "include" : {
                    "type" : "array",
                    "description" : "Additional fields to include in the response.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "webhook_endpoint.signing_secret", "webhook_endpoint.url" ]
                    }
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Metadata."
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Event destination name."
                  },
                  "snapshot_api_version" : {
                    "type" : "string",
                    "description" : "If using the snapshot event payload, the API version events are rendered as."
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Event destination type.",
                    "enum" : [ "amazon_eventbridge", "webhook_endpoint" ]
                  },
                  "amazon_eventbridge" : {
                    "required" : [ "aws_account_id", "aws_region" ],
                    "type" : "object",
                    "properties" : {
                      "aws_account_id" : {
                        "type" : "string",
                        "description" : "The AWS account ID."
                      },
                      "aws_region" : {
                        "type" : "string",
                        "description" : "The region of the AWS event source."
                      }
                    },
                    "description" : "Amazon EventBridge configuration."
                  },
                  "webhook_endpoint" : {
                    "required" : [ "url" ],
                    "type" : "object",
                    "properties" : {
                      "url" : {
                        "type" : "string",
                        "description" : "The URL of the webhook endpoint."
                      }
                    },
                    "description" : "Webhook endpoint configuration."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/test_helpers/financial_addresses/{id}/credit" : {
      "post" : {
        "description" : "Simulate crediting a FinancialAddress in a Sandbox environment. This can be used to add virtual funds and increase your balance for testing.",
        "operationId" : "PostTestHelpersFinancialAddressesIdCredit",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the FinancialAddress to credit.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "amount", "network" ],
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "integer",
                        "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                        "nullable" : false
                      },
                      "currency" : {
                        "type" : "string",
                        "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "nullable" : false
                      }
                    },
                    "description" : "Object containing the amount value and currency to credit."
                  },
                  "network" : {
                    "type" : "string",
                    "description" : "Open Enum. The network to use in simulating the funds flow. This will be the reflected in the resulting ReceivedCredit.",
                    "enum" : [ "ach", "fps", "rtp", "wire" ]
                  },
                  "statement_descriptor" : {
                    "type" : "string",
                    "description" : "String explaining funds flow. Use this field to populate the statement descriptor of the ReceivedCredit created as an eventual result of this simulation."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/financial_address_credit_simulation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.financial_account_balance_does_not_support_currency"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.financial_address_not_active"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.financial_addresses_api_only_in_sandbox"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/financial_accounts" : {
      "get" : {
        "description" : "Lists FinancialAccounts in this compartment.",
        "operationId" : "GetMoneyManagementFinancialAccounts",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The page limit.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "Financial Accounts retrieved.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.financial_account"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/events/{id}" : {
      "get" : {
        "description" : "Retrieves the details of an event.",
        "operationId" : "GetCoreEventsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for the object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/money_management/inbound_transfers" : {
      "get" : {
        "description" : "Retrieves a list of InboundTransfers.",
        "operationId" : "GetMoneyManagementInboundTransfers",
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "Filter for objects created at the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gt",
          "in" : "query",
          "description" : "Filter for objects created after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gte",
          "in" : "query",
          "description" : "Filter for objects created on or after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lt",
          "in" : "query",
          "description" : "Filter for objects created before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lte",
          "in" : "query",
          "description" : "Filter for objects created on or before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The page limit.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "The list of retrieved InboundTransfers.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.inbound_transfer"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "InboundTransfers APIs are used to create, retrieve or list InboundTransfers.",
        "operationId" : "PostMoneyManagementInboundTransfers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "amount", "from", "to" ],
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "integer",
                        "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                        "nullable" : false
                      },
                      "currency" : {
                        "type" : "string",
                        "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "nullable" : false
                      }
                    },
                    "description" : "The amount, in specified currency, by which the FinancialAccount balance will increase due to the InboundTransfer."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "An optional, freeform description field intended to store metadata."
                  },
                  "from" : {
                    "required" : [ "payment_method" ],
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "An optional currency field used to specify which currency is debited from the Payment Method.\nSince many Payment Methods support only one currency, this field is optional."
                      },
                      "payment_method" : {
                        "type" : "string",
                        "description" : "ID of the Payment Method using which IBT will be made."
                      }
                    },
                    "description" : "Object containing details about where the funds will originate from."
                  },
                  "to" : {
                    "required" : [ "currency", "financial_account" ],
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "The currency in which funds will land in."
                      },
                      "financial_account" : {
                        "type" : "string",
                        "description" : "The FinancialAccount that funds will land in."
                      }
                    },
                    "description" : "Object containing details about where the funds will land."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.inbound_transfer"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.inbound_transfer_from_payment_method_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.inbound_transfer_from_payment_method_type_unsupported"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.inbound_transfer_from_payment_method_unverified"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.inbound_transfer_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.inbound_transfer_to_financial_account_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/vault/gb_bank_accounts/{id}/acknowledge_confirmation_of_payee" : {
      "post" : {
        "description" : "Confirm that you have received the result of the Confirmation of Payee request, and that you are okay with\nproceeding to pay out to this bank account despite the account not matching, partially matching, or the service\nbeing unavailable. Once you confirm this, you will be able to send OutboundPayments, but this may lead to\nfunds being sent to the wrong account, which we might not be able to recover.",
        "operationId" : "PostCoreVaultGbBankAccountsIdAcknowledgeConfirmationOfPayee",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The GbBankAccount whose result needs to be acknowledged.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.vault.gb_bank_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/received_debits" : {
      "get" : {
        "description" : "Retrieves a list of ReceivedDebits, given the selected filters.",
        "operationId" : "GetMoneyManagementReceivedDebits",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The page limit.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "The retrieved ReceivedDebits.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.received_debit"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/payout_methods" : {
      "get" : {
        "description" : "List objects that adhere to the PayoutMethod interface.",
        "operationId" : "GetMoneyManagementPayoutMethods",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The page size.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The requested page.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "usage_status",
          "in" : "query",
          "description" : "Usage status filter.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "object",
            "properties" : {
              "payments" : {
                "type" : "array",
                "description" : "List of payments status to filter by.",
                "items" : {
                  "type" : "string",
                  "enum" : [ "eligible", "invalid", "requires_action" ]
                }
              },
              "transfers" : {
                "type" : "array",
                "description" : "List of transfers status to filter by.",
                "items" : {
                  "type" : "string",
                  "enum" : [ "eligible", "invalid", "requires_action" ]
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "The list of payout methods.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.payout_method"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/inbound_transfers/{id}" : {
      "get" : {
        "description" : "Retrieve an InboundTransfer by ID.",
        "operationId" : "GetMoneyManagementInboundTransfersId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the InboundTransfer to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.inbound_transfer"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/adjustments/{id}" : {
      "get" : {
        "description" : "Retrieves the details of an Adjustment by ID.",
        "operationId" : "GetMoneyManagementAdjustmentsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Adjustment to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.adjustment"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/outbound_setup_intents/{id}" : {
      "get" : {
        "description" : "Retrieve an OutboundSetupIntent object.",
        "operationId" : "GetMoneyManagementOutboundSetupIntentsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the OutboundSetupIntent object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_setup_intent"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "Update an OutboundSetupIntent object.",
        "operationId" : "PostMoneyManagementOutboundSetupIntentsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the OutboundSetupIntent object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "payout_method" : {
                    "type" : "string",
                    "description" : "If provided, the existing payout method resource to link to this outbound setup intent."
                  },
                  "payout_method_data" : {
                    "required" : [ "type" ],
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "description" : "Closed Enum. The type of payout method to be created/updated.",
                        "enum" : [ "bank_account", "card" ]
                      },
                      "bank_account" : {
                        "required" : [ "account_number", "country" ],
                        "type" : "object",
                        "properties" : {
                          "account_number" : {
                            "type" : "string",
                            "description" : "The account number or IBAN of the bank account."
                          },
                          "bank_account_type" : {
                            "type" : "string",
                            "description" : "Closed Enum. The type of the bank account (checking or savings).",
                            "enum" : [ "checking", "savings" ]
                          },
                          "branch_number" : {
                            "type" : "string",
                            "description" : "The branch number of the bank account, if present."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "The country code of the bank account."
                          },
                          "routing_number" : {
                            "type" : "string",
                            "description" : "The routing number of the bank account, if present."
                          },
                          "swift_code" : {
                            "type" : "string",
                            "description" : "The swift code of the bank account, if present."
                          }
                        },
                        "description" : "The type specific details of the bank account payout method."
                      },
                      "card" : {
                        "type" : "object",
                        "properties" : {
                          "exp_month" : {
                            "type" : "string",
                            "description" : "The expiration month of the card."
                          },
                          "exp_year" : {
                            "type" : "string",
                            "description" : "The expiration year of the card."
                          },
                          "number" : {
                            "type" : "string",
                            "description" : "The card number. This can only be passed when creating a new credential on an outbound setup intent in the requires_payout_method state."
                          }
                        },
                        "description" : "The type specific details of the card payout method.",
                        "x-stripeNotPublic" : true
                      }
                    },
                    "description" : "If no payout_method provided, used to create the underlying credential that is set up for outbound money movement.\nIf a payout_method provided, used to update data on the credential linked to this setup intent."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_setup_intent"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.archived_payout_method_card"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.blocked_payout_method_card"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.cannot_update_terminal_outbound_setup_intent"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_payout_method_card"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/vault/gb_bank_accounts/{id}/archive" : {
      "post" : {
        "description" : "Archive a GbBankAccount object. Archived GbBankAccount objects cannot be used as outbound destinations\nand will not appear in the outbound destination list.",
        "operationId" : "PostCoreVaultGbBankAccountsIdArchive",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the GbBankAccount object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.vault.gb_bank_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/financial_addresses" : {
      "get" : {
        "description" : "List all FinancialAddresses for a FinancialAccount.",
        "operationId" : "GetMoneyManagementFinancialAddresses",
        "parameters" : [ {
          "name" : "financial_account",
          "in" : "query",
          "description" : "The ID of the FinancialAccount for which FinancialAddresses are to be returned.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Open Enum. A list of fields to reveal in the FinancialAddresses returned.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "credentials.gb_bank_account.account_number", "credentials.us_bank_account.account_number" ]
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The page limit.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "A list of FinancialAddresses.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.financial_address"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.financial_address_invalid_page_token"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "Create a new FinancialAddress for a FinancialAccount.",
        "operationId" : "PostMoneyManagementFinancialAddresses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "currency", "financial_account" ],
                "type" : "object",
                "properties" : {
                  "currency" : {
                    "type" : "string",
                    "description" : "Open Enum. The currency the FinancialAddress should support. Currently, only the `usd` and `gbp` values are supported."
                  },
                  "financial_account" : {
                    "type" : "string",
                    "description" : "The ID of the FinancialAccount the new FinancialAddress should be associated with."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.financial_address"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.financial_account_balance_does_not_support_currency"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.financial_account_feature_restricted"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.financial_account_not_in_open_status"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.financial_addresses_creation_limit_exceeded"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/received_debits/{id}" : {
      "get" : {
        "description" : "Retrieves a single ReceivedDebit by ID.",
        "operationId" : "GetMoneyManagementReceivedDebitsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the ReceivedDebit to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.received_debit"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/billing/meter_event_adjustments" : {
      "post" : {
        "description" : "Creates a meter event adjustment to cancel a previously sent meter event.",
        "operationId" : "PostBillingMeterEventAdjustments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "cancel", "event_name", "type" ],
                "type" : "object",
                "properties" : {
                  "cancel" : {
                    "required" : [ "identifier" ],
                    "type" : "object",
                    "properties" : {
                      "identifier" : {
                        "type" : "string",
                        "description" : "Unique identifier for the event. You can only cancel events within 24 hours of Stripe receiving them."
                      }
                    },
                    "description" : "Specifies which event to cancel."
                  },
                  "event_name" : {
                    "type" : "string",
                    "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Specifies whether to cancel a single event or a range of events for a time period. Time period cancellation is not supported yet.",
                    "enum" : [ "cancel" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.billing.meter_event_adjustment"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.invalid_cancel_configuration"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/money_management/outbound_payments/{id}/cancel" : {
      "post" : {
        "description" : "Cancels an OutboundPayment. Only processing OutboundPayments can be canceled.",
        "operationId" : "PostMoneyManagementOutboundPaymentsIdCancel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the OutboundPayment to cancel.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_payment"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_already_canceled"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_not_cancelable"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/account_links" : {
      "post" : {
        "description" : "Creates an AccountLink object that includes a single-use Stripe URL that the merchant can redirect their user to in order to take them to a Stripe-hosted application such as Recipient Onboarding.",
        "operationId" : "PostCoreAccountLinks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "account", "use_case" ],
                "type" : "object",
                "properties" : {
                  "account" : {
                    "type" : "string",
                    "description" : "The ID of the Account to create link for."
                  },
                  "use_case" : {
                    "required" : [ "type" ],
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "description" : "Open Enum. The type of AccountLink the user is requesting.",
                        "enum" : [ "account_onboarding", "account_update" ]
                      },
                      "account_onboarding" : {
                        "required" : [ "configurations", "refresh_url" ],
                        "type" : "object",
                        "properties" : {
                          "configurations" : {
                            "type" : "array",
                            "description" : "Open Enum. A v2/account can be configured to enable certain functionality. The configuration param targets the v2/account_link to collect information for the specified v2/account configuration/s.",
                            "items" : {
                              "type" : "string",
                              "enum" : [ "recipient" ]
                            }
                          },
                          "refresh_url" : {
                            "type" : "string",
                            "description" : "The URL the user will be redirected to if the AccountLink is expired, has been used, or is otherwise invalid. The URL you specify should attempt to generate a new AccountLink with the same parameters used to create the original AccountLink, then redirect the user to the new AccountLink’s URL so they can continue the flow. If a new AccountLink cannot be generated or the redirect fails you should display a useful error to the user. Please make sure to implement authentication before redirecting the user in case this URL is leaked to a third party."
                          },
                          "return_url" : {
                            "type" : "string",
                            "description" : "The URL that the user will be redirected to upon completing the linked flow."
                          }
                        },
                        "description" : "Indicates that the AccountLink provided should onboard an account."
                      },
                      "account_update" : {
                        "required" : [ "configurations", "refresh_url" ],
                        "type" : "object",
                        "properties" : {
                          "configurations" : {
                            "type" : "array",
                            "description" : "Open Enum. A v2/account can be configured to enable certain functionality. The configuration param targets the v2/account_link to collect information for the specified v2/account configuration/s.",
                            "items" : {
                              "type" : "string",
                              "enum" : [ "recipient" ]
                            }
                          },
                          "refresh_url" : {
                            "type" : "string",
                            "description" : "The URL the user will be redirected to if the AccountLink is expired, has been used, or is otherwise invalid. The URL you specify should attempt to generate a new AccountLink with the same parameters used to create the original AccountLink, then redirect the user to the new AccountLink’s URL so they can continue the flow. If a new AccountLink cannot be generated or the redirect fails you should display a useful error to the user. Please make sure to implement authentication before redirecting the user in case this URL is leaked to a third party."
                          },
                          "return_url" : {
                            "type" : "string",
                            "description" : "The URL that the user will be redirected to upon completing the linked flow."
                          }
                        },
                        "description" : "Indicates that the AccountLink provided should update a previously onboarded account."
                      }
                    },
                    "description" : "The use case of the AccountLink."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.account_link"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/outbound_transfers" : {
      "get" : {
        "description" : "Returns a list of OutboundTransfers that match the provided filters.",
        "operationId" : "GetMoneyManagementOutboundTransfers",
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "Filter for objects created at the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gt",
          "in" : "query",
          "description" : "Filter for objects created after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gte",
          "in" : "query",
          "description" : "Filter for objects created on or after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lt",
          "in" : "query",
          "description" : "Filter for objects created before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lte",
          "in" : "query",
          "description" : "Filter for objects created on or before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token to use to retrieve the page being requested.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Closed Enum. Only return OutboundTransfers with this status.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canceled", "failed", "posted", "processing", "returned" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "The OutboundTransfers retrieved.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.outbound_transfer"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_invalid_page_token"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "Creates an OutboundTransfer.",
        "operationId" : "PostMoneyManagementOutboundTransfers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "amount", "from", "to" ],
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "integer",
                        "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                        "nullable" : false
                      },
                      "currency" : {
                        "type" : "string",
                        "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "nullable" : false
                      }
                    },
                    "description" : "The \"presentment amount\" for the OutboundPayment."
                  },
                  "delivery_options" : {
                    "type" : "object",
                    "properties" : {
                      "bank_account" : {
                        "type" : "string",
                        "description" : "Open Enum. Method for bank account.",
                        "enum" : [ "automatic", "local", "wire" ]
                      }
                    },
                    "description" : "Delivery options to be used to send the OutboundTransfer."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "An arbitrary string attached to the OutboundTransfer. Often useful for displaying to users."
                  },
                  "from" : {
                    "required" : [ "currency", "financial_account" ],
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "Describes the FinancialAmount's currency drawn from."
                      },
                      "financial_account" : {
                        "type" : "string",
                        "description" : "The FinancialAccount that funds were pulled from."
                      }
                    },
                    "description" : "The FinancialAccount to pull funds from."
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
                  },
                  "to" : {
                    "required" : [ "payout_method" ],
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "Describes the currency to send to the recipient.\nIf included, this currency must match a currency supported by the destination.\nCan be omitted in the following cases:\n- destination only supports one currency\n- destination supports multiple currencies and one of the currencies matches the FA currency\n- destination supports multiple currencies and one of the currencies matches the presentment currency\nNote - when both FA currency and presentment currency are supported, we pick the FA currency to minimize FX."
                      },
                      "payout_method" : {
                        "type" : "string",
                        "description" : "The payout method which the OutboundTransfer uses to send payout."
                      }
                    },
                    "description" : "To which payout method to send the OutboundTransfer."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_transfer"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_amount_too_large_for_selected_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_card_payout_method_unsupported"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_cop_not_accepted"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_from_balance_type_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_from_balance_unsupported_currency"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_from_financial_account_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_insufficient_funds"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_invalid_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_invalid_payout_method_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_method_not_supported"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_no_suitable_methods_for_large_amount"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/outbound_setup_intents/{id}/cancel" : {
      "post" : {
        "description" : "Cancel an OutboundSetupIntent object.",
        "operationId" : "PostMoneyManagementOutboundSetupIntentsIdCancel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the OutboundSetupIntent object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_setup_intent"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.cannot_cancel_terminal_outbound_setup_intent"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/accounts/{account_id}/persons" : {
      "get" : {
        "description" : "Returns a list of Persons associated with an Account.",
        "operationId" : "GetCoreAccountsAccountIdPersons",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Account the Persons are associated with.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The upper limit on the number of accounts returned by the List Account request.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token to navigate to next or previous batch of accounts given by the list request.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "A list of retrieved Person objects.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.core.account_person"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.v1_account_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_customer_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "Create a Person associated with an Account.",
        "operationId" : "PostCoreAccountsAccountIdPersons",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Account the Person should be associated with.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "additional_addresses" : {
                    "type" : "array",
                    "description" : "Additional addresses associated with the person.",
                    "items" : {
                      "required" : [ "country", "purpose" ],
                      "type" : "object",
                      "properties" : {
                        "city" : {
                          "type" : "string",
                          "description" : "City, district, suburb, town, or village."
                        },
                        "country" : {
                          "type" : "string",
                          "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                        },
                        "line1" : {
                          "type" : "string",
                          "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                        },
                        "line2" : {
                          "type" : "string",
                          "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                        },
                        "postal_code" : {
                          "type" : "string",
                          "description" : "ZIP or postal code."
                        },
                        "purpose" : {
                          "type" : "string",
                          "description" : "Purpose of additional address.",
                          "enum" : [ "registered" ]
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "State, county, province, or region."
                        },
                        "town" : {
                          "type" : "string",
                          "description" : "Town or cho-me."
                        }
                      }
                    }
                  },
                  "additional_names" : {
                    "type" : "array",
                    "description" : "Additional names (e.g. aliases) associated with the person.",
                    "items" : {
                      "required" : [ "purpose" ],
                      "type" : "object",
                      "properties" : {
                        "full_name" : {
                          "type" : "string",
                          "description" : "The person's full name."
                        },
                        "given_name" : {
                          "type" : "string",
                          "description" : "The person's first or given name."
                        },
                        "purpose" : {
                          "type" : "string",
                          "description" : "The purpose or type of the additional name.",
                          "enum" : [ "alias", "maiden" ]
                        },
                        "surname" : {
                          "type" : "string",
                          "description" : "The person's last or family name."
                        }
                      }
                    }
                  },
                  "additional_terms_of_service" : {
                    "type" : "object",
                    "properties" : {
                      "account" : {
                        "required" : [ "date", "ip" ],
                        "type" : "object",
                        "properties" : {
                          "date" : {
                            "type" : "string",
                            "description" : "The time when the Account's representative accepted the terms of service. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                            "format" : "date-time"
                          },
                          "ip" : {
                            "type" : "string",
                            "description" : "The IP address from which the Account's representative accepted the terms of service."
                          },
                          "user_agent" : {
                            "type" : "string",
                            "description" : "The user agent of the browser from which the Account's representative accepted the terms of service."
                          }
                        },
                        "description" : "Stripe terms of service agreement."
                      }
                    },
                    "description" : "Attestations of accepted terms of service agreements."
                  },
                  "address" : {
                    "required" : [ "country" ],
                    "type" : "object",
                    "properties" : {
                      "city" : {
                        "type" : "string",
                        "description" : "City, district, suburb, town, or village."
                      },
                      "country" : {
                        "type" : "string",
                        "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                      },
                      "line1" : {
                        "type" : "string",
                        "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                      },
                      "line2" : {
                        "type" : "string",
                        "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                      },
                      "postal_code" : {
                        "type" : "string",
                        "description" : "ZIP or postal code."
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "State, county, province, or region."
                      },
                      "town" : {
                        "type" : "string",
                        "description" : "Town or cho-me."
                      }
                    },
                    "description" : "The person's residential address."
                  },
                  "date_of_birth" : {
                    "required" : [ "day", "month", "year" ],
                    "type" : "object",
                    "properties" : {
                      "day" : {
                        "type" : "integer",
                        "description" : "The day of birth."
                      },
                      "month" : {
                        "type" : "integer",
                        "description" : "The month of birth."
                      },
                      "year" : {
                        "type" : "integer",
                        "description" : "The year of birth."
                      }
                    },
                    "description" : "The person's date of birth."
                  },
                  "documents" : {
                    "type" : "object",
                    "properties" : {
                      "company_authorization" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents that demonstrate proof that this person is authorized to represent the company."
                      },
                      "passport" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents showing the person’s passport page with photo and personal data."
                      },
                      "primary_verification" : {
                        "required" : [ "front_back", "type" ],
                        "type" : "object",
                        "properties" : {
                          "front_back" : {
                            "required" : [ "front" ],
                            "type" : "object",
                            "properties" : {
                              "back" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              },
                              "front" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              }
                            },
                            "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the verification document. Currently supports `front_back` only.",
                            "enum" : [ "front_back" ]
                          }
                        },
                        "description" : "An identifying document showing the person's name, either a passport or local ID card."
                      },
                      "secondary_verification" : {
                        "required" : [ "front_back", "type" ],
                        "type" : "object",
                        "properties" : {
                          "front_back" : {
                            "required" : [ "front" ],
                            "type" : "object",
                            "properties" : {
                              "back" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              },
                              "front" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              }
                            },
                            "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the verification document. Currently supports `front_back` only.",
                            "enum" : [ "front_back" ]
                          }
                        },
                        "description" : "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company."
                      },
                      "visa" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents showing the person’s visa required for living in the country where they are residing."
                      }
                    },
                    "description" : "Documents that may be submitted to satisfy various informational requests."
                  },
                  "email" : {
                    "type" : "string",
                    "description" : "Email."
                  },
                  "given_name" : {
                    "type" : "string",
                    "description" : "The person's first name."
                  },
                  "id_numbers" : {
                    "type" : "array",
                    "description" : "The identification numbers (e.g., SSN) associated with the person.",
                    "items" : {
                      "required" : [ "type", "value" ],
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "description" : "The ID number type of an individual.",
                          "enum" : [ "ae_eid", "br_cpf", "de_stn", "hk_id", "mx_rfc", "my_nric", "nl_bsn", "sg_fin", "sg_nric", "th_lc", "th_pin", "us_itin", "us_itin_last_4", "us_ssn", "us_ssn_last_4" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "The value of the ID number."
                        }
                      }
                    }
                  },
                  "legal_gender" : {
                    "type" : "string",
                    "description" : "The person's gender (International regulations require either \"male\" or \"female\").",
                    "enum" : [ "female", "male" ]
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
                  },
                  "nationalities" : {
                    "type" : "array",
                    "description" : "The nationalities (countries) this person is associated with.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "phone" : {
                    "type" : "string",
                    "description" : "The phone number for this person."
                  },
                  "political_exposure" : {
                    "type" : "string",
                    "description" : "The person's political exposure.",
                    "enum" : [ "existing", "none" ]
                  },
                  "relationship" : {
                    "type" : "object",
                    "properties" : {
                      "director" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is a director of the associated legal entity."
                      },
                      "executive" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is an executive of the associated legal entity."
                      },
                      "legal_guardian" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is a legal guardian of the associated legal entity."
                      },
                      "owner" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is an owner of the associated legal entity."
                      },
                      "percent_ownership" : {
                        "type" : "string",
                        "description" : "The percentage of ownership the person has in the associated legal entity.",
                        "format" : "decimal"
                      },
                      "representative" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is a representative of the associated legal entity."
                      },
                      "title" : {
                        "type" : "string",
                        "description" : "The title or position the person holds in the associated legal entity."
                      }
                    },
                    "description" : "The relationship that this person has with the Account's business or legal entity."
                  },
                  "script_addresses" : {
                    "type" : "object",
                    "properties" : {
                      "kana" : {
                        "required" : [ "country" ],
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          },
                          "town" : {
                            "type" : "string",
                            "description" : "Town or cho-me."
                          }
                        },
                        "description" : "Kana Address."
                      },
                      "kanji" : {
                        "required" : [ "country" ],
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          },
                          "town" : {
                            "type" : "string",
                            "description" : "Town or cho-me."
                          }
                        },
                        "description" : "Kanji Address."
                      }
                    },
                    "description" : "The script addresses (e.g., non-Latin characters) associated with the person."
                  },
                  "script_names" : {
                    "type" : "object",
                    "properties" : {
                      "kana" : {
                        "type" : "object",
                        "properties" : {
                          "given_name" : {
                            "type" : "string",
                            "description" : "The person's first or given name."
                          },
                          "surname" : {
                            "type" : "string",
                            "description" : "The person's last or family name."
                          }
                        },
                        "description" : "Persons name in kana script."
                      },
                      "kanji" : {
                        "type" : "object",
                        "properties" : {
                          "given_name" : {
                            "type" : "string",
                            "description" : "The person's first or given name."
                          },
                          "surname" : {
                            "type" : "string",
                            "description" : "The person's last or family name."
                          }
                        },
                        "description" : "Persons name in kanji script."
                      }
                    },
                    "description" : "The script names (e.g. non-Latin characters) associated with the person."
                  },
                  "surname" : {
                    "type" : "string",
                    "description" : "The person's last name."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.account_person"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.additional_legal_guardian_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.additional_representative_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.additional_tos_only_allowed_for_legal_guardian"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_characters_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_country_identity_country_mismatch"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_country_mismatch"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_country_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_postal_code_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_state_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_town_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.date_of_birth_age_restriction"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.date_of_birth_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.document_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.document_purpose_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.duplicate_person_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.email_domain_invalid_for_recipient"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.email_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.id_number_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.identity_country_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.incorrect_id_number_for_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.individual_additional_person_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.ip_address_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.legal_guardian_representative_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.legal_guardian_requires_existing_representative"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.non_jp_kana_kanji_address"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.person_percent_ownership_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.phone_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.script_characters_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.total_person_ownership_exceeded"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_account_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_customer_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/transactions/{id}" : {
      "get" : {
        "description" : "Retrieves the details of a Transaction by ID.",
        "operationId" : "GetMoneyManagementTransactionsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Transaction to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.transaction"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/outbound_setup_intents" : {
      "get" : {
        "description" : "List the OutboundSetupIntent objects.",
        "operationId" : "GetMoneyManagementOutboundSetupIntents",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The page size.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The requested page.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "The list of OutboundSetupIntent objects.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.outbound_setup_intent"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "Create an OutboundSetupIntent object.",
        "operationId" : "PostMoneyManagementOutboundSetupIntents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "payout_method" : {
                    "type" : "string",
                    "description" : "If provided, the existing payout method resource to link to this setup intent.\nAny payout_method_data provided is used to update information on this linked payout method resource."
                  },
                  "payout_method_data" : {
                    "required" : [ "type" ],
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "description" : "Closed Enum. The type of payout method to be created.",
                        "enum" : [ "bank_account", "card" ]
                      },
                      "bank_account" : {
                        "required" : [ "account_number", "country" ],
                        "type" : "object",
                        "properties" : {
                          "account_number" : {
                            "type" : "string",
                            "description" : "The account number or IBAN of the bank account."
                          },
                          "bank_account_type" : {
                            "type" : "string",
                            "description" : "Closed Enum. The type of the bank account (checking or savings).",
                            "enum" : [ "checking", "savings" ]
                          },
                          "branch_number" : {
                            "type" : "string",
                            "description" : "The branch number of the bank account, if present."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "The country code of the bank account."
                          },
                          "routing_number" : {
                            "type" : "string",
                            "description" : "The routing number of the bank account, if present."
                          },
                          "swift_code" : {
                            "type" : "string",
                            "description" : "The swift code of the bank account, if present."
                          }
                        },
                        "description" : "The type specific details of the bank account payout method."
                      },
                      "card" : {
                        "required" : [ "exp_month", "exp_year", "number" ],
                        "type" : "object",
                        "properties" : {
                          "exp_month" : {
                            "type" : "string",
                            "description" : "The expiration month of the card."
                          },
                          "exp_year" : {
                            "type" : "string",
                            "description" : "The expiration year of the card."
                          },
                          "number" : {
                            "type" : "string",
                            "description" : "The card number."
                          }
                        },
                        "description" : "The type specific details of the card payout method.",
                        "x-stripeNotPublic" : true
                      }
                    },
                    "description" : "If no payout_method provided, used to create the underlying credential that is set up for outbound money movement.\nIf a payout_method provided, used to update data on the credential linked to this setup intent."
                  },
                  "usage_intent" : {
                    "type" : "string",
                    "description" : "Specify which type of outbound money movement this credential should be set up for (payment | transfer).\nIf not provided, defaults to payment.",
                    "enum" : [ "payment", "transfer" ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_setup_intent"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.active_outbound_setup_intent_exists_for_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.blocked_payout_method_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.blocked_payout_method_card"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_fields"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_payout_method_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_payout_method_card"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_payout_method_update"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_status_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.limit_payout_method_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.limit_payout_method_card"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.unsupported_payout_method_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/vault/us_bank_accounts/{id}/archive" : {
      "post" : {
        "description" : "Archive a UsBankAccount object. UsBankAccount objects will not be automatically archived by Stripe.\nArchived UsBankAccount objects cannot be used as outbound destinations\nand will not appear in the outbound destination list.",
        "operationId" : "PostCoreVaultUsBankAccountsIdArchive",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the UsBankAccount object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.vault.us_bank_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.us_bank_account_cannot_be_archived"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/event_destinations/{id}/ping" : {
      "post" : {
        "description" : "Send a `ping` event to an event destination.",
        "operationId" : "PostCoreEventDestinationsIdPing",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to ping.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/money_management/financial_accounts/{id}" : {
      "get" : {
        "description" : "Retrieves the details of an existing FinancialAccount.",
        "operationId" : "GetMoneyManagementFinancialAccountsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the FinancialAccount to be fetched.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.financial_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/transactions" : {
      "get" : {
        "description" : "Returns a list of Transactions that match the provided filters.",
        "operationId" : "GetMoneyManagementTransactions",
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "Filter for Transactions created at an exact time.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gt",
          "in" : "query",
          "description" : "Filter for Transactions created after the specified timestamp.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gte",
          "in" : "query",
          "description" : "Filter for Transactions created at or after the specified timestamp.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lt",
          "in" : "query",
          "description" : "Filter for Transactions created before the specified timestamp.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lte",
          "in" : "query",
          "description" : "Filter for Transactions created at or before the specified timestamp.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "financial_account",
          "in" : "query",
          "description" : "Filter for Transactions belonging to a FinancialAccount.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "flow",
          "in" : "query",
          "description" : "Filter for Transactions corresponding to a Flow.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The page limit.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "List of Transaction objects.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.transaction"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/event_destinations/{id}/disable" : {
      "post" : {
        "description" : "Disable an event destination.",
        "operationId" : "PostCoreEventDestinationsIdDisable",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to disable.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/money_management/outbound_payments/{id}" : {
      "get" : {
        "description" : "Retrieves the details of an existing OutboundPayment by passing the unique OutboundPayment ID from either the OutboundPayment create or list response.",
        "operationId" : "GetMoneyManagementOutboundPaymentsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the OutboundPayment to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_payment"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/adjustments" : {
      "get" : {
        "description" : "Returns a list of Adjustments that match the provided filters.",
        "operationId" : "GetMoneyManagementAdjustments",
        "parameters" : [ {
          "name" : "adjusted_flow",
          "in" : "query",
          "description" : "Filter for Adjustments linked to a Flow.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "created",
          "in" : "query",
          "description" : "Filter for objects created at the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gt",
          "in" : "query",
          "description" : "Filter for objects created after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gte",
          "in" : "query",
          "description" : "Filter for objects created on or after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lt",
          "in" : "query",
          "description" : "Filter for objects created before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lte",
          "in" : "query",
          "description" : "Filter for objects created on or before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The page limit.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "List of Adjustment objects.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.adjustment"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/payout_methods/{id}" : {
      "get" : {
        "description" : "Retrieve a PayoutMethod object.",
        "operationId" : "GetMoneyManagementPayoutMethodsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the payout method.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.payout_method"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.invalid_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/vault/gb_bank_accounts/{id}/initiate_confirmation_of_payee" : {
      "post" : {
        "description" : "Initiate Confirmation of Payee (CoP) in order to verify that the owner of a UK bank account matches\nwho you expect. This must be done on all UK bank accounts before sending domestic OutboundPayments. If\nthe result is a partial match or a non match, explicit acknowledgement using AcknowledgeConfirmationOfPayee\nis required before sending funds.",
        "operationId" : "PostCoreVaultGbBankAccountsIdInitiateConfirmationOfPayee",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The GbBankAccount for which to perform Confirmation of Payee.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "business_type" : {
                    "type" : "string",
                    "description" : "The business type to be checked against. Legal entity information will be used if unspecified.",
                    "enum" : [ "business", "personal" ]
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "The name of the user to be checked against. Legal entity information will be used if unspecified."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.vault.gb_bank_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/accounts/{id}/close" : {
      "post" : {
        "description" : "Removes access to the Account and its associated resources.",
        "operationId" : "PostCoreAccountsIdClose",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Account to close.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "applied_configurations" : {
                    "type" : "array",
                    "description" : "Configurations on the Account to be closed. All configurations on the Account must be passed in for this request to succeed.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "customer", "merchant", "recipient" ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.cannot_delete_account_with_balance"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.cannot_delete_customer_with_available_cash_balance"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.configs_must_match_to_close"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.pending_transactions_cannot_be_deleted"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.platform_registration_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.stripe_loss_liable_cannot_be_deleted"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_account_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_customer_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/test_helpers/financial_addresses/{id}/generate_microdeposits" : {
      "post" : {
        "description" : "Generates microdeposits for a FinancialAddress in a Sandbox environment.",
        "operationId" : "PostTestHelpersFinancialAddressesIdGenerateMicrodeposits",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the financial address to generate microdeposits for.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/financial_address_generated_microdeposits"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.financial_account_balance_does_not_support_currency"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.financial_address_not_active"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.financial_addresses_api_only_in_sandbox"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/transaction_entries/{id}" : {
      "get" : {
        "description" : "Retrieves the details of a TransactionEntry by ID.",
        "operationId" : "GetMoneyManagementTransactionEntriesId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the TransactionEntry to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.transaction_entry"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/billing/meter_event_stream" : {
      "post" : {
        "description" : "Creates meter events. Events are processed asynchronously, including validation. Requires a meter event session for authentication. Supports up to 10,000 requests per second in livemode. For even higher rate-limits, contact sales.",
        "operationId" : "PostBillingMeterEventStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "events" ],
                "type" : "object",
                "properties" : {
                  "events" : {
                    "type" : "array",
                    "description" : "List of meter events to include in the request.",
                    "items" : {
                      "required" : [ "event_name", "payload" ],
                      "type" : "object",
                      "properties" : {
                        "event_name" : {
                          "type" : "string",
                          "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
                        },
                        "identifier" : {
                          "type" : "string",
                          "description" : "A unique identifier for the event. If not provided, one will be generated.\nWe recommend using a globally unique identifier for this. We’ll enforce\nuniqueness within a rolling 24 hour period."
                        },
                        "payload" : {
                          "type" : "object",
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "description" : "The payload of the event. This must contain the fields corresponding to a meter’s\n`customer_mapping.event_payload_key` (default is `stripe_customer_id`) and\n`value_settings.event_payload_key` (default is `value`). Read more about\nthe\n[payload](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#payload-key-overrides)."
                        },
                        "timestamp" : {
                          "type" : "string",
                          "description" : "The time of the event. Must be within the past 35 calendar days or up to\n5 minutes in the future. Defaults to current timestamp if not specified.",
                          "format" : "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : { }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.billing_meter_event_session_expired"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/core/event_destinations/{id}" : {
      "get" : {
        "description" : "Retrieves the details of an event destination.",
        "operationId" : "GetCoreEventDestinationsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Additional fields to include in the response.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "webhook_endpoint.url" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Update the details of an event destination.",
        "operationId" : "PostCoreEventDestinationsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to update.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string",
                    "description" : "An optional description of what the event destination is used for."
                  },
                  "enabled_events" : {
                    "type" : "array",
                    "description" : "The list of events to enable for this endpoint.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "include" : {
                    "type" : "array",
                    "description" : "Additional fields to include in the response. Currently supports `webhook_endpoint.url`.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "webhook_endpoint.url" ]
                    }
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Metadata."
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Event destination name."
                  },
                  "webhook_endpoint" : {
                    "required" : [ "url" ],
                    "type" : "object",
                    "properties" : {
                      "url" : {
                        "type" : "string",
                        "description" : "The URL of the webhook endpoint."
                      }
                    },
                    "description" : "Webhook endpoint configuration."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Delete an event destination.",
        "operationId" : "DeleteCoreEventDestinationsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to delete.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.deleted_object"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/core/accounts/{account_id}/persons/{id}" : {
      "get" : {
        "description" : "Retrieves a Person associated with an Account.",
        "operationId" : "GetCoreAccountsAccountIdPersonsId",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "The Account the Person is associated with.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Person to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.account_person"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_account_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_customer_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "Updates a Person associated with an Account.",
        "operationId" : "PostCoreAccountsAccountIdPersonsId",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "The Account the Person is associated with.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Person to update.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "additional_addresses" : {
                    "type" : "array",
                    "description" : "Additional addresses associated with the person.",
                    "items" : {
                      "required" : [ "purpose" ],
                      "type" : "object",
                      "properties" : {
                        "city" : {
                          "type" : "string",
                          "description" : "City, district, suburb, town, or village."
                        },
                        "country" : {
                          "type" : "string",
                          "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                        },
                        "line1" : {
                          "type" : "string",
                          "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                        },
                        "line2" : {
                          "type" : "string",
                          "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                        },
                        "postal_code" : {
                          "type" : "string",
                          "description" : "ZIP or postal code."
                        },
                        "purpose" : {
                          "type" : "string",
                          "description" : "Purpose of additional address.",
                          "enum" : [ "registered" ]
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "State, county, province, or region."
                        },
                        "town" : {
                          "type" : "string",
                          "description" : "Town or cho-me."
                        }
                      }
                    }
                  },
                  "additional_names" : {
                    "type" : "array",
                    "description" : "Additional names (e.g. aliases) associated with the person.",
                    "items" : {
                      "required" : [ "purpose" ],
                      "type" : "object",
                      "properties" : {
                        "full_name" : {
                          "type" : "string",
                          "description" : "The person's full name."
                        },
                        "given_name" : {
                          "type" : "string",
                          "description" : "The person's first or given name."
                        },
                        "purpose" : {
                          "type" : "string",
                          "description" : "The purpose or type of the additional name.",
                          "enum" : [ "alias", "maiden" ]
                        },
                        "surname" : {
                          "type" : "string",
                          "description" : "The person's last or family name."
                        }
                      }
                    }
                  },
                  "additional_terms_of_service" : {
                    "type" : "object",
                    "properties" : {
                      "account" : {
                        "type" : "object",
                        "properties" : {
                          "date" : {
                            "type" : "string",
                            "description" : "The time when the Account's representative accepted the terms of service. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                            "format" : "date-time"
                          },
                          "ip" : {
                            "type" : "string",
                            "description" : "The IP address from which the Account's representative accepted the terms of service."
                          },
                          "user_agent" : {
                            "type" : "string",
                            "description" : "The user agent of the browser from which the Account's representative accepted the terms of service."
                          }
                        },
                        "description" : "Stripe terms of service agreement."
                      }
                    },
                    "description" : "Attestations of accepted terms of service agreements."
                  },
                  "address" : {
                    "type" : "object",
                    "properties" : {
                      "city" : {
                        "type" : "string",
                        "description" : "City, district, suburb, town, or village."
                      },
                      "country" : {
                        "type" : "string",
                        "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                      },
                      "line1" : {
                        "type" : "string",
                        "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                      },
                      "line2" : {
                        "type" : "string",
                        "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                      },
                      "postal_code" : {
                        "type" : "string",
                        "description" : "ZIP or postal code."
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "State, county, province, or region."
                      },
                      "town" : {
                        "type" : "string",
                        "description" : "Town or cho-me."
                      }
                    },
                    "description" : "The primary address associated with the person."
                  },
                  "date_of_birth" : {
                    "required" : [ "day", "month", "year" ],
                    "type" : "object",
                    "properties" : {
                      "day" : {
                        "type" : "integer",
                        "description" : "The day of the birth."
                      },
                      "month" : {
                        "type" : "integer",
                        "description" : "The month of birth."
                      },
                      "year" : {
                        "type" : "integer",
                        "description" : "The year of birth."
                      }
                    },
                    "description" : "The person's date of birth."
                  },
                  "documents" : {
                    "type" : "object",
                    "properties" : {
                      "company_authorization" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents that demonstrate proof that this person is authorized to represent the company."
                      },
                      "passport" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents showing the person’s passport page with photo and personal data."
                      },
                      "primary_verification" : {
                        "required" : [ "front_back", "type" ],
                        "type" : "object",
                        "properties" : {
                          "front_back" : {
                            "type" : "object",
                            "properties" : {
                              "back" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              },
                              "front" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              }
                            },
                            "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the verification document. Currently supports `front_back` only.",
                            "enum" : [ "front_back" ]
                          }
                        },
                        "description" : "An identifying document showing the person's name, either a passport or local ID card."
                      },
                      "secondary_verification" : {
                        "required" : [ "front_back", "type" ],
                        "type" : "object",
                        "properties" : {
                          "front_back" : {
                            "type" : "object",
                            "properties" : {
                              "back" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              },
                              "front" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              }
                            },
                            "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the verification document. Currently supports `front_back` only.",
                            "enum" : [ "front_back" ]
                          }
                        },
                        "description" : "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company."
                      },
                      "visa" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents showing the person’s visa required for living in the country where they are residing."
                      }
                    },
                    "description" : "Documents that may be submitted to satisfy various informational requests."
                  },
                  "email" : {
                    "type" : "string",
                    "description" : "Email."
                  },
                  "given_name" : {
                    "type" : "string",
                    "description" : "The person's first name."
                  },
                  "id_numbers" : {
                    "type" : "array",
                    "description" : "The identification numbers (e.g., SSN) associated with the person.",
                    "items" : {
                      "required" : [ "type", "value" ],
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "description" : "The ID number type of an individual.",
                          "enum" : [ "ae_eid", "br_cpf", "de_stn", "hk_id", "mx_rfc", "my_nric", "nl_bsn", "sg_fin", "sg_nric", "th_lc", "th_pin", "us_itin", "us_itin_last_4", "us_ssn", "us_ssn_last_4" ]
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "The value of the ID number."
                        }
                      }
                    }
                  },
                  "legal_gender" : {
                    "type" : "string",
                    "description" : "The person's gender (International regulations require either \"male\" or \"female\").",
                    "enum" : [ "female", "male" ]
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
                  },
                  "nationalities" : {
                    "type" : "array",
                    "description" : "The nationalities (countries) this person is associated with.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "phone" : {
                    "type" : "string",
                    "description" : "The phone number for this person."
                  },
                  "political_exposure" : {
                    "type" : "string",
                    "description" : "The person's political exposure.",
                    "enum" : [ "existing", "none" ]
                  },
                  "relationship" : {
                    "type" : "object",
                    "properties" : {
                      "director" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is a director of the associated legal entity."
                      },
                      "executive" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is an executive of the associated legal entity."
                      },
                      "legal_guardian" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is a legal guardian of the associated legal entity."
                      },
                      "owner" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is an owner of the associated legal entity."
                      },
                      "percent_ownership" : {
                        "type" : "string",
                        "description" : "The percentage of ownership the person has in the associated legal entity.",
                        "format" : "decimal"
                      },
                      "representative" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the person is a representative of the associated legal entity."
                      },
                      "title" : {
                        "type" : "string",
                        "description" : "The title or position the person holds in the associated legal entity."
                      }
                    },
                    "description" : "The relationship that this person has with the Account's business or legal entity."
                  },
                  "script_addresses" : {
                    "type" : "object",
                    "properties" : {
                      "kana" : {
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          },
                          "town" : {
                            "type" : "string",
                            "description" : "Town or cho-me."
                          }
                        },
                        "description" : "Kana Address."
                      },
                      "kanji" : {
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          },
                          "town" : {
                            "type" : "string",
                            "description" : "Town or cho-me."
                          }
                        },
                        "description" : "Kanji Address."
                      }
                    },
                    "description" : "The script addresses (e.g., non-Latin characters) associated with the person."
                  },
                  "script_names" : {
                    "type" : "object",
                    "properties" : {
                      "kana" : {
                        "type" : "object",
                        "properties" : {
                          "given_name" : {
                            "type" : "string",
                            "description" : "The person's first or given name."
                          },
                          "surname" : {
                            "type" : "string",
                            "description" : "The person's last or family name."
                          }
                        },
                        "description" : "Persons name in kana script."
                      },
                      "kanji" : {
                        "type" : "object",
                        "properties" : {
                          "given_name" : {
                            "type" : "string",
                            "description" : "The person's first or given name."
                          },
                          "surname" : {
                            "type" : "string",
                            "description" : "The person's last or family name."
                          }
                        },
                        "description" : "Persons name in kanji script."
                      }
                    },
                    "description" : "The script names (e.g. non-Latin characters) associated with the person."
                  },
                  "surname" : {
                    "type" : "string",
                    "description" : "The person's last name."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.account_person"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.additional_legal_guardian_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.additional_representative_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.additional_tos_only_allowed_for_legal_guardian"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_characters_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_country_identity_country_mismatch"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_country_mismatch"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_country_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_postal_code_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_state_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_town_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.date_of_birth_age_restriction"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.date_of_birth_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.document_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.document_purpose_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.duplicate_person_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.email_domain_invalid_for_recipient"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.email_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.id_number_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.identity_country_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.immutable_identity_param"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.incorrect_id_number_for_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.ip_address_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.legal_guardian_representative_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.legal_guardian_requires_existing_representative"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.non_jp_kana_kanji_address"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.person_percent_ownership_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.phone_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.script_characters_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.total_person_ownership_exceeded"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_account_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_customer_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "delete" : {
        "description" : "Delete a Person associated with an Account.",
        "operationId" : "DeleteCoreAccountsAccountIdPersonsId",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "The Account the Person is associated with.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Person to delete.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.deleted_object"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_account_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_customer_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/outbound_payment_quotes" : {
      "post" : {
        "description" : "Creates an OutboundPaymentQuote usable in an OutboundPayment.",
        "operationId" : "PostMoneyManagementOutboundPaymentQuotes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "amount", "from", "to" ],
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "integer",
                        "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                        "nullable" : false
                      },
                      "currency" : {
                        "type" : "string",
                        "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "nullable" : false
                      }
                    },
                    "description" : "The \"presentment amount\" to be sent to the recipient."
                  },
                  "delivery_options" : {
                    "type" : "object",
                    "properties" : {
                      "bank_account" : {
                        "type" : "string",
                        "description" : "Open Enum. Method for bank account.",
                        "enum" : [ "automatic", "local", "wire" ]
                      }
                    },
                    "description" : "Method to be used to send the OutboundPayment."
                  },
                  "from" : {
                    "required" : [ "currency", "financial_account" ],
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "Describes the FinancialAccount's currency drawn from."
                      },
                      "financial_account" : {
                        "type" : "string",
                        "description" : "The FinancialAccount that funds were pulled from."
                      }
                    },
                    "description" : "Request details about the sender of an OutboundPaymentQuote."
                  },
                  "to" : {
                    "required" : [ "recipient" ],
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "Describes the currency to send to the recipient.\nIf included, this currency must match a currency supported by the destination.\nCan be omitted in the following cases:\n- destination only supports one currency\n- destination supports multiple currencies and one of the currencies matches the FA currency\n- destination supports multiple currencies and one of the currencies matches the presentment currency\nNote - when both FA currency and presentment currency are supported, we pick the FA currency to minimize FX."
                      },
                      "payout_method" : {
                        "type" : "string",
                        "description" : "The payout method which the OutboundPayment uses to send payout."
                      },
                      "recipient" : {
                        "type" : "string",
                        "description" : "To which account the OutboundPayment is sent."
                      }
                    },
                    "description" : "Request details about the recipient of an OutboundPaymentQuote."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_payment_quote"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_default_payout_method_config_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_from_financial_account_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_invalid_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_to_recipient_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/vault/us_bank_accounts" : {
      "post" : {
        "description" : "Create a UsBankAccount object.",
        "operationId" : "PostCoreVaultUsBankAccounts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "account_number" ],
                "type" : "object",
                "properties" : {
                  "account_number" : {
                    "type" : "string",
                    "description" : "The account number of the bank account."
                  },
                  "bank_account_type" : {
                    "type" : "string",
                    "description" : "Closed Enum. The type of the bank account (checking or savings).",
                    "enum" : [ "checking", "savings" ]
                  },
                  "fedwire_routing_number" : {
                    "type" : "string",
                    "description" : "The fedwire routing number of the bank account. Note that certain banks have the same ACH and wire routing number."
                  },
                  "routing_number" : {
                    "type" : "string",
                    "description" : "The ACH routing number of the bank account. Note that certain banks have the same ACH and wire routing number."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.vault.us_bank_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.blocked_us_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_us_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.limit_us_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.unsupported_us_bank"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/transaction_entries" : {
      "get" : {
        "description" : "Returns a list of TransactionEntries that match the provided filters.",
        "operationId" : "GetMoneyManagementTransactionEntries",
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "Filter for Transactions created at an exact time.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gt",
          "in" : "query",
          "description" : "Filter for Transactions created after the specified timestamp.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gte",
          "in" : "query",
          "description" : "Filter for Transactions created at or after the specified timestamp.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lt",
          "in" : "query",
          "description" : "Filter for Transactions created before the specified timestamp.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lte",
          "in" : "query",
          "description" : "Filter for Transactions created at or before the specified timestamp.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The page limit.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transaction",
          "in" : "query",
          "description" : "Filter for TransactionEntries belonging to a Transaction.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "List of TransactionEntry objects.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.transaction_entry"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/vault/gb_bank_accounts" : {
      "post" : {
        "description" : "Create a GB bank account.",
        "operationId" : "PostCoreVaultGbBankAccounts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "account_number", "sort_code" ],
                "type" : "object",
                "properties" : {
                  "account_number" : {
                    "type" : "string",
                    "description" : "The Account Number of the bank account."
                  },
                  "bank_account_type" : {
                    "type" : "string",
                    "description" : "Closed Enum. The type of the bank account (checking or savings).",
                    "enum" : [ "checking", "savings" ]
                  },
                  "confirmation_of_payee" : {
                    "required" : [ "initiate" ],
                    "type" : "object",
                    "properties" : {
                      "business_type" : {
                        "type" : "string",
                        "description" : "The business type to be checked against. Legal entity information will be used if unspecified.\nClosed enum.",
                        "enum" : [ "business", "personal" ]
                      },
                      "initiate" : {
                        "type" : "boolean",
                        "description" : "User specifies whether Confirmation of Payee is automatically initiated when creating the bank account."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "The name to be checked against. Legal entity information will be used if unspecified."
                      }
                    },
                    "description" : "Whether or not to automatically perform Confirmation of Payee to verify the users information\nagainst what was provided by the bank. Doing so is required for all bank accounts not owned\nby you before making domestic UK OutboundPayments."
                  },
                  "sort_code" : {
                    "type" : "string",
                    "description" : "The Sort Code of the bank account."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.vault.gb_bank_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/payout_methods/{id}/archive" : {
      "post" : {
        "description" : "Archive a PayoutMethod object. Archived objects cannot be used as payout methods\nand will not appear in the payout method list.",
        "operationId" : "PostMoneyManagementPayoutMethodsIdArchive",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the payout method.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.payout_method"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.bank_account_cannot_be_archived"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/billing/meter_events" : {
      "post" : {
        "description" : "Creates a meter event. Events are validated synchronously, but are processed asynchronously. Supports up to 1,000 events per second in livemode. For higher rate-limits, please use meter event streams instead.",
        "operationId" : "PostBillingMeterEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "event_name", "payload" ],
                "type" : "object",
                "properties" : {
                  "event_name" : {
                    "type" : "string",
                    "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
                  },
                  "identifier" : {
                    "type" : "string",
                    "description" : "A unique identifier for the event. If not provided, one will be generated.\nWe recommend using a globally unique identifier for this. We’ll enforce\nuniqueness within a rolling 24 hour period."
                  },
                  "payload" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "The payload of the event. This must contain the fields corresponding to a meter’s\n`customer_mapping.event_payload_key` (default is `stripe_customer_id`) and\n`value_settings.event_payload_key` (default is `value`). Read more about\nthe\n[payload](https://docs.stripe.com/billing/subscriptions/usage-based/recording-usage#payload-key-overrides)."
                  },
                  "timestamp" : {
                    "type" : "string",
                    "description" : "The time of the event. Must be within the past 35 calendar days or up to\n5 minutes in the future. Defaults to current timestamp if not specified.",
                    "format" : "date-time"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.billing.meter_event"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.archived_meter"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.duplicate_meter_event"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.no_meter"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.payload_invalid_value"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.payload_no_customer_defined"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.payload_no_value_defined"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.too_many_concurrent_requests"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/money_management/financial_addresses/{id}" : {
      "get" : {
        "description" : "Retrieve a FinancialAddress. By default, the FinancialAddress will be returned in it's unexpanded state, revealing only the last 4 digits of the account number.",
        "operationId" : "GetMoneyManagementFinancialAddressesId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the FinancialAddress to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Open Enum. A list of fields to reveal in the FinancialAddresses returned.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "credentials.gb_bank_account.account_number", "credentials.us_bank_account.account_number" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.financial_address"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/outbound_transfers/{id}/cancel" : {
      "post" : {
        "description" : "Cancels an OutboundTransfer. Only processing OutboundTransfers can be canceled.",
        "operationId" : "PostMoneyManagementOutboundTransfersIdCancel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the OutboundTransfer to cancel.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_transfer"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_already_canceled"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_transfer_not_cancelable"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/accounts/{id}" : {
      "get" : {
        "description" : "Retrieves the details of an Account.",
        "operationId" : "GetCoreAccountsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Account to retrieve.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "Additional fields to include in the response.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "configuration.customer", "configuration.merchant", "configuration.recipient", "defaults", "identity", "requirements" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_account_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_customer_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "Updates the details of an Account.",
        "operationId" : "PostCoreAccountsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Account to update.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "configuration" : {
                    "type" : "object",
                    "properties" : {
                      "customer" : {
                        "type" : "object",
                        "properties" : {
                          "automatic_indirect_tax" : {
                            "type" : "object",
                            "properties" : {
                              "exempt" : {
                                "type" : "string",
                                "description" : "Describes the customer's tax exemption status, which is `none`, `exempt`, or `reverse`. When set to reverse, invoice and receipt PDFs include the following text: “Reverse charge”.",
                                "enum" : [ "exempt", "none", "reverse" ]
                              },
                              "ip_address" : {
                                "type" : "string",
                                "description" : "A recent IP address of the customer used for tax reporting and tax location inference."
                              },
                              "location_source" : {
                                "type" : "string",
                                "description" : "The data source used by Stripe Tax to identify the customer's location - defaults to 'identity_address'. Will only be used for automatic tax calculation on the customer's Invoices and Subscriptions.",
                                "enum" : [ "identity_address", "ip_address", "shipping_address" ]
                              }
                            },
                            "description" : "Automatic indirect tax settings to be used when automatic tax calculation is enabled on the customer's invoices, subscriptions, checkout sessions, or payment links. Surfaces if automatic tax calculation is possible given the current customer location information."
                          },
                          "billing" : {
                            "type" : "object",
                            "properties" : {
                              "default_payment_method" : {
                                "type" : "string",
                                "description" : "ID of a payment method that’s attached to the customer, to be used as the customer’s default payment method for invoices and subscriptions."
                              },
                              "invoice" : {
                                "type" : "object",
                                "properties" : {
                                  "custom_fields" : {
                                    "type" : "array",
                                    "description" : "The list of up to 4 default custom fields to be displayed on invoices for this customer.",
                                    "items" : {
                                      "required" : [ "name", "value" ],
                                      "type" : "object",
                                      "properties" : {
                                        "name" : {
                                          "type" : "string",
                                          "description" : "The name of the custom field. This may be up to 40 characters."
                                        },
                                        "value" : {
                                          "type" : "string",
                                          "description" : "The value of the custom field. This may be up to 140 characters. When updating, pass an empty string to remove previously-defined values."
                                        }
                                      }
                                    }
                                  },
                                  "footer" : {
                                    "type" : "string",
                                    "description" : "Default footer to be displayed on invoices for this customer."
                                  },
                                  "next_sequence" : {
                                    "type" : "integer",
                                    "description" : "The sequence to be used on the customer's next invoice. Defaults to 1."
                                  },
                                  "prefix" : {
                                    "type" : "string",
                                    "description" : "The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers."
                                  },
                                  "rendering" : {
                                    "type" : "object",
                                    "properties" : {
                                      "amount_tax_display" : {
                                        "type" : "string",
                                        "description" : "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs. One of exclude_tax or include_inclusive_tax. include_inclusive_tax will include inclusive tax (and exclude exclusive tax) in invoice PDF amounts. exclude_tax will exclude all tax (inclusive and exclusive alike) from invoice PDF amounts.",
                                        "enum" : [ "exclude_tax", "include_inclusive_tax" ]
                                      },
                                      "template" : {
                                        "type" : "string",
                                        "description" : "ID of the invoice rendering template to use for future invoices."
                                      }
                                    },
                                    "description" : "Default options for invoice PDF rendering for this customer."
                                  }
                                },
                                "description" : "Default settings used on invoices for this customer."
                              }
                            },
                            "description" : "Billing settings - default settings used for this customer in Billing flows such as Invoices and Subscriptions."
                          },
                          "capabilities" : {
                            "type" : "object",
                            "properties" : {
                              "automatic_indirect_tax" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Generates requirements for enabling automatic indirect tax calculation on this customer's invoices or subscriptions. Recommended to request this capability if planning to enable automatic tax calculation on this customer's invoices or subscriptions. Uses the `location_source` field."
                              }
                            },
                            "description" : "Capabilities that have been requested on the Customer Configuration."
                          },
                          "shipping" : {
                            "type" : "object",
                            "properties" : {
                              "address" : {
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  }
                                },
                                "description" : "Customer shipping address."
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "Customer name."
                              },
                              "phone" : {
                                "type" : "string",
                                "description" : "Customer phone (including extension)."
                              }
                            },
                            "description" : "The customer's shipping information. Appears on invoices emailed to this customer."
                          },
                          "test_clock" : {
                            "type" : "string",
                            "description" : "ID of the test clock to attach to the customer. Can only be set on testmode Accounts, and when the Customer Configuration is first set on an Account."
                          }
                        },
                        "description" : "The Customer Configuration allows the Account to be charged."
                      },
                      "merchant" : {
                        "type" : "object",
                        "properties" : {
                          "bacs_debit_payments" : {
                            "type" : "object",
                            "properties" : {
                              "display_name" : {
                                "type" : "string",
                                "description" : "Display name for Bacs debit payments."
                              }
                            },
                            "description" : "Settings used for Bacs debit payments."
                          },
                          "branding" : {
                            "type" : "object",
                            "properties" : {
                              "icon" : {
                                "type" : "string",
                                "description" : "ID of a [file upload](https://docs.stripe.com/api/persons/update#create_file): An icon for the merchant. Must be square and at least 128px x 128px."
                              },
                              "logo" : {
                                "type" : "string",
                                "description" : "ID of a [file upload](https://docs.stripe.com/api/persons/update#create_file): A logo for the merchant that will be used in Checkout instead of the icon and without the merchant's name next to it if provided. Must be at least 128px x 128px."
                              },
                              "primary_color" : {
                                "type" : "string",
                                "description" : "A CSS hex color value representing the primary branding color for the merchant."
                              },
                              "secondary_color" : {
                                "type" : "string",
                                "description" : "A CSS hex color value representing the secondary branding color for the merchant."
                              }
                            },
                            "description" : "Settings used to apply the merchant's branding to email receipts, invoices, Checkout, and other products."
                          },
                          "capabilities" : {
                            "type" : "object",
                            "properties" : {
                              "ach_debit_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process ACH debit payments."
                              },
                              "acss_debit_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process ACSS debit payments."
                              },
                              "affirm_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Affirm payments."
                              },
                              "afterpay_clearpay_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Afterpay/Clearpay payments."
                              },
                              "alma_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Alma payments."
                              },
                              "amazon_pay_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Amazon Pay payments."
                              },
                              "au_becs_debit_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Australian BECS Direct Debit payments."
                              },
                              "bacs_debit_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process BACS Direct Debit payments."
                              },
                              "bancontact_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Bancontact payments."
                              },
                              "blik_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process BLIK payments."
                              },
                              "boleto_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Boleto payments."
                              },
                              "card_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to collect card payments."
                              },
                              "cartes_bancaires_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Cartes Bancaires payments."
                              },
                              "cashapp_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Cash App payments."
                              },
                              "eps_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process EPS payments."
                              },
                              "fpx_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process FPX payments."
                              },
                              "gb_bank_transfer_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process UK bank transfer payments."
                              },
                              "grabpay_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process GrabPay payments."
                              },
                              "ideal_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process iDEAL payments."
                              },
                              "jcb_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process JCB card payments."
                              },
                              "jp_bank_transfer_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Japanese bank transfer payments."
                              },
                              "kakao_pay_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Kakao Pay payments."
                              },
                              "klarna_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Klarna payments."
                              },
                              "konbini_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Konbini convenience store payments."
                              },
                              "kr_card_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Korean card payments."
                              },
                              "link_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Link payments."
                              },
                              "mobilepay_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process MobilePay payments."
                              },
                              "multibanco_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Multibanco payments."
                              },
                              "mx_bank_transfer_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Mexican bank transfer payments."
                              },
                              "naver_pay_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Naver Pay payments."
                              },
                              "oxxo_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process OXXO payments."
                              },
                              "p24_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Przelewy24 (P24) payments."
                              },
                              "pay_by_bank_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Pay by Bank payments."
                              },
                              "payco_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process PAYCO payments."
                              },
                              "paynow_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process PayNow payments."
                              },
                              "promptpay_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process PromptPay payments."
                              },
                              "revolut_pay_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Revolut Pay payments."
                              },
                              "samsung_pay_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Samsung Pay payments."
                              },
                              "sepa_bank_transfer_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process SEPA bank transfer payments."
                              },
                              "sepa_debit_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process SEPA Direct Debit payments."
                              },
                              "swish_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Swish payments."
                              },
                              "twint_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process TWINT payments."
                              },
                              "us_bank_transfer_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process US bank transfer payments."
                              },
                              "zip_payments" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Allow the merchant to process Zip payments."
                              }
                            },
                            "description" : "Capabilities to request on the Merchant Configuration."
                          },
                          "card_payments" : {
                            "type" : "object",
                            "properties" : {
                              "decline_on" : {
                                "type" : "object",
                                "properties" : {
                                  "avs_failure" : {
                                    "type" : "boolean",
                                    "description" : "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification."
                                  },
                                  "cvc_failure" : {
                                    "type" : "boolean",
                                    "description" : "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification."
                                  }
                                },
                                "description" : "Automatically declines certain charge types regardless of whether the card issuer accepted or declined the charge."
                              }
                            },
                            "description" : "Card payments settings."
                          },
                          "mcc" : {
                            "type" : "string",
                            "description" : "The merchant category code for the merchant. MCCs are used to classify businesses based on the goods or services they provide."
                          },
                          "statement_descriptor" : {
                            "type" : "object",
                            "properties" : {
                              "descriptor" : {
                                "type" : "string",
                                "description" : "The default text that appears on statements for non-card charges outside of Japan. For card charges, if you don’t set a statement_descriptor_prefix, this text is also used as the statement descriptor prefix. In that case, if concatenating the statement descriptor suffix causes the combined statement descriptor to exceed 22 characters, we truncate the statement_descriptor text to limit the full descriptor to 22 characters. For more information about statement descriptors and their requirements, see the Merchant Configuration settings documentation."
                              },
                              "prefix" : {
                                "type" : "string",
                                "description" : "Default text that appears on statements for card charges outside of Japan, prefixing any dynamic statement_descriptor_suffix specified on the charge. To maximize space for the dynamic part of the descriptor, keep this text short. If you don’t specify this value, statement_descriptor is used as the prefix. For more information about statement descriptors and their requirements, see the Merchant Configuration settings documentation."
                              }
                            },
                            "description" : "Statement descriptor."
                          },
                          "support" : {
                            "type" : "object",
                            "properties" : {
                              "address" : {
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "A publicly available mailing address for sending support issues to."
                              },
                              "email" : {
                                "type" : "string",
                                "description" : "A publicly available email address for sending support issues to."
                              },
                              "phone" : {
                                "type" : "string",
                                "description" : "A publicly available phone number to call with support issues."
                              },
                              "url" : {
                                "type" : "string",
                                "description" : "A publicly available website for handling support issues."
                              }
                            },
                            "description" : "Publicly available contact information for sending support issues to."
                          }
                        },
                        "description" : "The Merchant configuration allows the Account to act as a connected account and collect payments facilitated by a Connect platform. You can add this configuration to your connected accounts only if you’ve completed onboarding as a Connect platform."
                      },
                      "recipient" : {
                        "type" : "object",
                        "properties" : {
                          "capabilities" : {
                            "type" : "object",
                            "properties" : {
                              "bank_accounts" : {
                                "type" : "object",
                                "properties" : {
                                  "local" : {
                                    "type" : "object",
                                    "properties" : {
                                      "requested" : {
                                        "type" : "boolean",
                                        "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                      }
                                    },
                                    "description" : "Enables this Account to receive OutboundPayments to linked bank accounts over local networks."
                                  },
                                  "wire" : {
                                    "type" : "object",
                                    "properties" : {
                                      "requested" : {
                                        "type" : "boolean",
                                        "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                      }
                                    },
                                    "description" : "Enables this Account to receive OutboundPayments to linked bank accounts over wire."
                                  }
                                },
                                "description" : "Capabilities that enable OutboundPayments to a bank account linked to this Account."
                              },
                              "cards" : {
                                "type" : "object",
                                "properties" : {
                                  "requested" : {
                                    "type" : "boolean",
                                    "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                  }
                                },
                                "description" : "Capability that enable OutboundPayments to a debit card linked to this Account."
                              },
                              "stripe_balance" : {
                                "type" : "object",
                                "properties" : {
                                  "stripe_transfers" : {
                                    "type" : "object",
                                    "properties" : {
                                      "requested" : {
                                        "type" : "boolean",
                                        "description" : "To request a new Capability for an account, pass true. There can be a delay before the requested Capability becomes active."
                                      }
                                    },
                                    "description" : "Allows the recipient to receive /v1/transfers into their Stripe Balance (/v1/balance)."
                                  }
                                },
                                "description" : "Capabilities that enable the recipient to receive money into their Stripe Balance (/v1/balance)."
                              }
                            },
                            "description" : "Capabilities to request on the Recipient Configuration."
                          },
                          "default_outbound_destination" : {
                            "type" : "string",
                            "description" : "The payout method id to be used as a default outbound destination. This will allow the PayoutMethod to be omitted on OutboundPayments made through API or sending payouts via dashboard. Can also be explicitly set to `null` to clear the existing default outbound destination."
                          }
                        },
                        "description" : "The Recipient Configuration allows the Account to receive funds."
                      }
                    },
                    "description" : "An Account Configuration which allows the Account to take on a key persona across Stripe products."
                  },
                  "contact_email" : {
                    "type" : "string",
                    "description" : "The default contact email address for the Account. Required when configuring the account as a merchant or recipient."
                  },
                  "dashboard" : {
                    "type" : "string",
                    "description" : "A value indicating the Stripe dashboard this Account has access to. This will depend on which configurations are enabled for this account.",
                    "enum" : [ "express", "full", "none" ]
                  },
                  "defaults" : {
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
                      },
                      "locales" : {
                        "type" : "array",
                        "description" : "The Account's preferred locales (languages), ordered by preference.",
                        "items" : {
                          "type" : "string",
                          "enum" : [ "ar-SA", "bg", "bg-BG", "cs", "cs-CZ", "da", "da-DK", "de", "de-DE", "el", "el-GR", "en", "en-AU", "en-CA", "en-GB", "en-IE", "en-IN", "en-NZ", "en-SG", "en-US", "es", "es-419", "es-ES", "et", "et-EE", "fi", "fil", "fil-PH", "fi-FI", "fr", "fr-CA", "fr-FR", "he-IL", "hr", "hr-HR", "hu", "hu-HU", "id", "id-ID", "it", "it-IT", "ja", "ja-JP", "ko", "ko-KR", "lt", "lt-LT", "lv", "lv-LV", "ms", "ms-MY", "mt", "mt-MT", "nb", "nb-NO", "nl", "nl-NL", "pl", "pl-PL", "pt", "pt-BR", "pt-PT", "ro", "ro-RO", "ru", "ru-RU", "sk", "sk-SK", "sl", "sl-SI", "sv", "sv-SE", "th", "th-TH", "tr", "tr-TR", "vi", "vi-VN", "zh", "zh-Hans", "zh-Hant-HK", "zh-Hant-TW", "zh-HK", "zh-TW" ]
                        }
                      },
                      "responsibilities" : {
                        "required" : [ "fees_collector", "losses_collector" ],
                        "type" : "object",
                        "properties" : {
                          "fees_collector" : {
                            "type" : "string",
                            "description" : "A value indicating the party responsible for collecting fees from this account.",
                            "enum" : [ "application", "stripe" ]
                          },
                          "losses_collector" : {
                            "type" : "string",
                            "description" : "A value indicating who is responsible for losses when this Account can’t pay back negative balances from payments.",
                            "enum" : [ "application", "stripe" ]
                          }
                        },
                        "description" : "Default responsibilities held by either Stripe or the platform."
                      }
                    },
                    "description" : "Default values to be used on Account Configurations."
                  },
                  "display_name" : {
                    "type" : "string",
                    "description" : "A descriptive name for the Account. This name will be surfaced in the Stripe Dashboard and on any invoices sent to the Account."
                  },
                  "identity" : {
                    "type" : "object",
                    "properties" : {
                      "attestations" : {
                        "type" : "object",
                        "properties" : {
                          "directorship_declaration" : {
                            "type" : "object",
                            "properties" : {
                              "date" : {
                                "type" : "string",
                                "description" : "The time marking when the director attestation was made. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                                "format" : "date-time"
                              },
                              "ip" : {
                                "type" : "string",
                                "description" : "The IP address from which the director attestation was made."
                              },
                              "user_agent" : {
                                "type" : "string",
                                "description" : "The user agent of the browser from which the director attestation was made."
                              }
                            },
                            "description" : "This hash is used to attest that the directors information provided to Stripe is both current and correct."
                          },
                          "ownership_declaration" : {
                            "type" : "object",
                            "properties" : {
                              "date" : {
                                "type" : "string",
                                "description" : "The time marking when the beneficial owner attestation was made. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                                "format" : "date-time"
                              },
                              "ip" : {
                                "type" : "string",
                                "description" : "The IP address from which the beneficial owner attestation was made."
                              },
                              "user_agent" : {
                                "type" : "string",
                                "description" : "The user agent of the browser from which the beneficial owner attestation was made."
                              }
                            },
                            "description" : "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct."
                          },
                          "persons_provided" : {
                            "type" : "object",
                            "properties" : {
                              "directors" : {
                                "type" : "boolean",
                                "description" : "Whether the company’s directors have been provided. Set this Boolean to true after creating all the company’s directors with the [Persons API](https://docs.stripe.com/api/v2/core/accounts/createperson)."
                              },
                              "executives" : {
                                "type" : "boolean",
                                "description" : "Whether the company’s executives have been provided. Set this Boolean to true after creating all the company’s executives with the [Persons API](https://docs.stripe.com/api/v2/core/accounts/createperson)."
                              },
                              "owners" : {
                                "type" : "boolean",
                                "description" : "Whether the company’s owners have been provided. Set this Boolean to true after creating all the company’s owners with the [Persons API](https://docs.stripe.com/api/v2/core/accounts/createperson)."
                              },
                              "ownership_exemption_reason" : {
                                "type" : "string",
                                "description" : "Reason for why the company is exempt from providing ownership information.",
                                "enum" : [ "qualified_entity_exceeds_ownership_threshold", "qualifies_as_financial_institution" ]
                              }
                            },
                            "description" : "Attestation that all Persons with a specific Relationship value have been provided."
                          },
                          "terms_of_service" : {
                            "type" : "object",
                            "properties" : {
                              "account" : {
                                "type" : "object",
                                "properties" : {
                                  "date" : {
                                    "type" : "string",
                                    "description" : "The time when the Account's representative accepted the terms of service. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                                    "format" : "date-time"
                                  },
                                  "ip" : {
                                    "type" : "string",
                                    "description" : "The IP address from which the Account's representative accepted the terms of service."
                                  },
                                  "user_agent" : {
                                    "type" : "string",
                                    "description" : "The user agent of the browser from which the Account's representative accepted the terms of service."
                                  }
                                },
                                "description" : "Details on the Account's acceptance of the [Stripe Services Agreement](https://docs.stripe.com/connect/updating-accounts#tos-acceptance)."
                              }
                            },
                            "description" : "Attestations of accepted terms of service agreements."
                          }
                        },
                        "description" : "Attestations from the identity's key people, e.g. owners, executives, directors."
                      },
                      "business_details" : {
                        "type" : "object",
                        "properties" : {
                          "address" : {
                            "type" : "object",
                            "properties" : {
                              "city" : {
                                "type" : "string",
                                "description" : "City, district, suburb, town, or village."
                              },
                              "country" : {
                                "type" : "string",
                                "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                              },
                              "line1" : {
                                "type" : "string",
                                "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                              },
                              "line2" : {
                                "type" : "string",
                                "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                              },
                              "postal_code" : {
                                "type" : "string",
                                "description" : "ZIP or postal code."
                              },
                              "state" : {
                                "type" : "string",
                                "description" : "State, county, province, or region."
                              },
                              "town" : {
                                "type" : "string",
                                "description" : "Town or cho-me."
                              }
                            },
                            "description" : "The business registration address of the business entity."
                          },
                          "annual_revenue" : {
                            "type" : "object",
                            "properties" : {
                              "amount" : {
                                "type" : "object",
                                "properties" : {
                                  "amount" : {
                                    "type" : "integer",
                                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                                    "nullable" : false
                                  },
                                  "currency" : {
                                    "type" : "string",
                                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                                    "nullable" : false
                                  }
                                },
                                "description" : "A non-negative integer representing the amount in the smallest currency unit."
                              },
                              "fiscal_year_end" : {
                                "type" : "string",
                                "description" : "The close-out date of the preceding fiscal year in ISO 8601 format. E.g. 2023-12-31 for the 31st of December, 2023."
                              }
                            },
                            "description" : "The business gross annual revenue for its preceding fiscal year."
                          },
                          "documents" : {
                            "type" : "object",
                            "properties" : {
                              "bank_account_ownership_verification" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that support the bank account ownership verification requirement. Must be a document associated with the account’s primary active bank account that displays the last 4 digits of the account number, either a statement or a check."
                              },
                              "company_license" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof of a company’s license to operate."
                              },
                              "company_memorandum_of_association" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents showing the company’s Memorandum of Association."
                              },
                              "company_ministerial_decree" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "Certain countries only: One or more documents showing the ministerial decree legalizing the company’s establishment."
                              },
                              "company_registration_verification" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof of a company’s registration with the appropriate local authorities."
                              },
                              "company_tax_id_verification" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof of a company’s tax ID."
                              },
                              "primary_verification" : {
                                "required" : [ "front_back", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "front_back" : {
                                    "type" : "object",
                                    "properties" : {
                                      "back" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      },
                                      "front" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      }
                                    },
                                    "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the verification document. Currently supports `front_back` only.",
                                    "enum" : [ "front_back" ]
                                  }
                                },
                                "description" : "A document verifying the business."
                              },
                              "proof_of_registration" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents showing the company’s proof of registration with the national business registry."
                              },
                              "proof_of_ultimate_beneficial_ownership" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof of ultimate beneficial ownership."
                              }
                            },
                            "description" : "A document verifying the business."
                          },
                          "doing_business_as" : {
                            "type" : "string",
                            "description" : "The name which is used by the business."
                          },
                          "estimated_worker_count" : {
                            "type" : "integer",
                            "description" : "An estimated upper bound of employees, contractors, vendors, etc. currently working for the business."
                          },
                          "id_numbers" : {
                            "type" : "array",
                            "description" : "The ID numbers of a business entity.",
                            "items" : {
                              "required" : [ "type", "value" ],
                              "type" : "object",
                              "properties" : {
                                "registrar" : {
                                  "type" : "string",
                                  "description" : "The registrar of the ID number (Only valid for DE ID number types)."
                                },
                                "type" : {
                                  "type" : "string",
                                  "description" : "Open Enum. The ID number type of a business entity.",
                                  "enum" : [ "ae_crn", "ae_vat", "at_fn", "au_abn", "au_acn", "au_in", "be_cbe", "bg_uic", "br_cnpj", "ca_cn", "ca_crarr", "ca_neq", "ca_rid", "ch_chid", "ch_uid", "cy_tic", "cz_ico", "de_hrn", "de_vat", "dk_cvr", "ee_rk", "es_cif", "fi_yt", "fr_siren", "fr_vat", "gb_crn", "gi_crn", "gr_gemi", "hk_br", "hk_cr", "hk_mbs", "hu_cjs", "ie_crn", "it_rea", "it_vat", "jp_cn", "li_uid", "lt_ccrn", "lu_rcs", "lv_urn", "mt_crn", "mx_rfc", "my_brn", "my_coid", "my_sst", "nl_kvk", "no_orgnr", "nz_bn", "pl_regon", "pt_vat", "ro_cui", "se_orgnr", "sg_uen", "si_msp", "sk_ico", "th_crn", "th_prn", "th_tin", "us_ein" ]
                                },
                                "value" : {
                                  "type" : "string",
                                  "description" : "The value of the ID number."
                                }
                              }
                            }
                          },
                          "monthly_estimated_revenue" : {
                            "type" : "object",
                            "properties" : {
                              "amount" : {
                                "type" : "object",
                                "properties" : {
                                  "amount" : {
                                    "type" : "integer",
                                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                                    "nullable" : false
                                  },
                                  "currency" : {
                                    "type" : "string",
                                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                                    "nullable" : false
                                  }
                                },
                                "description" : "A non-negative integer representing the amount in the smallest currency unit."
                              }
                            },
                            "description" : "An estimate of the monthly revenue of the business."
                          },
                          "phone" : {
                            "type" : "string",
                            "description" : "The phone number of the Business Entity."
                          },
                          "product_description" : {
                            "type" : "string",
                            "description" : "Internal-only description of the product sold or service provided by the business. It’s used by Stripe for risk and underwriting purposes."
                          },
                          "registered_name" : {
                            "type" : "string",
                            "description" : "The business legal name."
                          },
                          "script_addresses" : {
                            "type" : "object",
                            "properties" : {
                              "kana" : {
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "Kana Address."
                              },
                              "kanji" : {
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "Kanji Address."
                              }
                            },
                            "description" : "The business registration address of the business entity in non latin script."
                          },
                          "script_names" : {
                            "type" : "object",
                            "properties" : {
                              "kana" : {
                                "type" : "object",
                                "properties" : {
                                  "registered_name" : {
                                    "type" : "string",
                                    "description" : "Registered name of the business."
                                  }
                                },
                                "description" : "Kana name."
                              },
                              "kanji" : {
                                "type" : "object",
                                "properties" : {
                                  "registered_name" : {
                                    "type" : "string",
                                    "description" : "Registered name of the business."
                                  }
                                },
                                "description" : "Kanji name."
                              }
                            },
                            "description" : "The business legal name in non latin script."
                          },
                          "structure" : {
                            "type" : "string",
                            "description" : "The category identifying the legal structure of the business.",
                            "enum" : [ "free_zone_establishment", "free_zone_llc", "governmental_unit", "government_instrumentality", "incorporated_non_profit", "incorporated_partnership", "llc", "multi_member_llc", "private_company", "private_corporation", "private_partnership", "public_company", "public_corporation", "public_partnership", "registered_charity", "single_member_llc", "sole_establishment", "sole_proprietorship", "tax_exempt_government_instrumentality", "unincorporated_association", "unincorporated_non_profit", "unincorporated_partnership" ]
                          },
                          "url" : {
                            "type" : "string",
                            "description" : "The business's publicly available website."
                          }
                        },
                        "description" : "Information about the company or business."
                      },
                      "country" : {
                        "type" : "string",
                        "description" : "The country in which the account holder resides, or in which the business is legally established. This should be an [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code."
                      },
                      "entity_type" : {
                        "type" : "string",
                        "description" : "The entity type.",
                        "enum" : [ "company", "government_entity", "individual", "non_profit" ]
                      },
                      "individual" : {
                        "type" : "object",
                        "properties" : {
                          "additional_addresses" : {
                            "type" : "array",
                            "description" : "Additional addresses associated with the individual.",
                            "items" : {
                              "required" : [ "purpose" ],
                              "type" : "object",
                              "properties" : {
                                "city" : {
                                  "type" : "string",
                                  "description" : "City, district, suburb, town, or village."
                                },
                                "country" : {
                                  "type" : "string",
                                  "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                },
                                "line1" : {
                                  "type" : "string",
                                  "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                },
                                "line2" : {
                                  "type" : "string",
                                  "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                },
                                "postal_code" : {
                                  "type" : "string",
                                  "description" : "ZIP or postal code."
                                },
                                "purpose" : {
                                  "type" : "string",
                                  "description" : "Purpose of additional address.",
                                  "enum" : [ "registered" ]
                                },
                                "state" : {
                                  "type" : "string",
                                  "description" : "State, county, province, or region."
                                },
                                "town" : {
                                  "type" : "string",
                                  "description" : "Town or cho-me."
                                }
                              }
                            }
                          },
                          "additional_names" : {
                            "type" : "array",
                            "description" : "Additional names (e.g. aliases) associated with the individual.",
                            "items" : {
                              "required" : [ "purpose" ],
                              "type" : "object",
                              "properties" : {
                                "full_name" : {
                                  "type" : "string",
                                  "description" : "The person's full name."
                                },
                                "given_name" : {
                                  "type" : "string",
                                  "description" : "The person's first or given name."
                                },
                                "purpose" : {
                                  "type" : "string",
                                  "description" : "The purpose or type of the additional name.",
                                  "enum" : [ "alias", "maiden" ]
                                },
                                "surname" : {
                                  "type" : "string",
                                  "description" : "The person's last or family name."
                                }
                              }
                            }
                          },
                          "address" : {
                            "type" : "object",
                            "properties" : {
                              "city" : {
                                "type" : "string",
                                "description" : "City, district, suburb, town, or village."
                              },
                              "country" : {
                                "type" : "string",
                                "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                              },
                              "line1" : {
                                "type" : "string",
                                "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                              },
                              "line2" : {
                                "type" : "string",
                                "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                              },
                              "postal_code" : {
                                "type" : "string",
                                "description" : "ZIP or postal code."
                              },
                              "state" : {
                                "type" : "string",
                                "description" : "State, county, province, or region."
                              },
                              "town" : {
                                "type" : "string",
                                "description" : "Town or cho-me."
                              }
                            },
                            "description" : "The individual's residential address."
                          },
                          "date_of_birth" : {
                            "required" : [ "day", "month", "year" ],
                            "type" : "object",
                            "properties" : {
                              "day" : {
                                "type" : "integer",
                                "description" : "The day of the birth."
                              },
                              "month" : {
                                "type" : "integer",
                                "description" : "The month of birth."
                              },
                              "year" : {
                                "type" : "integer",
                                "description" : "The year of birth."
                              }
                            },
                            "description" : "The individual's date of birth."
                          },
                          "documents" : {
                            "type" : "object",
                            "properties" : {
                              "company_authorization" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents that demonstrate proof that this person is authorized to represent the company."
                              },
                              "passport" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents showing the person’s passport page with photo and personal data."
                              },
                              "primary_verification" : {
                                "required" : [ "front_back", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "front_back" : {
                                    "type" : "object",
                                    "properties" : {
                                      "back" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      },
                                      "front" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      }
                                    },
                                    "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the verification document. Currently supports `front_back` only.",
                                    "enum" : [ "front_back" ]
                                  }
                                },
                                "description" : "An identifying document showing the person's name, either a passport or local ID card."
                              },
                              "secondary_verification" : {
                                "required" : [ "front_back", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "front_back" : {
                                    "type" : "object",
                                    "properties" : {
                                      "back" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      },
                                      "front" : {
                                        "type" : "string",
                                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                                      }
                                    },
                                    "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens referring to each side of the document."
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the verification document. Currently supports `front_back` only.",
                                    "enum" : [ "front_back" ]
                                  }
                                },
                                "description" : "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company."
                              },
                              "visa" : {
                                "required" : [ "files", "type" ],
                                "type" : "object",
                                "properties" : {
                                  "files" : {
                                    "type" : "array",
                                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "The format of the document. Currently supports `files` only.",
                                    "enum" : [ "files" ]
                                  }
                                },
                                "description" : "One or more documents showing the person’s visa required for living in the country where they are residing."
                              }
                            },
                            "description" : "Documents that may be submitted to satisfy various informational requests."
                          },
                          "email" : {
                            "type" : "string",
                            "description" : "The individual's email address."
                          },
                          "given_name" : {
                            "type" : "string",
                            "description" : "The individual's first name."
                          },
                          "id_numbers" : {
                            "type" : "array",
                            "description" : "The identification numbers (e.g., SSN) associated with the individual.",
                            "items" : {
                              "required" : [ "type", "value" ],
                              "type" : "object",
                              "properties" : {
                                "type" : {
                                  "type" : "string",
                                  "description" : "The ID number type of an individual.",
                                  "enum" : [ "ae_eid", "br_cpf", "de_stn", "hk_id", "mx_rfc", "my_nric", "nl_bsn", "sg_fin", "sg_nric", "th_lc", "th_pin", "us_itin", "us_itin_last_4", "us_ssn", "us_ssn_last_4" ]
                                },
                                "value" : {
                                  "type" : "string",
                                  "description" : "The value of the ID number."
                                }
                              }
                            }
                          },
                          "legal_gender" : {
                            "type" : "string",
                            "description" : "The individual's gender (International regulations require either \"male\" or \"female\").",
                            "enum" : [ "female", "male" ]
                          },
                          "metadata" : {
                            "type" : "object",
                            "additionalProperties" : {
                              "type" : "string"
                            },
                            "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
                          },
                          "nationalities" : {
                            "type" : "array",
                            "description" : "The countries where the individual is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "phone" : {
                            "type" : "string",
                            "description" : "The individual's phone number."
                          },
                          "political_exposure" : {
                            "type" : "string",
                            "description" : "The individual's political exposure.",
                            "enum" : [ "existing", "none" ]
                          },
                          "relationship" : {
                            "type" : "object",
                            "properties" : {
                              "director" : {
                                "type" : "boolean",
                                "description" : "Whether the person is a director of the account's identity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations."
                              },
                              "executive" : {
                                "type" : "boolean",
                                "description" : "Whether the person has significant responsibility to control, manage, or direct the organization."
                              },
                              "owner" : {
                                "type" : "boolean",
                                "description" : "Whether the person is an owner of the account’s identity."
                              },
                              "percent_ownership" : {
                                "type" : "string",
                                "description" : "The percent owned by the person of the account's legal entity.",
                                "format" : "decimal"
                              },
                              "title" : {
                                "type" : "string",
                                "description" : "The person's title (e.g., CEO, Support Engineer)."
                              }
                            },
                            "description" : "The relationship that this individual has with the account's identity."
                          },
                          "script_addresses" : {
                            "type" : "object",
                            "properties" : {
                              "kana" : {
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "Kana Address."
                              },
                              "kanji" : {
                                "type" : "object",
                                "properties" : {
                                  "city" : {
                                    "type" : "string",
                                    "description" : "City, district, suburb, town, or village."
                                  },
                                  "country" : {
                                    "type" : "string",
                                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                                  },
                                  "line1" : {
                                    "type" : "string",
                                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                                  },
                                  "line2" : {
                                    "type" : "string",
                                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                                  },
                                  "postal_code" : {
                                    "type" : "string",
                                    "description" : "ZIP or postal code."
                                  },
                                  "state" : {
                                    "type" : "string",
                                    "description" : "State, county, province, or region."
                                  },
                                  "town" : {
                                    "type" : "string",
                                    "description" : "Town or cho-me."
                                  }
                                },
                                "description" : "Kanji Address."
                              }
                            },
                            "description" : "The script addresses (e.g., non-Latin characters) associated with the individual."
                          },
                          "script_names" : {
                            "type" : "object",
                            "properties" : {
                              "kana" : {
                                "type" : "object",
                                "properties" : {
                                  "given_name" : {
                                    "type" : "string",
                                    "description" : "The person's first or given name."
                                  },
                                  "surname" : {
                                    "type" : "string",
                                    "description" : "The person's last or family name."
                                  }
                                },
                                "description" : "Persons name in kana script."
                              },
                              "kanji" : {
                                "type" : "object",
                                "properties" : {
                                  "given_name" : {
                                    "type" : "string",
                                    "description" : "The person's first or given name."
                                  },
                                  "surname" : {
                                    "type" : "string",
                                    "description" : "The person's last or family name."
                                  }
                                },
                                "description" : "Persons name in kanji script."
                              }
                            },
                            "description" : "The individuals primary name in non latin script."
                          },
                          "surname" : {
                            "type" : "string",
                            "description" : "The individual's last name."
                          }
                        },
                        "description" : "Information about the individual represented by the Account. This property is `null` unless `entity_type` is set to `individual`."
                      }
                    },
                    "description" : "Information about the company, individual, and business represented by the Account."
                  },
                  "include" : {
                    "type" : "array",
                    "description" : "Additional fields to include in the response.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "configuration.customer", "configuration.merchant", "configuration.recipient", "defaults", "identity", "requirements" ]
                    }
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.account_controller_express_dash_without_application_losses_or_fees"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_controller_stripe_pricing_platform_liable"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_controller_unsupported_configuration"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_controller_unsupported_configuration_private_preview"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.account_country_unsupported_currency"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_characters_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_country_identity_country_mismatch"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_postal_code_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_state_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.address_town_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.attach_payment_method_to_customer"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.can_create_platform_owned_onboarding_accounts_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_cannot_be_unrequested_due_to_other_capability_requirement"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_for_dashboard_type"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_for_entity_type_in_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_in_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_in_platform_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_without_other_capability"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.capability_not_available_without_other_capability_in_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.configuration_creation_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.custom_account_beta"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.date_of_birth_age_restriction"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.date_of_birth_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.default_currency_immutable"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.default_outbound_destination_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.default_payment_method_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.document_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.document_purpose_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.duplicate_person_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.email_domain_invalid_for_recipient"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.email_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.entity_type_not_supported_in_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.id_number_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.identity_country_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.immutable_identity_param"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.incorrect_id_number_for_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_id_number_for_structure"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_id_number_registrar"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.ip_address_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.mcc_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.non_jp_kana_kanji_address"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.person_percent_ownership_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.phone_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.script_characters_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.shipping_address_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.shipping_name_required"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.statement_descriptor_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.structure_incompatible_for_entity_type_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.test_clock_disallowed_on_live_mode"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.test_clock_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.tos_acceptance_on_behalf_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.total_person_ownership_exceeded"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.unsupported_field_for_configs"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.unsupported_identity_field_for_configs"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.url_invalid"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_account_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.v1_customer_instead_of_v2_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/outbound_payments" : {
      "get" : {
        "description" : "Returns a list of OutboundPayments that match the provided filters.",
        "operationId" : "GetMoneyManagementOutboundPayments",
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "Filter for objects created at the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gt",
          "in" : "query",
          "description" : "Filter for objects created after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gte",
          "in" : "query",
          "description" : "Filter for objects created on or after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lt",
          "in" : "query",
          "description" : "Filter for objects created before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lte",
          "in" : "query",
          "description" : "Filter for objects created on or before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token to use to retrieve the page being requested.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recipient",
          "in" : "query",
          "description" : "Only return OutboundPayments sent to this recipient.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Closed Enum. Only return OutboundPayments with this status.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canceled", "failed", "posted", "processing", "returned" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "The OutboundPayments retrieved.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.outbound_payment"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_invalid_page_token"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "Creates an OutboundPayment.",
        "operationId" : "PostMoneyManagementOutboundPayments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "amount", "from", "to" ],
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "integer",
                        "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                        "nullable" : false
                      },
                      "currency" : {
                        "type" : "string",
                        "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "nullable" : false
                      }
                    },
                    "description" : "The \"presentment amount\" to be sent to the recipient."
                  },
                  "delivery_options" : {
                    "type" : "object",
                    "properties" : {
                      "bank_account" : {
                        "type" : "string",
                        "description" : "Open Enum. Method for bank account.",
                        "enum" : [ "automatic", "local", "wire" ]
                      }
                    },
                    "description" : "Delivery options to be used to send the OutboundPayment."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "An arbitrary string attached to the OutboundPayment. Often useful for displaying to users."
                  },
                  "from" : {
                    "required" : [ "currency", "financial_account" ],
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "Describes the FinancialAmount's currency drawn from."
                      },
                      "financial_account" : {
                        "type" : "string",
                        "description" : "The FinancialAccount that funds were pulled from."
                      }
                    },
                    "description" : "From which FinancialAccount and BalanceType to pull funds from."
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
                  },
                  "outbound_payment_quote" : {
                    "type" : "string",
                    "description" : "The quote for this OutboundPayment. Only required for countries with regulatory mandates to display fee estimates before OutboundPayment creation.",
                    "x-stripeNotPublic" : true
                  },
                  "recipient_notification" : {
                    "required" : [ "setting" ],
                    "type" : "object",
                    "properties" : {
                      "setting" : {
                        "type" : "string",
                        "description" : "Closed Enum. Configuration option to enable or disable notifications to recipients.\nDo not send notifications when setting is NONE. Default to account setting when setting is CONFIGURED or not set.",
                        "enum" : [ "configured", "none" ]
                      }
                    },
                    "description" : "Details about the notification settings for the OutboundPayment recipient."
                  },
                  "to" : {
                    "required" : [ "recipient" ],
                    "type" : "object",
                    "properties" : {
                      "currency" : {
                        "type" : "string",
                        "description" : "Describes the currency to send to the recipient.\nIf included, this currency must match a currency supported by the destination.\nCan be omitted in the following cases:\n- destination only supports one currency\n- destination supports multiple currencies and one of the currencies matches the FA currency\n- destination supports multiple currencies and one of the currencies matches the presentment currency\nNote - when both FA currency and presentment currency are supported, we pick the FA currency to minimize FX."
                      },
                      "payout_method" : {
                        "type" : "string",
                        "description" : "The payout method which the OutboundPayment uses to send payout."
                      },
                      "recipient" : {
                        "type" : "string",
                        "description" : "To which account the OutboundPayment is sent."
                      }
                    },
                    "description" : "To which payout method to send the OutboundPayment."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.outbound_payment"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_conflict"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_account_not_configured_as_recipient"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_amount_too_large_for_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_amount_too_large_for_selected_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_card_payout_method_not_supported"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_cop_not_accepted"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_default_payout_method_config_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_from_balance_type_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_from_balance_unsupported_currency"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_from_financial_account_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_insufficient_funds"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_invalid_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_invalid_payout_method_country"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_method_not_supported"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_no_suitable_methods_for_large_amount"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_not_allowed"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_payout_method_expired"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_quote_mismatch"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_quote_missing"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_recipient_amount_limit_exceeded"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_recipient_count_limit_exceeded"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_recipient_email_does_not_exist"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_recipient_feature_not_active"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_recipient_feature_not_active_for_suitable_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_to_recipient_not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.outbound_payment_unsupported_currency"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/billing/meter_event_session" : {
      "post" : {
        "description" : "Creates a meter event session to send usage on the high-throughput meter event stream. Authentication tokens are only valid for 15 minutes, so you will need to create a new meter event session when your token expires.",
        "operationId" : "PostBillingMeterEventSession",
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.billing.meter_event_session"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/money_management/payout_methods/{id}/unarchive" : {
      "post" : {
        "description" : "Unarchive an PayoutMethod object.",
        "operationId" : "PostMoneyManagementPayoutMethodsIdUnarchive",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Payout Method.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.payout_method"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.bank_account_cannot_be_unarchived"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_payout_method"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/event_destinations/{id}/enable" : {
      "post" : {
        "description" : "Enable an event destination.",
        "operationId" : "PostCoreEventDestinationsIdEnable",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier for the event destination to enable.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.event_destination"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/money_management/payout_methods_bank_account_spec" : {
      "get" : {
        "description" : "Fetch the specifications for a set of countries to know which\ncredential fields are required, the validations for each fields, and how to translate these\ncountry-specific fields to the generic fields in the PayoutMethodBankAccount type.",
        "operationId" : "GetMoneyManagementPayoutMethodsBankAccountSpec",
        "parameters" : [ {
          "name" : "countries",
          "in" : "query",
          "description" : "The countries to fetch the bank account spec for.",
          "required" : false,
          "style" : "deepObject",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.money_management.payout_methods_bank_account_spec"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.invalid_country_code"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/vault/us_bank_accounts/{id}" : {
      "get" : {
        "description" : "Retrieve a UsBankAccount object.",
        "operationId" : "GetCoreVaultUsBankAccountsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the UsBankAccount object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.vault.us_bank_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      },
      "post" : {
        "description" : "Update a UsBankAccount object. This is limited to supplying a previously empty routing_number field.",
        "operationId" : "PostCoreVaultUsBankAccountsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the UsBankAccount object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "fedwire_routing_number" : {
                    "type" : "string",
                    "description" : "The bank account's fedwire routing number can be provided for update it was were empty previously."
                  },
                  "routing_number" : {
                    "type" : "string",
                    "description" : "The bank account's ACH routing number can be provided for update if it was empty previously."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.vault.us_bank_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.archived_us_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.blocked_us_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.idempotency_error"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.invalid_us_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.limit_us_bank_account"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.unsupported_us_bank"
                  }, {
                    "$ref" : "#/components/schemas/v2.error.us_bank_account_field_already_exists"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/money_management/received_credits" : {
      "get" : {
        "description" : "Retrieves a list of ReceivedCredits.",
        "operationId" : "GetMoneyManagementReceivedCredits",
        "parameters" : [ {
          "name" : "created",
          "in" : "query",
          "description" : "Filter for objects created at the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gt",
          "in" : "query",
          "description" : "Filter for objects created after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_gte",
          "in" : "query",
          "description" : "Filter for objects created on or after the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lt",
          "in" : "query",
          "description" : "Filter for objects created before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "created_lte",
          "in" : "query",
          "description" : "Filter for objects created on or before the specified timestamp.\nMust be an RFC 3339 date & time value, for example: 2022-09-18T13:22:00Z.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The page limit.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page token.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "The retrieved ReceivedCredits.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.money_management.received_credit"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    },
    "/v2/core/events" : {
      "get" : {
        "description" : "List events, going back up to 30 days.",
        "operationId" : "GetCoreEvents",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The page size.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "object_id",
          "in" : "query",
          "description" : "Primary object ID used to retrieve related events.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The requested page.",
          "required" : false,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "data", "next_page_url", "previous_page_url" ],
                  "properties" : {
                    "next_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the next page of the list. If there are no more pages, the value is null.",
                      "nullable" : true
                    },
                    "previous_page_url" : {
                      "type" : "string",
                      "description" : "URL to fetch the previous page of the list. If there are no previous pages, the value is null.",
                      "nullable" : true
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "List of events.",
                      "items" : {
                        "$ref" : "#/components/schemas/v2.core.event"
                      }
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/core/vault/gb_bank_accounts/{id}" : {
      "get" : {
        "description" : "Retrieve a GB bank account.",
        "operationId" : "GetCoreVaultGbBankAccountsId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the GbBankAccount object.",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/v2.core.vault.gb_bank_account"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/v2.error.not_found"
                  }, {
                    "$ref" : "#/components/schemas/v2.error"
                  } ]
                }
              }
            }
          }
        },
        "x-stripeNotPublic" : true
      }
    }
  },
  "components" : {
    "schemas" : {
      "financial_address_credit_simulation" : {
        "required" : [ "object", "status" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "financial_address_credit_simulation" ]
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the request, signifying whether a simulated credit was initiated."
          }
        },
        "x-resourceId" : "financial_address_credit_simulation",
        "x-stripeResource" : {
          "in_package" : "",
          "class_name" : "FinancialAddressCreditSimulation"
        },
        "x-stripeOperations" : [ {
          "method_name" : "credit",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/test_helpers/financial_addresses/{id}/credit"
        } ]
      },
      "financial_address_generated_microdeposits" : {
        "required" : [ "amounts", "object", "status" ],
        "type" : "object",
        "properties" : {
          "amounts" : {
            "type" : "array",
            "description" : "The amounts of the microdeposits that were generated.",
            "items" : {
              "type" : "object",
              "properties" : {
                "amount" : {
                  "type" : "integer",
                  "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                  "nullable" : false
                },
                "currency" : {
                  "type" : "string",
                  "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                  "nullable" : false
                }
              }
            }
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "financial_address_generated_microdeposits" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Closed Enum. The status of the request.",
            "enum" : [ "accepted" ]
          }
        },
        "x-resourceId" : "financial_address_generated_microdeposits",
        "x-stripeResource" : {
          "in_package" : "",
          "class_name" : "FinancialAddressGeneratedMicrodeposits"
        },
        "x-stripeOperations" : [ {
          "method_name" : "generate_microdeposits",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/test_helpers/financial_addresses/{id}/generate_microdeposits"
        } ]
      },
      "v1.billing.meter.error_report_triggered" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "developer_message_summary", "reason", "validation_end", "validation_start" ],
            "type" : "object",
            "properties" : {
              "reason" : {
                "required" : [ "error_count", "error_types" ],
                "type" : "object",
                "properties" : {
                  "error_count" : {
                    "type" : "integer",
                    "description" : "The total error count within this window."
                  },
                  "error_types" : {
                    "type" : "array",
                    "description" : "The error details.",
                    "items" : {
                      "required" : [ "code", "error_count", "sample_errors" ],
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Open Enum.",
                          "enum" : [ "archived_meter", "meter_event_customer_not_found", "meter_event_dimension_count_too_high", "meter_event_invalid_value", "meter_event_no_customer_defined", "missing_dimension_payload_keys", "no_meter", "timestamp_in_future", "timestamp_too_far_in_past" ]
                        },
                        "error_count" : {
                          "type" : "integer",
                          "description" : "The number of errors of this type."
                        },
                        "sample_errors" : {
                          "type" : "array",
                          "description" : "A list of sample errors of this type.",
                          "items" : {
                            "required" : [ "error_message", "request" ],
                            "type" : "object",
                            "properties" : {
                              "error_message" : {
                                "type" : "string",
                                "description" : "The error message."
                              },
                              "request" : {
                                "required" : [ "identifier" ],
                                "type" : "object",
                                "properties" : {
                                  "identifier" : {
                                    "type" : "string",
                                    "description" : "The request idempotency key."
                                  }
                                },
                                "description" : "The request causes the error."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "description" : "This contains information about why meter error happens."
              },
              "developer_message_summary" : {
                "type" : "string",
                "description" : "Extra field included in the event's `data` when fetched from /v2/events."
              },
              "validation_start" : {
                "type" : "string",
                "description" : "The start of the window that is encapsulated by this summary.",
                "format" : "date-time"
              },
              "validation_end" : {
                "type" : "string",
                "description" : "The end of the window that is encapsulated by this summary.",
                "format" : "date-time"
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "billing.meter" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v1.billing.meter.error_report_triggered" ]
          }
        },
        "description" : "This event occurs when there are invalid async usage events for a given meter.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v1.billing.meter.error_report_triggered"
        }
      },
      "v1.billing.meter.no_meter_found" : {
        "required" : [ "data", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "developer_message_summary", "reason", "validation_end", "validation_start" ],
            "type" : "object",
            "properties" : {
              "reason" : {
                "required" : [ "error_count", "error_types" ],
                "type" : "object",
                "properties" : {
                  "error_count" : {
                    "type" : "integer",
                    "description" : "The total error count within this window."
                  },
                  "error_types" : {
                    "type" : "array",
                    "description" : "The error details.",
                    "items" : {
                      "required" : [ "code", "error_count", "sample_errors" ],
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Open Enum.",
                          "enum" : [ "archived_meter", "meter_event_customer_not_found", "meter_event_dimension_count_too_high", "meter_event_invalid_value", "meter_event_no_customer_defined", "missing_dimension_payload_keys", "no_meter", "timestamp_in_future", "timestamp_too_far_in_past" ]
                        },
                        "error_count" : {
                          "type" : "integer",
                          "description" : "The number of errors of this type."
                        },
                        "sample_errors" : {
                          "type" : "array",
                          "description" : "A list of sample errors of this type.",
                          "items" : {
                            "required" : [ "error_message", "request" ],
                            "type" : "object",
                            "properties" : {
                              "error_message" : {
                                "type" : "string",
                                "description" : "The error message."
                              },
                              "request" : {
                                "required" : [ "identifier" ],
                                "type" : "object",
                                "properties" : {
                                  "identifier" : {
                                    "type" : "string",
                                    "description" : "The request idempotency key."
                                  }
                                },
                                "description" : "The request causes the error."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "description" : "This contains information about why meter error happens."
              },
              "developer_message_summary" : {
                "type" : "string",
                "description" : "Extra field included in the event's `data` when fetched from /v2/events."
              },
              "validation_start" : {
                "type" : "string",
                "description" : "The start of the window that is encapsulated by this summary.",
                "format" : "date-time"
              },
              "validation_end" : {
                "type" : "string",
                "description" : "The end of the window that is encapsulated by this summary.",
                "format" : "date-time"
              }
            },
            "description" : "Additional data about the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v1.billing.meter.no_meter_found" ]
          }
        },
        "description" : "This event occurs when async usage events have missing or invalid meter ids.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v1.billing.meter.no_meter_found"
        }
      },
      "v2.billing.meter_event" : {
        "required" : [ "created", "event_name", "identifier", "livemode", "object", "payload", "timestamp" ],
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "The creation time of this meter event.",
            "format" : "date-time"
          },
          "event_name" : {
            "type" : "string",
            "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
          },
          "identifier" : {
            "type" : "string",
            "description" : "A unique identifier for the event. If not provided, one will be generated. We recommend using a globally unique identifier for this. We’ll enforce uniqueness within a rolling 24 hour period."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.billing.meter_event" ]
          },
          "payload" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The payload of the event. This must contain the fields corresponding to a meter’s\n`customer_mapping.event_payload_key` (default is `stripe_customer_id`) and\n`value_settings.event_payload_key` (default is `value`). Read more about the payload."
          },
          "timestamp" : {
            "type" : "string",
            "description" : "The time of the event. Must be within the past 35 calendar days or up to\n5 minutes in the future. Defaults to current timestamp if not specified.",
            "format" : "date-time"
          }
        },
        "description" : "Fix me empty_doc_string.",
        "x-resourceId" : "v2.billing.meter_event",
        "x-stripeResource" : {
          "in_package" : "v2.billing",
          "class_name" : "MeterEvent"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/billing/meter_events"
        } ]
      },
      "v2.billing.meter_event_adjustment" : {
        "required" : [ "cancel", "created", "event_name", "id", "livemode", "object", "status", "type" ],
        "type" : "object",
        "properties" : {
          "cancel" : {
            "required" : [ "identifier" ],
            "type" : "object",
            "properties" : {
              "identifier" : {
                "type" : "string",
                "description" : "Unique identifier for the event. You can only cancel events within 24 hours of Stripe receiving them."
              }
            },
            "description" : "Specifies which event to cancel."
          },
          "created" : {
            "type" : "string",
            "description" : "The time the adjustment was created.",
            "format" : "date-time"
          },
          "event_name" : {
            "type" : "string",
            "description" : "The name of the meter event. Corresponds with the `event_name` field on a meter."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique id of this meter event adjustment."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.billing.meter_event_adjustment" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Open Enum. The meter event adjustment’s status.",
            "enum" : [ "complete", "pending" ]
          },
          "type" : {
            "type" : "string",
            "description" : "Open Enum. Specifies whether to cancel a single event or a range of events for a time period. Time period cancellation is not supported yet.",
            "enum" : [ "cancel" ]
          }
        },
        "x-resourceId" : "v2.billing.meter_event_adjustment",
        "x-stripeResource" : {
          "in_package" : "v2.billing",
          "class_name" : "MeterEventAdjustment"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/billing/meter_event_adjustments"
        } ]
      },
      "v2.billing.meter_event_session" : {
        "required" : [ "authentication_token", "created", "expires_at", "id", "livemode", "object" ],
        "type" : "object",
        "properties" : {
          "authentication_token" : {
            "type" : "string",
            "description" : "The authentication token for this session.  Use this token when calling the\nhigh-throughput meter event API."
          },
          "created" : {
            "type" : "string",
            "description" : "The creation time of this session.",
            "format" : "date-time"
          },
          "expires_at" : {
            "type" : "string",
            "description" : "The time at which this session will expire.",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string",
            "description" : "The unique id of this auth session."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.billing.meter_event_session" ]
          }
        },
        "x-resourceId" : "v2.billing.meter_event_session",
        "x-stripeResource" : {
          "in_package" : "v2.billing",
          "class_name" : "MeterEventSession"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/billing/meter_event_session"
        } ]
      },
      "v2.core.account" : {
        "required" : [ "applied_configurations", "created", "id", "object" ],
        "type" : "object",
        "properties" : {
          "applied_configurations" : {
            "type" : "array",
            "description" : "Filter only accounts that have all of the configurations specified. If omitted, returns all accounts regardless of which configurations they have.",
            "items" : {
              "type" : "string",
              "enum" : [ "customer", "merchant", "recipient" ]
            }
          },
          "configuration" : {
            "type" : "object",
            "properties" : {
              "customer" : {
                "type" : "object",
                "properties" : {
                  "automatic_indirect_tax" : {
                    "type" : "object",
                    "properties" : {
                      "exempt" : {
                        "type" : "string",
                        "description" : "Describes the customer's tax exemption status, which is `none`, `exempt`, or `reverse`. When set to reverse, invoice and receipt PDFs include the following text: “Reverse charge”.",
                        "enum" : [ "exempt", "none", "reverse" ]
                      },
                      "ip_address" : {
                        "type" : "string",
                        "description" : "A recent IP address of the customer used for tax reporting and tax location inference."
                      },
                      "location" : {
                        "type" : "object",
                        "properties" : {
                          "country" : {
                            "type" : "string",
                            "description" : "The customer's country as identified by Stripe Tax."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "The customer's state, county, province, or region as identified by Stripe Tax."
                          }
                        },
                        "description" : "The customer’s location as identified by Stripe Tax - uses `location_source`. Will only be rendered if the `automatic_indirect_tax` feature is requested and `active`."
                      },
                      "location_source" : {
                        "type" : "string",
                        "description" : "The data source used by Stripe Tax to identify the customer's location - defaults to 'identity_address'. Will only be used for automatic tax calculation on the customer's Invoices and Subscriptions.",
                        "enum" : [ "identity_address", "ip_address", "shipping_address" ]
                      }
                    },
                    "description" : "Automatic indirect tax settings to be used when automatic tax calculation is enabled on the customer's invoices, subscriptions, checkout sessions, or payment links. Surfaces if automatic tax calculation is possible given the current customer location information."
                  },
                  "billing" : {
                    "type" : "object",
                    "properties" : {
                      "default_payment_method" : {
                        "type" : "string",
                        "description" : "ID of a payment method that’s attached to the customer, to be used as the customer’s default payment method for invoices and subscriptions."
                      },
                      "invoice" : {
                        "required" : [ "custom_fields" ],
                        "type" : "object",
                        "properties" : {
                          "custom_fields" : {
                            "type" : "array",
                            "description" : "The list of up to 4 default custom fields to be displayed on invoices for this customer. When updating, pass an empty string to remove previously-defined fields.",
                            "items" : {
                              "required" : [ "name", "value" ],
                              "type" : "object",
                              "properties" : {
                                "name" : {
                                  "type" : "string",
                                  "description" : "The name of the custom field. This may be up to 40 characters."
                                },
                                "value" : {
                                  "type" : "string",
                                  "description" : "The value of the custom field. This may be up to 140 characters. When updating, pass an empty string to remove previously-defined values."
                                }
                              }
                            }
                          },
                          "footer" : {
                            "type" : "string",
                            "description" : "Default footer to be displayed on invoices for this customer."
                          },
                          "next_sequence" : {
                            "type" : "integer",
                            "description" : "The sequence to be used on the customer's next invoice. Defaults to 1."
                          },
                          "prefix" : {
                            "type" : "string",
                            "description" : "The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers."
                          },
                          "rendering" : {
                            "type" : "object",
                            "properties" : {
                              "amount_tax_display" : {
                                "type" : "string",
                                "description" : "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs. One of exclude_tax or include_inclusive_tax. include_inclusive_tax will include inclusive tax (and exclude exclusive tax) in invoice PDF amounts. exclude_tax will exclude all tax (inclusive and exclusive alike) from invoice PDF amounts.",
                                "enum" : [ "exclude_tax", "include_inclusive_tax" ]
                              },
                              "template" : {
                                "type" : "string",
                                "description" : "ID of the invoice rendering template to use for future invoices."
                              }
                            },
                            "description" : "Default options for invoice PDF rendering for this customer."
                          }
                        },
                        "description" : "Default settings used on invoices for this customer."
                      }
                    },
                    "description" : "Billing settings - default settings used for this customer in Billing flows such as Invoices and Subscriptions."
                  },
                  "capabilities" : {
                    "type" : "object",
                    "properties" : {
                      "automatic_indirect_tax" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Generates requirements for enabling automatic indirect tax calculation on this customer's invoices or subscriptions. Recommended to request this capability if planning to enable automatic tax calculation on this customer's invoices or subscriptions. Uses the `location_source` field."
                      }
                    },
                    "description" : "Capabilities that have been requested on the Customer Configuration."
                  },
                  "shipping" : {
                    "type" : "object",
                    "properties" : {
                      "address" : {
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          }
                        },
                        "description" : "Customer shipping address."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Customer name."
                      },
                      "phone" : {
                        "type" : "string",
                        "description" : "Customer phone (including extension)."
                      }
                    },
                    "description" : "The customer's shipping information. Appears on invoices emailed to this customer."
                  },
                  "test_clock" : {
                    "type" : "string",
                    "description" : "ID of the test clock to attach to the customer. Can only be set on testmode Accounts, and when the Customer Configuration is first set on an Account."
                  }
                },
                "description" : "The Customer Configuration allows the Account to be used in inbound payment flows."
              },
              "merchant" : {
                "type" : "object",
                "properties" : {
                  "bacs_debit_payments" : {
                    "type" : "object",
                    "properties" : {
                      "display_name" : {
                        "type" : "string",
                        "description" : "Display name for Bacs debit payments."
                      },
                      "service_user_number" : {
                        "type" : "string",
                        "description" : "Service user number for Bacs debit payments."
                      }
                    },
                    "description" : "Settings used for Bacs debit payments."
                  },
                  "branding" : {
                    "type" : "object",
                    "properties" : {
                      "icon" : {
                        "type" : "string",
                        "description" : "ID of a [file upload](https://docs.stripe.com/api/persons/update#create_file): An icon for the merchant. Must be square and at least 128px x 128px."
                      },
                      "logo" : {
                        "type" : "string",
                        "description" : "ID of a [file upload](https://docs.stripe.com/api/persons/update#create_file): A logo for the merchant that will be used in Checkout instead of the icon and without the merchant's name next to it if provided. Must be at least 128px x 128px."
                      },
                      "primary_color" : {
                        "type" : "string",
                        "description" : "A CSS hex color value representing the primary branding color for the merchant."
                      },
                      "secondary_color" : {
                        "type" : "string",
                        "description" : "A CSS hex color value representing the secondary branding color for the merchant."
                      }
                    },
                    "description" : "Settings used to apply the merchant's branding to email receipts, invoices, Checkout, and other products."
                  },
                  "capabilities" : {
                    "type" : "object",
                    "properties" : {
                      "ach_debit_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process ACH debit payments."
                      },
                      "acss_debit_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process ACSS debit payments."
                      },
                      "affirm_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Affirm payments."
                      },
                      "afterpay_clearpay_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Afterpay/Clearpay payments."
                      },
                      "alma_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Alma payments."
                      },
                      "amazon_pay_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Amazon Pay payments."
                      },
                      "au_becs_debit_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Australian BECS Direct Debit payments."
                      },
                      "bacs_debit_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process BACS Direct Debit payments."
                      },
                      "bancontact_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Bancontact payments."
                      },
                      "blik_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process BLIK payments."
                      },
                      "boleto_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Boleto payments."
                      },
                      "card_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to collect card payments."
                      },
                      "cartes_bancaires_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Cartes Bancaires payments."
                      },
                      "cashapp_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Cash App payments."
                      },
                      "eps_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process EPS payments."
                      },
                      "fpx_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process FPX payments."
                      },
                      "gb_bank_transfer_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process UK bank transfer payments."
                      },
                      "grabpay_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process GrabPay payments."
                      },
                      "ideal_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process iDEAL payments."
                      },
                      "jcb_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process JCB card payments."
                      },
                      "jp_bank_transfer_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Japanese bank transfer payments."
                      },
                      "kakao_pay_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Kakao Pay payments."
                      },
                      "klarna_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Klarna payments."
                      },
                      "konbini_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Konbini convenience store payments."
                      },
                      "kr_card_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Korean card payments."
                      },
                      "link_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Link payments."
                      },
                      "mobilepay_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process MobilePay payments."
                      },
                      "multibanco_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Multibanco payments."
                      },
                      "mx_bank_transfer_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Mexican bank transfer payments."
                      },
                      "naver_pay_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Naver Pay payments."
                      },
                      "oxxo_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process OXXO payments."
                      },
                      "p24_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Przelewy24 (P24) payments."
                      },
                      "pay_by_bank_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Pay by Bank payments."
                      },
                      "payco_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process PAYCO payments."
                      },
                      "paynow_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process PayNow payments."
                      },
                      "promptpay_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process PromptPay payments."
                      },
                      "revolut_pay_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Revolut Pay payments."
                      },
                      "samsung_pay_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Samsung Pay payments."
                      },
                      "sepa_bank_transfer_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process SEPA bank transfer payments."
                      },
                      "sepa_debit_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process SEPA Direct Debit payments."
                      },
                      "swish_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Swish payments."
                      },
                      "twint_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process TWINT payments."
                      },
                      "us_bank_transfer_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process US bank transfer payments."
                      },
                      "zip_payments" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Allow the merchant to process Zip payments."
                      }
                    },
                    "description" : "Capabilities that have been requested on the Merchant Configuration."
                  },
                  "card_payments" : {
                    "type" : "object",
                    "properties" : {
                      "decline_on" : {
                        "type" : "object",
                        "properties" : {
                          "avs_failure" : {
                            "type" : "boolean",
                            "description" : "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification."
                          },
                          "cvc_failure" : {
                            "type" : "boolean",
                            "description" : "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification."
                          }
                        },
                        "description" : "Automatically declines certain charge types regardless of whether the card issuer accepted or declined the charge."
                      }
                    },
                    "description" : "Card payments settings."
                  },
                  "mcc" : {
                    "type" : "string",
                    "description" : "The merchant category code for the merchant. MCCs are used to classify businesses based on the goods or services they provide."
                  },
                  "sepa_debit_payments" : {
                    "type" : "object",
                    "properties" : {
                      "creditor_id" : {
                        "type" : "string",
                        "description" : "Creditor ID for SEPA debit payments."
                      }
                    },
                    "description" : "Settings used for SEPA debit payments."
                  },
                  "statement_descriptor" : {
                    "type" : "object",
                    "properties" : {
                      "descriptor" : {
                        "type" : "string",
                        "description" : "The default text that appears on statements for non-card charges outside of Japan. For card charges, if you don’t set a statement_descriptor_prefix, this text is also used as the statement descriptor prefix. In that case, if concatenating the statement descriptor suffix causes the combined statement descriptor to exceed 22 characters, we truncate the statement_descriptor text to limit the full descriptor to 22 characters. For more information about statement descriptors and their requirements, see the Merchant Configuration settings documentation."
                      },
                      "prefix" : {
                        "type" : "string",
                        "description" : "Default text that appears on statements for card charges outside of Japan, prefixing any dynamic statement_descriptor_suffix specified on the charge. To maximize space for the dynamic part of the descriptor, keep this text short. If you don’t specify this value, statement_descriptor is used as the prefix. For more information about statement descriptors and their requirements, see the Merchant Configuration settings documentation."
                      }
                    },
                    "description" : "Statement descriptor."
                  },
                  "support" : {
                    "type" : "object",
                    "properties" : {
                      "address" : {
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          },
                          "town" : {
                            "type" : "string",
                            "description" : "Town or cho-me."
                          }
                        },
                        "description" : "A publicly available mailing address for sending support issues to."
                      },
                      "email" : {
                        "type" : "string",
                        "description" : "A publicly available email address for sending support issues to."
                      },
                      "phone" : {
                        "type" : "string",
                        "description" : "A publicly available phone number to call with support issues."
                      },
                      "url" : {
                        "type" : "string",
                        "description" : "A publicly available website for handling support issues."
                      }
                    },
                    "description" : "Publicly available contact information for sending support issues to."
                  }
                },
                "description" : "The Merchant configuration allows the Account to act as a connected account and collect payments facilitated by a Connect platform. You can add this configuration to your connected accounts only if you’ve completed onboarding as a Connect platform."
              },
              "recipient" : {
                "type" : "object",
                "properties" : {
                  "capabilities" : {
                    "type" : "object",
                    "properties" : {
                      "bank_accounts" : {
                        "type" : "object",
                        "properties" : {
                          "local" : {
                            "required" : [ "requested", "status", "status_details" ],
                            "type" : "object",
                            "properties" : {
                              "requested" : {
                                "type" : "boolean",
                                "description" : "Whether the Capability has been requested."
                              },
                              "status" : {
                                "type" : "string",
                                "description" : "The status of the Capability.",
                                "enum" : [ "active", "pending", "restricted", "unsupported" ]
                              },
                              "status_details" : {
                                "type" : "array",
                                "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                                "items" : {
                                  "required" : [ "code", "resolution" ],
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "type" : "string",
                                      "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                      "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                    },
                                    "resolution" : {
                                      "type" : "string",
                                      "description" : "Machine-readable code explaining how to make the Capability active.",
                                      "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                    }
                                  }
                                }
                              }
                            },
                            "description" : "Enables this Account to receive OutboundPayments to linked bank accounts over local networks."
                          },
                          "wire" : {
                            "required" : [ "requested", "status", "status_details" ],
                            "type" : "object",
                            "properties" : {
                              "requested" : {
                                "type" : "boolean",
                                "description" : "Whether the Capability has been requested."
                              },
                              "status" : {
                                "type" : "string",
                                "description" : "The status of the Capability.",
                                "enum" : [ "active", "pending", "restricted", "unsupported" ]
                              },
                              "status_details" : {
                                "type" : "array",
                                "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                                "items" : {
                                  "required" : [ "code", "resolution" ],
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "type" : "string",
                                      "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                      "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                    },
                                    "resolution" : {
                                      "type" : "string",
                                      "description" : "Machine-readable code explaining how to make the Capability active.",
                                      "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                    }
                                  }
                                }
                              }
                            },
                            "description" : "Enables this Account to receive OutboundPayments to linked bank accounts over wire."
                          }
                        },
                        "description" : "Capabilities that enable OutboundPayments to a bank account linked to this Account."
                      },
                      "cards" : {
                        "required" : [ "requested", "status", "status_details" ],
                        "type" : "object",
                        "properties" : {
                          "requested" : {
                            "type" : "boolean",
                            "description" : "Whether the Capability has been requested."
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "The status of the Capability.",
                            "enum" : [ "active", "pending", "restricted", "unsupported" ]
                          },
                          "status_details" : {
                            "type" : "array",
                            "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                            "items" : {
                              "required" : [ "code", "resolution" ],
                              "type" : "object",
                              "properties" : {
                                "code" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                  "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                },
                                "resolution" : {
                                  "type" : "string",
                                  "description" : "Machine-readable code explaining how to make the Capability active.",
                                  "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                }
                              }
                            }
                          }
                        },
                        "description" : "Capability that enable OutboundPayments to a debit card linked to this Account."
                      },
                      "stripe_balance" : {
                        "type" : "object",
                        "properties" : {
                          "stripe_transfers" : {
                            "required" : [ "requested", "status", "status_details" ],
                            "type" : "object",
                            "properties" : {
                              "requested" : {
                                "type" : "boolean",
                                "description" : "Whether the Capability has been requested."
                              },
                              "status" : {
                                "type" : "string",
                                "description" : "The status of the Capability.",
                                "enum" : [ "active", "pending", "restricted", "unsupported" ]
                              },
                              "status_details" : {
                                "type" : "array",
                                "description" : "Additional details regarding the status of the Capability. `status_details` will be empty if the Capability's status is `active`.",
                                "items" : {
                                  "required" : [ "code", "resolution" ],
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "type" : "string",
                                      "description" : "Machine-readable code explaining the reason for the Capability to be in its current status.",
                                      "enum" : [ "determining_status", "requirements_past_due", "requirements_pending_verification", "restricted_other", "unsupported_business", "unsupported_country" ]
                                    },
                                    "resolution" : {
                                      "type" : "string",
                                      "description" : "Machine-readable code explaining how to make the Capability active.",
                                      "enum" : [ "contact_stripe", "no_resolution", "provide_info" ]
                                    }
                                  }
                                }
                              }
                            },
                            "description" : "Allows the recipient to receive /v1/transfers into their Stripe Balance (/v1/balance)."
                          }
                        },
                        "description" : "Capabilities that enable the recipient to receive money into their Stripe Balance (/v1/balance)."
                      }
                    },
                    "description" : "Capabilities that have been requested on the Recipient Configuration."
                  },
                  "default_outbound_destination" : {
                    "required" : [ "id", "type" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "The payout method ID of the default outbound destination."
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Closed Enum. The payout method type of the default outbound destination.",
                        "enum" : [ "at_bank_account", "au_bank_account", "ba_bank_account", "be_bank_account", "bg_bank_account", "bj_bank_account", "bs_bank_account", "card", "ca_bank_account", "ch_bank_account", "ci_bank_account", "cy_bank_account", "cz_bank_account", "de_bank_account", "dk_bank_account", "ec_bank_account", "ee_bank_account", "es_bank_account", "et_bank_account", "fi_bank_account", "fr_bank_account", "gb_bank_account", "gr_bank_account", "hr_bank_account", "hu_bank_account", "id_bank_account", "ie_bank_account", "il_bank_account", "in_bank_account", "is_bank_account", "it_bank_account", "ke_bank_account", "li_bank_account", "lt_bank_account", "lu_bank_account", "lv_bank_account", "mn_bank_account", "mt_bank_account", "mu_bank_account", "mx_bank_account", "na_bank_account", "nl_bank_account", "no_bank_account", "nz_bank_account", "pa_bank_account", "ph_bank_account", "pl_bank_account", "pt_bank_account", "ro_bank_account", "rs_bank_account", "se_bank_account", "sg_bank_account", "si_bank_account", "sk_bank_account", "sn_bank_account", "sv_bank_account", "tn_bank_account", "tr_bank_account", "us_bank_account", "za_bank_account" ]
                      }
                    },
                    "description" : "The payout method to be used as a default outbound destination. This will allow the PayoutMethod to be omitted on OutboundPayments made through the dashboard."
                  }
                },
                "description" : "The Recipient Configuration allows the Account to receive funds."
              }
            },
            "description" : "An Account Configuration which allows the Account to take on a key persona across Stripe products."
          },
          "contact_email" : {
            "type" : "string",
            "description" : "The default contact email address for the Account. Required when configuring the account as a merchant or recipient."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "dashboard" : {
            "type" : "string",
            "description" : "A value indicating the Stripe dashboard this Account has access to. This will depend on which configurations are enabled for this account.",
            "enum" : [ "express", "full", "none" ]
          },
          "defaults" : {
            "type" : "object",
            "properties" : {
              "currency" : {
                "type" : "string",
                "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies)."
              },
              "locales" : {
                "type" : "array",
                "description" : "The Account's preferred locales (languages), ordered by preference.",
                "items" : {
                  "type" : "string",
                  "enum" : [ "ar-SA", "bg", "bg-BG", "cs", "cs-CZ", "da", "da-DK", "de", "de-DE", "el", "el-GR", "en", "en-AU", "en-CA", "en-GB", "en-IE", "en-IN", "en-NZ", "en-SG", "en-US", "es", "es-419", "es-ES", "et", "et-EE", "fi", "fil", "fil-PH", "fi-FI", "fr", "fr-CA", "fr-FR", "he-IL", "hr", "hr-HR", "hu", "hu-HU", "id", "id-ID", "it", "it-IT", "ja", "ja-JP", "ko", "ko-KR", "lt", "lt-LT", "lv", "lv-LV", "ms", "ms-MY", "mt", "mt-MT", "nb", "nb-NO", "nl", "nl-NL", "pl", "pl-PL", "pt", "pt-BR", "pt-PT", "ro", "ro-RO", "ru", "ru-RU", "sk", "sk-SK", "sl", "sl-SI", "sv", "sv-SE", "th", "th-TH", "tr", "tr-TR", "vi", "vi-VN", "zh", "zh-Hans", "zh-Hant-HK", "zh-Hant-TW", "zh-HK", "zh-TW" ]
                }
              },
              "responsibilities" : {
                "required" : [ "fees_collector", "losses_collector" ],
                "type" : "object",
                "properties" : {
                  "fees_collector" : {
                    "type" : "string",
                    "description" : "A value indicating the responsible payer of a bundle of Stripe fees for pricing-control eligible products on this Account.",
                    "enum" : [ "application", "stripe" ]
                  },
                  "losses_collector" : {
                    "type" : "string",
                    "description" : "A value indicating who is responsible for losses when this Account can’t pay back negative balances from payments.",
                    "enum" : [ "application", "stripe" ]
                  }
                },
                "description" : "Default responsibilities held by either Stripe or the platform."
              }
            },
            "description" : "Default values to be used on Account Configurations."
          },
          "display_name" : {
            "type" : "string",
            "description" : "A descriptive name for the Account. This name will be surfaced in the Stripe Dashboard and on any invoices sent to the Account."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the Account."
          },
          "identity" : {
            "type" : "object",
            "properties" : {
              "attestations" : {
                "type" : "object",
                "properties" : {
                  "directorship_declaration" : {
                    "type" : "object",
                    "properties" : {
                      "date" : {
                        "type" : "string",
                        "description" : "The time marking when the director attestation was made. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                        "format" : "date-time"
                      },
                      "ip" : {
                        "type" : "string",
                        "description" : "The IP address from which the director attestation was made."
                      },
                      "user_agent" : {
                        "type" : "string",
                        "description" : "The user agent of the browser from which the director attestation was made."
                      }
                    },
                    "description" : "This hash is used to attest that the directors information provided to Stripe is both current and correct."
                  },
                  "ownership_declaration" : {
                    "type" : "object",
                    "properties" : {
                      "date" : {
                        "type" : "string",
                        "description" : "The time marking when the beneficial owner attestation was made. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                        "format" : "date-time"
                      },
                      "ip" : {
                        "type" : "string",
                        "description" : "The IP address from which the beneficial owner attestation was made."
                      },
                      "user_agent" : {
                        "type" : "string",
                        "description" : "The user agent of the browser from which the beneficial owner attestation was made."
                      }
                    },
                    "description" : "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct."
                  },
                  "persons_provided" : {
                    "type" : "object",
                    "properties" : {
                      "directors" : {
                        "type" : "boolean",
                        "description" : "Whether the company’s directors have been provided. Set this Boolean to true after creating all the company’s directors with the [Persons API](https://docs.stripe.com/api/v2/core/accounts/createperson)."
                      },
                      "executives" : {
                        "type" : "boolean",
                        "description" : "Whether the company’s executives have been provided. Set this Boolean to true after creating all the company’s executives with the [Persons API](https://docs.stripe.com/api/v2/core/accounts/createperson)."
                      },
                      "owners" : {
                        "type" : "boolean",
                        "description" : "Whether the company’s owners have been provided. Set this Boolean to true after creating all the company’s owners with the [Persons API](https://docs.stripe.com/api/v2/core/accounts/createperson)."
                      },
                      "ownership_exemption_reason" : {
                        "type" : "string",
                        "description" : "Reason for why the company is exempt from providing ownership information.",
                        "enum" : [ "qualified_entity_exceeds_ownership_threshold", "qualifies_as_financial_institution" ]
                      }
                    },
                    "description" : "Attestation that all Persons with a specific Relationship value have been provided."
                  },
                  "terms_of_service" : {
                    "type" : "object",
                    "properties" : {
                      "account" : {
                        "type" : "object",
                        "properties" : {
                          "date" : {
                            "type" : "string",
                            "description" : "The time when the Account's representative accepted the terms of service. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                            "format" : "date-time"
                          },
                          "ip" : {
                            "type" : "string",
                            "description" : "The IP address from which the Account's representative accepted the terms of service."
                          },
                          "user_agent" : {
                            "type" : "string",
                            "description" : "The user agent of the browser from which the Account's representative accepted the terms of service."
                          }
                        },
                        "description" : "Details on the Account's acceptance of the [Stripe Services Agreement](https://docs.stripe.com/connect/updating-accounts#tos-acceptance)."
                      }
                    },
                    "description" : "Attestations of accepted terms of service agreements."
                  }
                },
                "description" : "Attestations from the identity's key people, e.g. owners, executives, directors."
              },
              "business_details" : {
                "type" : "object",
                "properties" : {
                  "address" : {
                    "type" : "object",
                    "properties" : {
                      "city" : {
                        "type" : "string",
                        "description" : "City, district, suburb, town, or village."
                      },
                      "country" : {
                        "type" : "string",
                        "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                      },
                      "line1" : {
                        "type" : "string",
                        "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                      },
                      "line2" : {
                        "type" : "string",
                        "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                      },
                      "postal_code" : {
                        "type" : "string",
                        "description" : "ZIP or postal code."
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "State, county, province, or region."
                      },
                      "town" : {
                        "type" : "string",
                        "description" : "Town or cho-me."
                      }
                    },
                    "description" : "The company’s primary address."
                  },
                  "annual_revenue" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "object",
                        "properties" : {
                          "amount" : {
                            "type" : "integer",
                            "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                            "nullable" : false
                          },
                          "currency" : {
                            "type" : "string",
                            "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                            "nullable" : false
                          }
                        },
                        "description" : "A non-negative integer representing the amount in the smallest currency unit."
                      },
                      "fiscal_year_end" : {
                        "type" : "string",
                        "description" : "The close-out date of the preceding fiscal year in ISO 8601 format. E.g. 2023-12-31 for the 31st of December, 2023."
                      }
                    },
                    "description" : "The business gross annual revenue for its preceding fiscal year."
                  },
                  "documents" : {
                    "type" : "object",
                    "properties" : {
                      "bank_account_ownership_verification" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents that support the Bank account ownership verification requirement. Must be a document associated with the account’s primary active bank account that displays the last 4 digits of the account number, either a statement or a check."
                      },
                      "company_license" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents that demonstrate proof of a company’s license to operate."
                      },
                      "company_memorandum_of_association" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents showing the company’s Memorandum of Association."
                      },
                      "company_ministerial_decree" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "Certain countries only: One or more documents showing the ministerial decree legalizing the company’s establishment."
                      },
                      "company_registration_verification" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents that demonstrate proof of a company’s registration with the appropriate local authorities."
                      },
                      "company_tax_id_verification" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents that demonstrate proof of a company’s tax ID."
                      },
                      "primary_verification" : {
                        "required" : [ "front_back", "type" ],
                        "type" : "object",
                        "properties" : {
                          "front_back" : {
                            "required" : [ "front" ],
                            "type" : "object",
                            "properties" : {
                              "back" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              },
                              "front" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              }
                            },
                            "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens for the front and back of the verification document."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the verification document. Currently supports `front_back` only.",
                            "enum" : [ "front_back" ]
                          }
                        },
                        "description" : "A document verifying the business."
                      },
                      "proof_of_registration" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents showing the company’s proof of registration with the national business registry."
                      },
                      "proof_of_ultimate_beneficial_ownership" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents that demonstrate proof of ultimate beneficial ownership."
                      }
                    },
                    "description" : "Documents that may be submitted to satisfy various informational requests."
                  },
                  "doing_business_as" : {
                    "type" : "string",
                    "description" : "The company’s legal name."
                  },
                  "estimated_worker_count" : {
                    "type" : "integer",
                    "description" : "An estimated upper bound of employees, contractors, vendors, etc. currently working for the business."
                  },
                  "id_numbers" : {
                    "type" : "array",
                    "description" : "The provided ID numbers of a business entity.",
                    "items" : {
                      "required" : [ "type" ],
                      "type" : "object",
                      "properties" : {
                        "registrar" : {
                          "type" : "string",
                          "description" : "The registrar of the ID number (Only valid for DE ID number types)."
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Open Enum. The ID number type of a business entity.",
                          "enum" : [ "ae_crn", "ae_vat", "at_fn", "au_abn", "au_acn", "au_in", "be_cbe", "bg_uic", "br_cnpj", "ca_cn", "ca_crarr", "ca_neq", "ca_rid", "ch_chid", "ch_uid", "cy_tic", "cz_ico", "de_hrn", "de_vat", "dk_cvr", "ee_rk", "es_cif", "fi_yt", "fr_siren", "fr_vat", "gb_crn", "gi_crn", "gr_gemi", "hk_br", "hk_cr", "hk_mbs", "hu_cjs", "ie_crn", "it_rea", "it_vat", "jp_cn", "li_uid", "lt_ccrn", "lu_rcs", "lv_urn", "mt_crn", "mx_rfc", "my_brn", "my_coid", "my_sst", "nl_kvk", "no_orgnr", "nz_bn", "pl_regon", "pt_vat", "ro_cui", "se_orgnr", "sg_uen", "si_msp", "sk_ico", "th_crn", "th_prn", "th_tin", "us_ein" ]
                        }
                      }
                    }
                  },
                  "monthly_estimated_revenue" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "object",
                        "properties" : {
                          "amount" : {
                            "type" : "integer",
                            "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                            "nullable" : false
                          },
                          "currency" : {
                            "type" : "string",
                            "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                            "nullable" : false
                          }
                        },
                        "description" : "A non-negative integer representing the amount in the smallest currency unit."
                      }
                    },
                    "description" : "An estimate of the monthly revenue of the business."
                  },
                  "phone" : {
                    "type" : "string",
                    "description" : "The company’s phone number (used for verification)."
                  },
                  "product_description" : {
                    "type" : "string",
                    "description" : "Internal-only description of the product sold or service provided by the business. It’s used by Stripe for risk and underwriting purposes."
                  },
                  "registered_name" : {
                    "type" : "string",
                    "description" : "The business legal name."
                  },
                  "script_addresses" : {
                    "type" : "object",
                    "properties" : {
                      "kana" : {
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          },
                          "town" : {
                            "type" : "string",
                            "description" : "Town or cho-me."
                          }
                        },
                        "description" : "Kana Address."
                      },
                      "kanji" : {
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          },
                          "town" : {
                            "type" : "string",
                            "description" : "Town or cho-me."
                          }
                        },
                        "description" : "Kanji Address."
                      }
                    },
                    "description" : "The business registration address of the business entity in non latin script."
                  },
                  "script_names" : {
                    "type" : "object",
                    "properties" : {
                      "kana" : {
                        "type" : "object",
                        "properties" : {
                          "registered_name" : {
                            "type" : "string",
                            "description" : "Registered name of the business."
                          }
                        },
                        "description" : "Kana name."
                      },
                      "kanji" : {
                        "type" : "object",
                        "properties" : {
                          "registered_name" : {
                            "type" : "string",
                            "description" : "Registered name of the business."
                          }
                        },
                        "description" : "Kanji name."
                      }
                    },
                    "description" : "The business legal name in non latin script."
                  },
                  "structure" : {
                    "type" : "string",
                    "description" : "The category identifying the legal structure of the business.",
                    "enum" : [ "free_zone_establishment", "free_zone_llc", "governmental_unit", "government_instrumentality", "incorporated_non_profit", "incorporated_partnership", "llc", "multi_member_llc", "private_company", "private_corporation", "private_partnership", "public_company", "public_corporation", "public_partnership", "registered_charity", "single_member_llc", "sole_establishment", "sole_proprietorship", "tax_exempt_government_instrumentality", "unincorporated_association", "unincorporated_non_profit", "unincorporated_partnership" ]
                  },
                  "url" : {
                    "type" : "string",
                    "description" : "The business's publicly available website."
                  }
                },
                "description" : "Information about the company or business."
              },
              "country" : {
                "type" : "string",
                "description" : "The country in which the account holder resides, or in which the business is legally established. This should be an [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code."
              },
              "entity_type" : {
                "type" : "string",
                "description" : "The entity type.",
                "enum" : [ "company", "government_entity", "individual", "non_profit" ]
              },
              "individual" : {
                "required" : [ "account", "created", "id", "object", "updated" ],
                "type" : "object",
                "properties" : {
                  "account" : {
                    "type" : "string",
                    "description" : "The account ID which the individual belongs to."
                  },
                  "additional_addresses" : {
                    "type" : "array",
                    "description" : "Additional addresses associated with the individual.",
                    "items" : {
                      "required" : [ "purpose" ],
                      "type" : "object",
                      "properties" : {
                        "city" : {
                          "type" : "string",
                          "description" : "City, district, suburb, town, or village."
                        },
                        "country" : {
                          "type" : "string",
                          "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                        },
                        "line1" : {
                          "type" : "string",
                          "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                        },
                        "line2" : {
                          "type" : "string",
                          "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                        },
                        "postal_code" : {
                          "type" : "string",
                          "description" : "ZIP or postal code."
                        },
                        "purpose" : {
                          "type" : "string",
                          "description" : "Purpose of additional address.",
                          "enum" : [ "registered" ]
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "State, county, province, or region."
                        },
                        "town" : {
                          "type" : "string",
                          "description" : "Town or cho-me."
                        }
                      }
                    }
                  },
                  "additional_names" : {
                    "type" : "array",
                    "description" : "Additional names (e.g. aliases) associated with the individual.",
                    "items" : {
                      "required" : [ "purpose" ],
                      "type" : "object",
                      "properties" : {
                        "full_name" : {
                          "type" : "string",
                          "description" : "The individual's full name."
                        },
                        "given_name" : {
                          "type" : "string",
                          "description" : "The individual's first or given name."
                        },
                        "purpose" : {
                          "type" : "string",
                          "description" : "The purpose or type of the additional name.",
                          "enum" : [ "alias", "maiden" ]
                        },
                        "surname" : {
                          "type" : "string",
                          "description" : "The individual's last or family name."
                        }
                      }
                    }
                  },
                  "additional_terms_of_service" : {
                    "type" : "object",
                    "properties" : {
                      "account" : {
                        "type" : "object",
                        "properties" : {
                          "date" : {
                            "type" : "string",
                            "description" : "The time when the Account's representative accepted the terms of service. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                            "format" : "date-time"
                          },
                          "ip" : {
                            "type" : "string",
                            "description" : "The IP address from which the Account's representative accepted the terms of service."
                          },
                          "user_agent" : {
                            "type" : "string",
                            "description" : "The user agent of the browser from which the Account's representative accepted the terms of service."
                          }
                        },
                        "description" : "Stripe terms of service agreement."
                      }
                    },
                    "description" : "Terms of service acceptances."
                  },
                  "address" : {
                    "type" : "object",
                    "properties" : {
                      "city" : {
                        "type" : "string",
                        "description" : "City, district, suburb, town, or village."
                      },
                      "country" : {
                        "type" : "string",
                        "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                      },
                      "line1" : {
                        "type" : "string",
                        "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                      },
                      "line2" : {
                        "type" : "string",
                        "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                      },
                      "postal_code" : {
                        "type" : "string",
                        "description" : "ZIP or postal code."
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "State, county, province, or region."
                      },
                      "town" : {
                        "type" : "string",
                        "description" : "Town or cho-me."
                      }
                    },
                    "description" : "The individual's residential address."
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Time at which the object was created. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                    "format" : "date-time"
                  },
                  "date_of_birth" : {
                    "required" : [ "day", "month", "year" ],
                    "type" : "object",
                    "properties" : {
                      "day" : {
                        "type" : "integer",
                        "description" : "The day of birth, between 1 and 31."
                      },
                      "month" : {
                        "type" : "integer",
                        "description" : "The month of birth, between 1 and 12."
                      },
                      "year" : {
                        "type" : "integer",
                        "description" : "The four-digit year of birth."
                      }
                    },
                    "description" : "The individual's date of birth."
                  },
                  "documents" : {
                    "type" : "object",
                    "properties" : {
                      "company_authorization" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents that demonstrate proof that this person is authorized to represent the company."
                      },
                      "passport" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents showing the person’s passport page with photo and personal data."
                      },
                      "primary_verification" : {
                        "required" : [ "front_back", "type" ],
                        "type" : "object",
                        "properties" : {
                          "front_back" : {
                            "required" : [ "front" ],
                            "type" : "object",
                            "properties" : {
                              "back" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              },
                              "front" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              }
                            },
                            "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens for the front and back of the verification document."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the verification document. Currently supports `front_back` only.",
                            "enum" : [ "front_back" ]
                          }
                        },
                        "description" : "An identifying document showing the person's name, either a passport or local ID card."
                      },
                      "secondary_verification" : {
                        "required" : [ "front_back", "type" ],
                        "type" : "object",
                        "properties" : {
                          "front_back" : {
                            "required" : [ "front" ],
                            "type" : "object",
                            "properties" : {
                              "back" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              },
                              "front" : {
                                "type" : "string",
                                "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                              }
                            },
                            "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens for the front and back of the verification document."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the verification document. Currently supports `front_back` only.",
                            "enum" : [ "front_back" ]
                          }
                        },
                        "description" : "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company."
                      },
                      "visa" : {
                        "required" : [ "files", "type" ],
                        "type" : "object",
                        "properties" : {
                          "files" : {
                            "type" : "array",
                            "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The format of the document. Currently supports `files` only.",
                            "enum" : [ "files" ]
                          }
                        },
                        "description" : "One or more documents showing the person’s visa required for living in the country where they are residing."
                      }
                    },
                    "description" : "Documents that may be submitted to satisfy various informational requests."
                  },
                  "email" : {
                    "type" : "string",
                    "description" : "The individual's email address."
                  },
                  "given_name" : {
                    "type" : "string",
                    "description" : "The individual's first name."
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "Unique identifier for the object."
                  },
                  "id_numbers" : {
                    "type" : "array",
                    "description" : "The identification numbers (e.g., SSN) associated with the individual.",
                    "items" : {
                      "required" : [ "type" ],
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "description" : "The ID number type of an individual.",
                          "enum" : [ "ae_eid", "br_cpf", "de_stn", "hk_id", "mx_rfc", "my_nric", "nl_bsn", "sg_fin", "sg_nric", "th_lc", "th_pin", "us_itin", "us_itin_last_4", "us_ssn", "us_ssn_last_4" ]
                        }
                      }
                    }
                  },
                  "legal_gender" : {
                    "type" : "string",
                    "description" : "The individual's gender (International regulations require either \"male” or \"female\").",
                    "enum" : [ "female", "male" ]
                  },
                  "metadata" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
                  },
                  "nationalities" : {
                    "type" : "array",
                    "description" : "The countries where the individual is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "object" : {
                    "type" : "string",
                    "description" : "String representing the object's type. Objects of the same type share the same value."
                  },
                  "phone" : {
                    "type" : "string",
                    "description" : "The individual's phone number."
                  },
                  "political_exposure" : {
                    "type" : "string",
                    "description" : "Indicates if the individual or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
                    "enum" : [ "existing", "none" ]
                  },
                  "relationship" : {
                    "type" : "object",
                    "properties" : {
                      "director" : {
                        "type" : "boolean",
                        "description" : "Whether the individual is a director of the Account’s legal entity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations."
                      },
                      "executive" : {
                        "type" : "boolean",
                        "description" : "Whether the individual has significant responsibility to control, manage, or direct the organization."
                      },
                      "legal_guardian" : {
                        "type" : "boolean",
                        "description" : "Whether the individual is the legal guardian of the Account’s representative."
                      },
                      "owner" : {
                        "type" : "boolean",
                        "description" : "Whether the individual is an owner of the Account’s legal entity."
                      },
                      "percent_ownership" : {
                        "type" : "string",
                        "description" : "The percent owned by the individual of the Account’s legal entity.",
                        "format" : "decimal"
                      },
                      "representative" : {
                        "type" : "boolean",
                        "description" : "Whether the individual is authorized as the primary representative of the Account. This is the person nominated by the business to provide information about themselves, and general information about the account. There can only be one representative at any given time. At the time the account is created, this person should be set to the person responsible for opening the account."
                      },
                      "title" : {
                        "type" : "string",
                        "description" : "The individual's title (e.g., CEO, Support Engineer)."
                      }
                    },
                    "description" : "The relationship that this individual has with the Account's identity."
                  },
                  "script_addresses" : {
                    "type" : "object",
                    "properties" : {
                      "kana" : {
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          },
                          "town" : {
                            "type" : "string",
                            "description" : "Town or cho-me."
                          }
                        },
                        "description" : "Kana Address."
                      },
                      "kanji" : {
                        "type" : "object",
                        "properties" : {
                          "city" : {
                            "type" : "string",
                            "description" : "City, district, suburb, town, or village."
                          },
                          "country" : {
                            "type" : "string",
                            "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                          },
                          "line1" : {
                            "type" : "string",
                            "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                          },
                          "line2" : {
                            "type" : "string",
                            "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                          },
                          "postal_code" : {
                            "type" : "string",
                            "description" : "ZIP or postal code."
                          },
                          "state" : {
                            "type" : "string",
                            "description" : "State, county, province, or region."
                          },
                          "town" : {
                            "type" : "string",
                            "description" : "Town or cho-me."
                          }
                        },
                        "description" : "Kanji Address."
                      }
                    },
                    "description" : "The script addresses (e.g., non-Latin characters) associated with the individual."
                  },
                  "script_names" : {
                    "type" : "object",
                    "properties" : {
                      "kana" : {
                        "type" : "object",
                        "properties" : {
                          "given_name" : {
                            "type" : "string",
                            "description" : "The person's first or given name."
                          },
                          "surname" : {
                            "type" : "string",
                            "description" : "The person's last or family name."
                          }
                        },
                        "description" : "Persons name in kana script."
                      },
                      "kanji" : {
                        "type" : "object",
                        "properties" : {
                          "given_name" : {
                            "type" : "string",
                            "description" : "The person's first or given name."
                          },
                          "surname" : {
                            "type" : "string",
                            "description" : "The person's last or family name."
                          }
                        },
                        "description" : "Persons name in kanji script."
                      }
                    },
                    "description" : "The script names (e.g. non-Latin characters) associated with the individual."
                  },
                  "surname" : {
                    "type" : "string",
                    "description" : "The individual's last name."
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "Time at which the object was last updated.",
                    "format" : "date-time"
                  }
                },
                "description" : "Information about the individual represented by the Account. This property is `null` unless `entity_type` is set to `individual`."
              }
            },
            "description" : "Information about the company, individual, and business represented by the Account."
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.core.account" ]
          },
          "requirements" : {
            "required" : [ "collector" ],
            "type" : "object",
            "properties" : {
              "collector" : {
                "type" : "string",
                "description" : "A value indicating responsibility for collecting requirements on this account.",
                "enum" : [ "application", "stripe" ]
              },
              "entries" : {
                "type" : "array",
                "description" : "A list of requirements for the Account.",
                "items" : {
                  "required" : [ "awaiting_action_from", "description", "errors", "impact", "minimum_deadline", "requested_reasons" ],
                  "type" : "object",
                  "properties" : {
                    "awaiting_action_from" : {
                      "type" : "string",
                      "description" : "Whether the responsibility is with the integrator or with Stripe (to review info, to wait for some condition, etc.) to action the requirement.",
                      "enum" : [ "stripe", "user" ]
                    },
                    "description" : {
                      "type" : "string",
                      "description" : "Machine-readable string describing the requirement."
                    },
                    "errors" : {
                      "type" : "array",
                      "description" : "Descriptions of why the requirement must be collected, or why the collected information isn't satisfactory to Stripe.",
                      "items" : {
                        "required" : [ "code", "description" ],
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string",
                            "description" : "Machine-readable code describing the error.",
                            "enum" : [ "invalid_address_city_state_postal_code", "invalid_address_highway_contract_box", "invalid_address_private_mailbox", "invalid_business_profile_name", "invalid_business_profile_name_denylisted", "invalid_company_name_denylisted", "invalid_dob_age_over_maximum", "invalid_dob_age_under_18", "invalid_dob_age_under_minimum", "invalid_product_description_length", "invalid_product_description_url_match", "invalid_representative_country", "invalid_statement_descriptor_business_mismatch", "invalid_statement_descriptor_denylisted", "invalid_statement_descriptor_length", "invalid_statement_descriptor_prefix_denylisted", "invalid_statement_descriptor_prefix_mismatch", "invalid_street_address", "invalid_tax_id", "invalid_tax_id_format", "invalid_tos_acceptance", "invalid_url_denylisted", "invalid_url_format", "invalid_url_website_business_information_mismatch", "invalid_url_website_empty", "invalid_url_website_inaccessible", "invalid_url_website_inaccessible_geoblocked", "invalid_url_website_inaccessible_password_protected", "invalid_url_website_incomplete", "invalid_url_website_incomplete_cancellation_policy", "invalid_url_website_incomplete_customer_service_details", "invalid_url_website_incomplete_legal_restrictions", "invalid_url_website_incomplete_refund_policy", "invalid_url_website_incomplete_return_policy", "invalid_url_website_incomplete_terms_and_conditions", "invalid_url_website_incomplete_under_construction", "invalid_url_website_other", "invalid_url_web_presence_detected", "invalid_value_other", "unresolvable_ip_address", "unresolvable_postal_code", "verification_directors_mismatch", "verification_document_address_mismatch", "verification_document_address_missing", "verification_document_corrupt", "verification_document_country_not_supported", "verification_document_directors_mismatch", "verification_document_dob_mismatch", "verification_document_duplicate_type", "verification_document_expired", "verification_document_failed_copy", "verification_document_failed_greyscale", "verification_document_failed_other", "verification_document_failed_test_mode", "verification_document_fraudulent", "verification_document_id_number_mismatch", "verification_document_id_number_missing", "verification_document_incomplete", "verification_document_invalid", "verification_document_issue_or_expiry_date_missing", "verification_document_manipulated", "verification_document_missing_back", "verification_document_missing_front", "verification_document_name_mismatch", "verification_document_name_missing", "verification_document_nationality_mismatch", "verification_document_not_readable", "verification_document_not_signed", "verification_document_not_uploaded", "verification_document_photo_mismatch", "verification_document_too_large", "verification_document_type_not_supported", "verification_extraneous_directors", "verification_failed_address_match", "verification_failed_business_iec_number", "verification_failed_document_match", "verification_failed_id_number_match", "verification_failed_keyed_identity", "verification_failed_keyed_match", "verification_failed_name_match", "verification_failed_other", "verification_failed_representative_authority", "verification_failed_residential_address", "verification_failed_tax_id_match", "verification_failed_tax_id_not_issued", "verification_missing_directors", "verification_missing_executives", "verification_missing_owners", "verification_requires_additional_memorandum_of_associations", "verification_requires_additional_proof_of_registration", "verification_selfie_document_missing_photo", "verification_selfie_face_mismatch", "verification_selfie_manipulated", "verification_selfie_unverified_other", "verification_supportability", "verification_token_stale" ]
                          },
                          "description" : {
                            "type" : "string",
                            "description" : "Human-readable description of the error."
                          }
                        }
                      }
                    },
                    "impact" : {
                      "type" : "object",
                      "properties" : {
                        "restricts_capabilities" : {
                          "type" : "array",
                          "description" : "The Capabilities that will be restricted if the requirement is not collected and satisfactory to Stripe.",
                          "items" : {
                            "required" : [ "capability", "configuration", "deadline" ],
                            "type" : "object",
                            "properties" : {
                              "capability" : {
                                "type" : "string",
                                "description" : "The name of the Capability which will be restricted.",
                                "enum" : [ "ach_debit_payments", "acss_debit_payments", "affirm_payments", "afterpay_clearpay_payments", "alma_payments", "amazon_pay_payments", "automatic_indirect_tax", "au_becs_debit_payments", "bacs_debit_payments", "bancontact_payments", "bank_accounts.local", "bank_accounts.wire", "blik_payments", "boleto_payments", "cards", "card_payments", "cartes_bancaires_payments", "cashapp_payments", "eps_payments", "fpx_payments", "gb_bank_transfer_payments", "grabpay_payments", "ideal_payments", "jcb_payments", "jp_bank_transfer_payments", "kakao_pay_payments", "klarna_payments", "konbini_payments", "kr_card_payments", "link_payments", "mobilepay_payments", "multibanco_payments", "mx_bank_transfer_payments", "naver_pay_payments", "oxxo_payments", "p24_payments", "payco_payments", "paynow_payments", "pay_by_bank_payments", "promptpay_payments", "revolut_pay_payments", "samsung_pay_payments", "sepa_bank_transfer_payments", "sepa_debit_payments", "stripe_balance.stripe_transfers", "swish_payments", "twint_payments", "us_bank_transfer_payments", "zip_payments" ]
                              },
                              "configuration" : {
                                "type" : "string",
                                "description" : "The configuration which specifies the Capability which will be restricted.",
                                "enum" : [ "customer", "merchant", "recipient" ]
                              },
                              "deadline" : {
                                "required" : [ "status" ],
                                "type" : "object",
                                "properties" : {
                                  "status" : {
                                    "type" : "string",
                                    "description" : "The current status of the requirement's impact.",
                                    "enum" : [ "currently_due", "eventually_due", "past_due" ]
                                  }
                                },
                                "description" : "Details about when in the account lifecycle the requirement must be collected by the avoid the Capability restriction."
                              }
                            }
                          }
                        },
                        "restricts_payouts" : {
                          "required" : [ "deadline" ],
                          "type" : "object",
                          "properties" : {
                            "deadline" : {
                              "required" : [ "status" ],
                              "type" : "object",
                              "properties" : {
                                "status" : {
                                  "type" : "string",
                                  "description" : "The current status of the requirement's impact.",
                                  "enum" : [ "currently_due", "eventually_due", "past_due" ]
                                }
                              },
                              "description" : "Details about when in the Account's lifecycle the requirement must be collected by the avoid the earliest specified impact."
                            }
                          },
                          "description" : "Details about payouts restrictions that will be enforced if the requirement is not collected and satisfactory to Stripe."
                        }
                      },
                      "description" : "A hash describing the impact of not collecting the requirement, or Stripe not being able to verify the collected information."
                    },
                    "minimum_deadline" : {
                      "required" : [ "status" ],
                      "type" : "object",
                      "properties" : {
                        "status" : {
                          "type" : "string",
                          "description" : "The current status of the requirement's impact.",
                          "enum" : [ "currently_due", "eventually_due", "past_due" ]
                        }
                      },
                      "description" : "The soonest point when the account will be impacted by not providing the requirement."
                    },
                    "reference" : {
                      "required" : [ "type" ],
                      "type" : "object",
                      "properties" : {
                        "inquiry" : {
                          "type" : "string",
                          "description" : "If `inquiry` is the type, the inquiry token."
                        },
                        "resource" : {
                          "type" : "string",
                          "description" : "If `resource` is the type, the resource token."
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "The type of the reference. An additional hash is included with a name matching the type. It contains additional information specific to the type.",
                          "enum" : [ "inquiry", "resource" ]
                        }
                      },
                      "description" : "A reference to the location of the requirement."
                    },
                    "requested_reasons" : {
                      "type" : "array",
                      "description" : "A list of reasons why Stripe is collecting the requirement.",
                      "items" : {
                        "required" : [ "code" ],
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string",
                            "description" : "Machine-readable description of Stripe's reason for collecting the requirement.",
                            "enum" : [ "future_requirements", "routine_onboarding", "routine_verification" ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "summary" : {
                "type" : "object",
                "properties" : {
                  "minimum_deadline" : {
                    "required" : [ "status" ],
                    "type" : "object",
                    "properties" : {
                      "status" : {
                        "type" : "string",
                        "description" : "The current strictest status of all requirements on the Account.",
                        "enum" : [ "currently_due", "eventually_due", "past_due" ]
                      },
                      "time" : {
                        "type" : "string",
                        "description" : "The soonest RFC3339 date & time UTC value a requirement can impact the Account.",
                        "format" : "date-time"
                      }
                    },
                    "description" : "The soonest date and time a requirement on the Account will become `past due`. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: `2022-09-18T13:22:18.123Z`."
                  }
                },
                "description" : "An object containing an overview of requirements for the Account."
              }
            },
            "description" : "Information about the requirements for the Account, including what information needs to be collected, and by when."
          }
        },
        "description" : "A V2 Account is a representation of a company or individual that a Stripe user does business with. Accounts contain the contact details, Legal Entity information, and configuration required to enable the Account for use across Stripe products.",
        "x-resourceId" : "v2.core.account",
        "x-stripeResource" : {
          "in_package" : "v2.core",
          "class_name" : "Account"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/core/accounts"
        }, {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/core/accounts"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/core/accounts/{id}"
        }, {
          "method_name" : "update",
          "method_on" : "service",
          "method_type" : "update",
          "operation" : "post",
          "path" : "/v2/core/accounts/{id}"
        }, {
          "method_name" : "close",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/accounts/{id}/close"
        } ]
      },
      "v2.core.account_configuration.customer_.capability_status_updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "updated_capability" ],
            "type" : "object",
            "properties" : {
              "updated_capability" : {
                "type" : "string",
                "description" : "Open Enum. The capability which had its status updated.",
                "enum" : [ "automatic_indirect_tax" ]
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account[configuration.customer].capability_status_updated" ]
          }
        },
        "description" : "The status of a customer config capability was updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account[configuration.customer].capability_status_updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_configuration.customer_.updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account[configuration.customer].updated" ]
          }
        },
        "description" : "A customer config was updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account[configuration.customer].updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_configuration.merchant_.capability_status_updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "updated_capability" ],
            "type" : "object",
            "properties" : {
              "updated_capability" : {
                "type" : "string",
                "description" : "Open Enum. The capability which had its status updated.",
                "enum" : [ "ach_debit_payments", "acss_debit_payments", "affirm_payments", "afterpay_clearpay_payments", "alma_payments", "amazon_pay_payments", "au_becs_debit_payments", "bacs_debit_payments", "bancontact_payments", "blik_payments", "boleto_payments", "card_payments", "cartes_bancaires_payments", "cashapp_payments", "eps_payments", "fpx_payments", "gb_bank_transfer_payments", "grabpay_payments", "ideal_payments", "jcb_payments", "jp_bank_transfer_payments", "kakao_pay_payments", "klarna_payments", "konbini_payments", "kr_card_payments", "link_payments", "mobilepay_payments", "multibanco_payments", "mx_bank_transfer_payments", "naver_pay_payments", "oxxo_payments", "p24_payments", "payco_payments", "paynow_payments", "pay_by_bank_payments", "promptpay_payments", "revolut_pay_payments", "samsung_pay_payments", "sepa_bank_transfer_payments", "sepa_debit_payments", "swish_payments", "twint_payments", "us_bank_transfer_payments", "zip_payments" ]
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account[configuration.merchant].capability_status_updated" ]
          }
        },
        "description" : "The status of a merchant config capability was updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account[configuration.merchant].capability_status_updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_configuration.merchant_.updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account[configuration.merchant].updated" ]
          }
        },
        "description" : "A merchant config was updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account[configuration.merchant].updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_configuration.recipient_.capability_status_updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "updated_capability" ],
            "type" : "object",
            "properties" : {
              "updated_capability" : {
                "type" : "string",
                "description" : "Open Enum. The capability which had its status updated.",
                "enum" : [ "bank_accounts.local", "bank_accounts.local_uk", "bank_accounts.wire", "bank_accounts.wire_uk", "cards", "cards_uk", "crypto_wallets_v2", "stripe_balance.stripe_transfers", "stripe.transfers" ]
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account[configuration.recipient].capability_status_updated" ]
          }
        },
        "description" : "The status of a recipient config capability was updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account[configuration.recipient].capability_status_updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_configuration.recipient_.updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account[configuration.recipient].updated" ]
          }
        },
        "description" : "A recipient config was updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account[configuration.recipient].updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_identity_.updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account[identity].updated" ]
          }
        },
        "description" : "This event occurs when identity is updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account[identity].updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_link" : {
        "required" : [ "account", "created", "expires_at", "object", "url", "use_case" ],
        "type" : "object",
        "properties" : {
          "account" : {
            "type" : "string",
            "description" : "The ID of the Account the link was created for."
          },
          "created" : {
            "type" : "string",
            "description" : "The timestamp at which this AccountLink was created.",
            "format" : "date-time"
          },
          "expires_at" : {
            "type" : "string",
            "description" : "The timestamp at which this AccountLink will expire.",
            "format" : "date-time"
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.core.account_link" ]
          },
          "url" : {
            "type" : "string",
            "description" : "The URL for the AccountLink."
          },
          "use_case" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Open Enum. The type of AccountLink the user is requesting.",
                "enum" : [ "account_onboarding", "account_update" ]
              },
              "account_onboarding" : {
                "required" : [ "configurations", "refresh_url" ],
                "type" : "object",
                "properties" : {
                  "configurations" : {
                    "type" : "array",
                    "description" : "Open Enum. A v2/account can be configured to enable certain functionality. The configuration param targets the v2/account_link to collect information for the specified v2/account configuration/s.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "recipient" ]
                    }
                  },
                  "refresh_url" : {
                    "type" : "string",
                    "description" : "The URL the user will be redirected to if the AccountLink is expired, has been used, or is otherwise invalid. The URL you specify should attempt to generate a new AccountLink with the same parameters used to create the original AccountLink, then redirect the user to the new AccountLink’s URL so they can continue the flow. If a new AccountLink cannot be generated or the redirect fails you should display a useful error to the user. Please make sure to implement authentication before redirecting the user in case this URL is leaked to a third party."
                  },
                  "return_url" : {
                    "type" : "string",
                    "description" : "The URL that the user will be redirected to upon completing the linked flow."
                  }
                },
                "description" : "Indicates that the AccountLink provided should onboard an account."
              },
              "account_update" : {
                "required" : [ "configurations", "refresh_url" ],
                "type" : "object",
                "properties" : {
                  "configurations" : {
                    "type" : "array",
                    "description" : "Open Enum. A v2/account can be configured to enable certain functionality. The configuration param targets the v2/account_link to collect information for the specified v2/account configuration/s.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "recipient" ]
                    }
                  },
                  "refresh_url" : {
                    "type" : "string",
                    "description" : "The URL the user will be redirected to if the AccountLink is expired, has been used, or is otherwise invalid. The URL you specify should attempt to generate a new AccountLink with the same parameters used to create the original AccountLink, then redirect the user to the new AccountLink’s URL so they can continue the flow. If a new AccountLink cannot be generated or the redirect fails you should display a useful error to the user. Please make sure to implement authentication before redirecting the user in case this URL is leaked to a third party."
                  },
                  "return_url" : {
                    "type" : "string",
                    "description" : "The URL that the user will be redirected to upon completing the linked flow."
                  }
                },
                "description" : "Indicates that the AccountLink provided should update a previously onboarded account."
              }
            },
            "description" : "The use case of AccountLink the user is requesting."
          }
        },
        "description" : "AccountLinks are the means by which a Merchant grants an Account permission to access Stripe-hosted application, such as Recipient Onboarding.",
        "x-resourceId" : "v2.core.account_link",
        "x-stripeResource" : {
          "in_package" : "v2.core",
          "class_name" : "AccountLink"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/core/account_links"
        } ]
      },
      "v2.core.account_link.completed" : {
        "required" : [ "data", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "account_id", "configurations", "use_case" ],
            "type" : "object",
            "properties" : {
              "use_case" : {
                "type" : "string",
                "description" : "Open Enum. The use case type of the account link that has been completed.",
                "enum" : [ "account_onboarding", "account_update" ]
              },
              "account_id" : {
                "type" : "string",
                "description" : "The ID of the v2 account."
              },
              "configurations" : {
                "type" : "array",
                "description" : "Configurations on the Account that was onboarded via the account link.",
                "items" : {
                  "type" : "string",
                  "enum" : [ "recipient" ]
                }
              }
            },
            "description" : "Additional data about the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account_link.completed" ]
          }
        },
        "description" : "The generated account link has been completed.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account_link.completed"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_person" : {
        "required" : [ "account", "created", "id", "object", "updated" ],
        "type" : "object",
        "properties" : {
          "account" : {
            "type" : "string",
            "description" : "The account ID which the individual belongs to."
          },
          "additional_addresses" : {
            "type" : "array",
            "description" : "Additional addresses associated with the person.",
            "items" : {
              "required" : [ "purpose" ],
              "type" : "object",
              "properties" : {
                "city" : {
                  "type" : "string",
                  "description" : "City, district, suburb, town, or village."
                },
                "country" : {
                  "type" : "string",
                  "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                },
                "line1" : {
                  "type" : "string",
                  "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                },
                "line2" : {
                  "type" : "string",
                  "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                },
                "postal_code" : {
                  "type" : "string",
                  "description" : "ZIP or postal code."
                },
                "purpose" : {
                  "type" : "string",
                  "description" : "Purpose of additional address.",
                  "enum" : [ "registered" ]
                },
                "state" : {
                  "type" : "string",
                  "description" : "State, county, province, or region."
                },
                "town" : {
                  "type" : "string",
                  "description" : "Town or cho-me."
                }
              }
            }
          },
          "additional_names" : {
            "type" : "array",
            "description" : "Additional names (e.g. aliases) associated with the person.",
            "items" : {
              "required" : [ "purpose" ],
              "type" : "object",
              "properties" : {
                "full_name" : {
                  "type" : "string",
                  "description" : "The individual's full name."
                },
                "given_name" : {
                  "type" : "string",
                  "description" : "The individual's first or given name."
                },
                "purpose" : {
                  "type" : "string",
                  "description" : "The purpose or type of the additional name.",
                  "enum" : [ "alias", "maiden" ]
                },
                "surname" : {
                  "type" : "string",
                  "description" : "The individual's last or family name."
                }
              }
            }
          },
          "additional_terms_of_service" : {
            "type" : "object",
            "properties" : {
              "account" : {
                "type" : "object",
                "properties" : {
                  "date" : {
                    "type" : "string",
                    "description" : "The time when the Account's representative accepted the terms of service. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                    "format" : "date-time"
                  },
                  "ip" : {
                    "type" : "string",
                    "description" : "The IP address from which the Account's representative accepted the terms of service."
                  },
                  "user_agent" : {
                    "type" : "string",
                    "description" : "The user agent of the browser from which the Account's representative accepted the terms of service."
                  }
                },
                "description" : "Stripe terms of service agreement."
              }
            },
            "description" : "Attestations of accepted terms of service agreements."
          },
          "address" : {
            "type" : "object",
            "properties" : {
              "city" : {
                "type" : "string",
                "description" : "City, district, suburb, town, or village."
              },
              "country" : {
                "type" : "string",
                "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
              },
              "line1" : {
                "type" : "string",
                "description" : "Address line 1 (e.g., street, PO Box, or company name)."
              },
              "line2" : {
                "type" : "string",
                "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
              },
              "postal_code" : {
                "type" : "string",
                "description" : "ZIP or postal code."
              },
              "state" : {
                "type" : "string",
                "description" : "State, county, province, or region."
              },
              "town" : {
                "type" : "string",
                "description" : "Town or cho-me."
              }
            },
            "description" : "The person's residential address."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "date_of_birth" : {
            "required" : [ "day", "month", "year" ],
            "type" : "object",
            "properties" : {
              "day" : {
                "type" : "integer",
                "description" : "The day of birth, between 1 and 31."
              },
              "month" : {
                "type" : "integer",
                "description" : "The month of birth, between 1 and 12."
              },
              "year" : {
                "type" : "integer",
                "description" : "The four-digit year of birth."
              }
            },
            "description" : "The person's date of birth."
          },
          "documents" : {
            "type" : "object",
            "properties" : {
              "company_authorization" : {
                "required" : [ "files", "type" ],
                "type" : "object",
                "properties" : {
                  "files" : {
                    "type" : "array",
                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "The format of the document. Currently supports `files` only.",
                    "enum" : [ "files" ]
                  }
                },
                "description" : "One or more documents that demonstrate proof that this person is authorized to represent the company."
              },
              "passport" : {
                "required" : [ "files", "type" ],
                "type" : "object",
                "properties" : {
                  "files" : {
                    "type" : "array",
                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "The format of the document. Currently supports `files` only.",
                    "enum" : [ "files" ]
                  }
                },
                "description" : "One or more documents showing the person’s passport page with photo and personal data."
              },
              "primary_verification" : {
                "required" : [ "front_back", "type" ],
                "type" : "object",
                "properties" : {
                  "front_back" : {
                    "required" : [ "front" ],
                    "type" : "object",
                    "properties" : {
                      "back" : {
                        "type" : "string",
                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                      },
                      "front" : {
                        "type" : "string",
                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                      }
                    },
                    "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens for the front and back of the verification document."
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "The format of the verification document. Currently supports `front_back` only.",
                    "enum" : [ "front_back" ]
                  }
                },
                "description" : "An identifying document showing the person's name, either a passport or local ID card."
              },
              "secondary_verification" : {
                "required" : [ "front_back", "type" ],
                "type" : "object",
                "properties" : {
                  "front_back" : {
                    "required" : [ "front" ],
                    "type" : "object",
                    "properties" : {
                      "back" : {
                        "type" : "string",
                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the back of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                      },
                      "front" : {
                        "type" : "string",
                        "description" : "A [file upload](https://docs.stripe.com/api/persons/update#create_file) token representing the front of the verification document. The purpose of the uploaded file should be 'identity_document'. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size."
                      }
                    },
                    "description" : "The [file upload](https://docs.stripe.com/api/persons/update#create_file) tokens for the front and back of the verification document."
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "The format of the verification document. Currently supports `front_back` only.",
                    "enum" : [ "front_back" ]
                  }
                },
                "description" : "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company."
              },
              "visa" : {
                "required" : [ "files", "type" ],
                "type" : "object",
                "properties" : {
                  "files" : {
                    "type" : "array",
                    "description" : "One or more document IDs returned by a [file upload](https://docs.stripe.com/api/persons/update#create_file) with a purpose value of `account_requirement`.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "The format of the document. Currently supports `files` only.",
                    "enum" : [ "files" ]
                  }
                },
                "description" : "One or more documents showing the person’s visa required for living in the country where they are residing."
              }
            },
            "description" : "Documents that may be submitted to satisfy various informational requests."
          },
          "email" : {
            "type" : "string",
            "description" : "The person's email address."
          },
          "given_name" : {
            "type" : "string",
            "description" : "The person's first name."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the Person."
          },
          "id_numbers" : {
            "type" : "array",
            "description" : "The identification numbers (e.g., SSN) associated with the person.",
            "items" : {
              "required" : [ "type" ],
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "description" : "The ID number type of an individual.",
                  "enum" : [ "ae_eid", "br_cpf", "de_stn", "hk_id", "mx_rfc", "my_nric", "nl_bsn", "sg_fin", "sg_nric", "th_lc", "th_pin", "us_itin", "us_itin_last_4", "us_ssn", "us_ssn_last_4" ]
                }
              }
            }
          },
          "legal_gender" : {
            "type" : "string",
            "description" : "The person's gender (International regulations require either \"male\" or \"female\").",
            "enum" : [ "female", "male" ]
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
          },
          "nationalities" : {
            "type" : "array",
            "description" : "The countries where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "items" : {
              "type" : "string"
            }
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.core.account_person" ]
          },
          "phone" : {
            "type" : "string",
            "description" : "The person's phone number."
          },
          "political_exposure" : {
            "type" : "string",
            "description" : "The person's political exposure.",
            "enum" : [ "existing", "none" ]
          },
          "relationship" : {
            "type" : "object",
            "properties" : {
              "director" : {
                "type" : "boolean",
                "description" : "Whether the individual is a director of the Account’s legal entity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations."
              },
              "executive" : {
                "type" : "boolean",
                "description" : "Whether the individual has significant responsibility to control, manage, or direct the organization."
              },
              "legal_guardian" : {
                "type" : "boolean",
                "description" : "Whether the individual is the legal guardian of the Account’s representative."
              },
              "owner" : {
                "type" : "boolean",
                "description" : "Whether the individual is an owner of the Account’s legal entity."
              },
              "percent_ownership" : {
                "type" : "string",
                "description" : "The percent owned by the individual of the Account’s legal entity.",
                "format" : "decimal"
              },
              "representative" : {
                "type" : "boolean",
                "description" : "Whether the individual is authorized as the primary representative of the Account. This is the person nominated by the business to provide information about themselves, and general information about the account. There can only be one representative at any given time. At the time the account is created, this person should be set to the person responsible for opening the account."
              },
              "title" : {
                "type" : "string",
                "description" : "The individual's title (e.g., CEO, Support Engineer)."
              }
            },
            "description" : "The relationship that this person has with the Account's business or legal entity."
          },
          "script_addresses" : {
            "type" : "object",
            "properties" : {
              "kana" : {
                "type" : "object",
                "properties" : {
                  "city" : {
                    "type" : "string",
                    "description" : "City, district, suburb, town, or village."
                  },
                  "country" : {
                    "type" : "string",
                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                  },
                  "line1" : {
                    "type" : "string",
                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                  },
                  "line2" : {
                    "type" : "string",
                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                  },
                  "postal_code" : {
                    "type" : "string",
                    "description" : "ZIP or postal code."
                  },
                  "state" : {
                    "type" : "string",
                    "description" : "State, county, province, or region."
                  },
                  "town" : {
                    "type" : "string",
                    "description" : "Town or cho-me."
                  }
                },
                "description" : "Kana Address."
              },
              "kanji" : {
                "type" : "object",
                "properties" : {
                  "city" : {
                    "type" : "string",
                    "description" : "City, district, suburb, town, or village."
                  },
                  "country" : {
                    "type" : "string",
                    "description" : "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2))."
                  },
                  "line1" : {
                    "type" : "string",
                    "description" : "Address line 1 (e.g., street, PO Box, or company name)."
                  },
                  "line2" : {
                    "type" : "string",
                    "description" : "Address line 2 (e.g., apartment, suite, unit, or building)."
                  },
                  "postal_code" : {
                    "type" : "string",
                    "description" : "ZIP or postal code."
                  },
                  "state" : {
                    "type" : "string",
                    "description" : "State, county, province, or region."
                  },
                  "town" : {
                    "type" : "string",
                    "description" : "Town or cho-me."
                  }
                },
                "description" : "Kanji Address."
              }
            },
            "description" : "The script addresses (e.g., non-Latin characters) associated with the person."
          },
          "script_names" : {
            "type" : "object",
            "properties" : {
              "kana" : {
                "type" : "object",
                "properties" : {
                  "given_name" : {
                    "type" : "string",
                    "description" : "The person's first or given name."
                  },
                  "surname" : {
                    "type" : "string",
                    "description" : "The person's last or family name."
                  }
                },
                "description" : "Persons name in kana script."
              },
              "kanji" : {
                "type" : "object",
                "properties" : {
                  "given_name" : {
                    "type" : "string",
                    "description" : "The person's first or given name."
                  },
                  "surname" : {
                    "type" : "string",
                    "description" : "The person's last or family name."
                  }
                },
                "description" : "Persons name in kanji script."
              }
            },
            "description" : "The script names (e.g. non-Latin characters) associated with the person."
          },
          "surname" : {
            "type" : "string",
            "description" : "The person's last name."
          },
          "updated" : {
            "type" : "string",
            "description" : "Time at which the object was last updated. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          }
        },
        "description" : "Person retrieval response schema.",
        "x-resourceId" : "v2.core.account_person",
        "x-stripeResource" : {
          "parent" : "v2.core.account",
          "in_package" : "v2.core",
          "class_name" : "AccountPerson"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/core/accounts/{account_id}/persons"
        }, {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/core/accounts/{account_id}/persons"
        }, {
          "method_name" : "delete",
          "method_on" : "service",
          "method_type" : "delete",
          "operation" : "delete",
          "path" : "/v2/core/accounts/{account_id}/persons/{id}"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/core/accounts/{account_id}/persons/{id}"
        }, {
          "method_name" : "update",
          "method_on" : "service",
          "method_type" : "update",
          "operation" : "post",
          "path" : "/v2/core/accounts/{account_id}/persons/{id}"
        } ]
      },
      "v2.core.account_person.created" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "account_id" ],
            "type" : "object",
            "properties" : {
              "account_id" : {
                "type" : "string",
                "description" : "The ID of the v2 account."
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account_person" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account_person.created" ]
          }
        },
        "description" : "This event occurs when a person is created.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account_person.created"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_person.deleted" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "account_id" ],
            "type" : "object",
            "properties" : {
              "account_id" : {
                "type" : "string",
                "description" : "The ID of the v2 account."
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account_person" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account_person.deleted" ]
          }
        },
        "description" : "This event occurs when a person is deleted.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account_person.deleted"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_person.updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "account_id" ],
            "type" : "object",
            "properties" : {
              "account_id" : {
                "type" : "string",
                "description" : "The ID of the v2 account."
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account_person" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account_person.updated" ]
          }
        },
        "description" : "This event occurs when a person is updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account_person.updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.account_requirements_.updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.core.account" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.core.account[requirements].updated" ]
          }
        },
        "description" : "This event occurs when the account's requirements are updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.core.account[requirements].updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.core.event" : {
        "required" : [ "created", "id", "livemode", "object", "type" ],
        "type" : "object",
        "properties" : {
          "context" : {
            "type" : "string",
            "description" : "Authentication context needed to fetch the event or related object."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created.",
            "format" : "date-time"
          },
          "data" : {
            "description" : "Additional data about the event."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the event."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.core.event" ]
          },
          "reason" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Event reason type.",
                "enum" : [ "request" ]
              },
              "request" : {
                "required" : [ "id", "idempotency_key" ],
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "ID of the API request that caused the event."
                  },
                  "idempotency_key" : {
                    "type" : "string",
                    "description" : "The idempotency key transmitted during the request."
                  }
                },
                "description" : "Information on the API request that instigated the event."
              }
            },
            "description" : "Reason for the event."
          },
          "related_object" : {
            "required" : [ "id", "type", "url" ],
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique identifier for the object relevant to the event."
              },
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event."
              },
              "url" : {
                "type" : "string",
                "description" : "URL to retrieve the resource."
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event."
          }
        },
        "description" : "Events are generated to keep you informed of activity in your business account. APIs in the /v2 namespace generate [thin events](https://docs.stripe.com/event-destinations#benefits-of-thin-events) which have small, unversioned payloads that include a reference to the ID of the object that has changed. The Events v2 API returns these new thin events. [Retrieve the event object](https://docs.stripe.com/event-destinations#fetch-data) for additional data about the event. Use the related object ID in the event payload to [fetch the API resource](https://docs.stripe.com/event-destinations#retrieve-the-object-associated-with-thin-events) of the object associated with the event. Comparatively, events generated by most API v1 include a versioned snapshot of an API object in their payload.",
        "x-resourceId" : "v2.core.event",
        "x-stripeResource" : {
          "in_package" : "v2.core",
          "class_name" : "Event"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/core/events"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/core/events/{id}"
        } ]
      },
      "v2.core.event_destination" : {
        "required" : [ "created", "description", "enabled_events", "event_payload", "id", "livemode", "name", "object", "status", "type", "updated" ],
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created.",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "An optional description of what the event destination is used for."
          },
          "enabled_events" : {
            "type" : "array",
            "description" : "The list of events to enable for this endpoint.",
            "items" : {
              "type" : "string"
            }
          },
          "event_payload" : {
            "type" : "string",
            "description" : "Payload type of events being subscribed to.",
            "enum" : [ "snapshot", "thin" ]
          },
          "events_from" : {
            "type" : "array",
            "description" : "Where events should be routed from.",
            "items" : {
              "type" : "string",
              "enum" : [ "other_accounts", "self" ]
            }
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the object."
          },
          "livemode" : {
            "type" : "boolean",
            "description" : "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode."
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Metadata."
          },
          "name" : {
            "type" : "string",
            "description" : "Event destination name."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.core.event_destination" ]
          },
          "snapshot_api_version" : {
            "type" : "string",
            "description" : "If using the snapshot event payload, the API version events are rendered as."
          },
          "status" : {
            "type" : "string",
            "description" : "Status. It can be set to either enabled or disabled.",
            "enum" : [ "disabled", "enabled" ]
          },
          "status_details" : {
            "type" : "object",
            "properties" : {
              "disabled" : {
                "required" : [ "reason" ],
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string",
                    "description" : "Reason event destination has been disabled.",
                    "enum" : [ "no_aws_event_source_exists", "user" ]
                  }
                },
                "description" : "Details about why the event destination has been disabled."
              }
            },
            "description" : "Additional information about event destination status."
          },
          "type" : {
            "type" : "string",
            "description" : "Event destination type.",
            "enum" : [ "amazon_eventbridge", "webhook_endpoint" ]
          },
          "updated" : {
            "type" : "string",
            "description" : "Time at which the object was last updated.",
            "format" : "date-time"
          },
          "amazon_eventbridge" : {
            "required" : [ "aws_account_id", "aws_event_source_arn", "aws_event_source_status" ],
            "type" : "object",
            "properties" : {
              "aws_account_id" : {
                "type" : "string",
                "description" : "The AWS account ID."
              },
              "aws_event_source_arn" : {
                "type" : "string",
                "description" : "The ARN of the AWS event source."
              },
              "aws_event_source_status" : {
                "type" : "string",
                "description" : "The state of the AWS event source.",
                "enum" : [ "active", "deleted", "pending", "unknown" ]
              }
            },
            "description" : "Amazon EventBridge configuration."
          },
          "webhook_endpoint" : {
            "type" : "object",
            "properties" : {
              "signing_secret" : {
                "type" : "string",
                "description" : "The signing secret of the webhook endpoint, only includable on creation."
              },
              "url" : {
                "type" : "string",
                "description" : "The URL of the webhook endpoint, includable."
              }
            },
            "description" : "Webhook endpoint configuration."
          }
        },
        "description" : "Set up an event destination to receive events from Stripe across multiple destination types, including [webhook endpoints](https://docs.stripe.com/webhooks) and [Amazon EventBridge](https://docs.stripe.com/event-destinations/eventbridge). Event destinations support receiving [thin events](https://docs.stripe.com/api/v2/events) and [snapshot events](https://docs.stripe.com/api/events).",
        "x-resourceId" : "v2.core.event_destination",
        "x-stripeResource" : {
          "in_package" : "v2.core",
          "class_name" : "EventDestination"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/core/event_destinations"
        }, {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/core/event_destinations"
        }, {
          "method_name" : "delete",
          "method_on" : "service",
          "method_type" : "delete",
          "operation" : "delete",
          "path" : "/v2/core/event_destinations/{id}"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/core/event_destinations/{id}"
        }, {
          "method_name" : "update",
          "method_on" : "service",
          "method_type" : "update",
          "operation" : "post",
          "path" : "/v2/core/event_destinations/{id}"
        }, {
          "method_name" : "disable",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/event_destinations/{id}/disable"
        }, {
          "method_name" : "enable",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/event_destinations/{id}/enable"
        }, {
          "method_name" : "ping",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/event_destinations/{id}/ping"
        } ]
      },
      "v2.core.vault.gb_bank_account" : {
        "required" : [ "archived", "bank_account_type", "bank_name", "confirmation_of_payee", "created", "id", "last4", "object", "sort_code" ],
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean",
            "description" : "Whether this bank account object was archived. Bank account objects can be archived through\nthe /archive API, and they will not be automatically archived by Stripe. Archived bank account objects\ncannot be used as outbound destinations and will not appear in the outbound destination list."
          },
          "bank_account_type" : {
            "type" : "string",
            "description" : "Closed Enum. The type of the bank account (checking or savings).",
            "enum" : [ "checking", "savings" ]
          },
          "bank_name" : {
            "type" : "string",
            "description" : "The name of the bank."
          },
          "confirmation_of_payee" : {
            "required" : [ "result", "status" ],
            "type" : "object",
            "properties" : {
              "result" : {
                "required" : [ "created", "match_result", "matched", "message", "provided" ],
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "When the CoP result was created.",
                    "format" : "date-time"
                  },
                  "match_result" : {
                    "type" : "string",
                    "description" : "Whether or not the information of the bank account matches what you have provided. Closed enum.",
                    "enum" : [ "match", "mismatch", "partial_match", "unavailable" ]
                  },
                  "matched" : {
                    "type" : "object",
                    "properties" : {
                      "business_type" : {
                        "type" : "string",
                        "description" : "The business type given by the bank for this account, in case of a MATCH or PARTIAL_MATCH.\nClosed enum.",
                        "enum" : [ "business", "personal" ]
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "The name given by the bank for this account, in case of a MATCH or PARTIAL_MATCH."
                      }
                    },
                    "description" : "The fields that CoP service matched against. Only has value if MATCH or PARTIAL_MATCH, empty otherwise."
                  },
                  "message" : {
                    "type" : "string",
                    "description" : "Human-readable message describing the match result."
                  },
                  "provided" : {
                    "required" : [ "business_type", "name" ],
                    "type" : "object",
                    "properties" : {
                      "business_type" : {
                        "type" : "string",
                        "description" : "The provided or Legal Entity business type to match against the CoP service. Closed enum.",
                        "enum" : [ "business", "personal" ]
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "The provided or Legal Entity name to match against the CoP service."
                      }
                    },
                    "description" : "The fields that are matched against what the network has on file."
                  }
                },
                "description" : "The result of the Confirmation of Payee check, once the check has been initiated. Closed enum."
              },
              "status" : {
                "type" : "string",
                "description" : "The current state of Confirmation of Payee on this bank account. Closed enum.",
                "enum" : [ "awaiting_acknowledgement", "confirmed", "uninitiated" ]
              }
            },
            "description" : "Information around the status of Confirmation of Payee matching done on this bank account.\nConfirmation of Payee is a name matching service that must be done before making OutboundPayments in the UK."
          },
          "created" : {
            "type" : "string",
            "description" : "Creation time.",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the GbBankAccount object."
          },
          "last4" : {
            "type" : "string",
            "description" : "The last 4 digits of the account number or IBAN."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.core.vault.gb_bank_account" ]
          },
          "sort_code" : {
            "type" : "string",
            "description" : "The Sort Code of the bank account."
          }
        },
        "description" : "Use the GbBankAccounts API to create and manage GB bank account objects",
        "x-resourceId" : "v2.core.vault.gb_bank_account",
        "x-stripeResource" : {
          "in_package" : "v2.core",
          "class_name" : "VaultGbBankAccount"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/core/vault/gb_bank_accounts"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/core/vault/gb_bank_accounts/{id}"
        }, {
          "method_name" : "acknowledge_confirmation_of_payee",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/vault/gb_bank_accounts/{id}/acknowledge_confirmation_of_payee"
        }, {
          "method_name" : "archive",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/vault/gb_bank_accounts/{id}/archive"
        }, {
          "method_name" : "initiate_confirmation_of_payee",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/vault/gb_bank_accounts/{id}/initiate_confirmation_of_payee"
        } ]
      },
      "v2.core.vault.us_bank_account" : {
        "required" : [ "archived", "bank_account_type", "bank_name", "created", "id", "last4", "object" ],
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean",
            "description" : "Whether this UsBankAccount object was archived."
          },
          "bank_account_type" : {
            "type" : "string",
            "description" : "Closed Enum. The type of bank account (checking or savings).",
            "enum" : [ "checking", "savings" ]
          },
          "bank_name" : {
            "type" : "string",
            "description" : "The name of the bank this bank account belongs to. This field is populated automatically by Stripe based on the routing number."
          },
          "created" : {
            "type" : "string",
            "description" : "Creation time of the object.",
            "format" : "date-time"
          },
          "fedwire_routing_number" : {
            "type" : "string",
            "description" : "The fedwire routing number of the bank account."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the UsBankAccount object."
          },
          "last4" : {
            "type" : "string",
            "description" : "The last 4 digits of the account number."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.core.vault.us_bank_account" ]
          },
          "routing_number" : {
            "type" : "string",
            "description" : "The ACH routing number of the bank account."
          }
        },
        "description" : "Use the UsBankAccounts API to create and manage US bank accounts objects that you can use to receive funds. Note that these are not interchangeable with v1 Tokens.",
        "x-resourceId" : "v2.core.vault.us_bank_account",
        "x-stripeResource" : {
          "in_package" : "v2.core",
          "class_name" : "VaultUsBankAccount"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/core/vault/us_bank_accounts"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/core/vault/us_bank_accounts/{id}"
        }, {
          "method_name" : "update",
          "method_on" : "service",
          "method_type" : "update",
          "operation" : "post",
          "path" : "/v2/core/vault/us_bank_accounts/{id}"
        }, {
          "method_name" : "archive",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/core/vault/us_bank_accounts/{id}/archive"
        } ]
      },
      "v2.deleted_object" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the object that's being deleted."
          }
        }
      },
      "v2.error" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned"
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically"
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Stripe error response"
      },
      "v2.error.account_controller_express_dash_without_application_losses_or_fees" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "account_controller_express_dash_without_application_losses_or_fees" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "If `dashboard` is `express`, `fees_collector` must be `application` and `losses_collector` must be `application`."
      },
      "v2.error.account_controller_stripe_pricing_platform_liable" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "account_controller_stripe_pricing_platform_liable" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "If `losses_collector` is `application`, `fees_collector` must also be `application`."
      },
      "v2.error.account_controller_unsupported_configuration" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "invalid_permutation", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "account_controller_unsupported_configuration" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              },
              "invalid_permutation" : {
                "required" : [ "dashboard", "fees_collector", "losses_collector" ],
                "type" : "object",
                "properties" : {
                  "dashboard" : {
                    "type" : "string",
                    "description" : "The value provided for the dashboard field."
                  },
                  "fees_collector" : {
                    "type" : "string",
                    "description" : "The value provided for the fees_collector field."
                  },
                  "losses_collector" : {
                    "type" : "string",
                    "description" : "The value provided for the losses_collector field."
                  }
                },
                "description" : "The invalid permutation provided."
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Connect integration combination is not supported."
      },
      "v2.error.account_controller_unsupported_configuration_private_preview" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "account_controller_unsupported_configuration_private_preview" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Responsibility combinations is not supported in private preview."
      },
      "v2.error.account_country_unsupported_currency" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "account_country_unsupported_currency" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Currency is not allowed for the account's country."
      },
      "v2.error.account_create_activation_required" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "account_create_activation_required" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Platform must be activated to create connected accounts."
      },
      "v2.error.account_creation_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "account_creation_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Account creation is invalid."
      },
      "v2.error.active_outbound_setup_intent_exists_for_payout_method" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "active_outbound_setup_intent_exists_for_payout_method" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when the outbound setup intent cannot be created for a given payout method because the payout method already has another active outbound setup intent."
      },
      "v2.error.additional_legal_guardian_not_allowed" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "additional_legal_guardian_not_allowed" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "More than one legal guardian is added to an account."
      },
      "v2.error.additional_representative_not_allowed" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "additional_representative_not_allowed" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "More than one representative is added to an account."
      },
      "v2.error.additional_tos_only_allowed_for_legal_guardian" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "additional_tos_only_allowed_for_legal_guardian" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Additional terms of service are signed by someone other than the legal guardian."
      },
      "v2.error.address_characters_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "address_characters_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Invalid characters are provided for address fields."
      },
      "v2.error.address_country_identity_country_mismatch" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "address_country_identity_country_mismatch" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Address country doesn't match identity country."
      },
      "v2.error.address_country_mismatch" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "address_country_mismatch" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Registered/script address country doesn't match residential address country."
      },
      "v2.error.address_country_required" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "address_country_required" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Address country is required but not provided."
      },
      "v2.error.address_postal_code_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "address_postal_code_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Address postal code is invalid."
      },
      "v2.error.address_state_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "address_state_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Address state is invalid."
      },
      "v2.error.address_town_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "address_town_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Address town is invalid."
      },
      "v2.error.archived_meter" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "archived_meter" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The meter must be Active to submit events."
      },
      "v2.error.archived_payout_method_card" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type", "user_message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "quota_exceeded" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "archived_payout_method_card" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when attempting to update an archived card."
      },
      "v2.error.archived_us_bank_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "archived_us_bank_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where the bank account cannot be updated due to being archived."
      },
      "v2.error.attach_payment_method_to_customer" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "attach_payment_method_to_customer" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Default payment method is added to the customer config before attaching it to the account using `/v1/payment_methods`."
      },
      "v2.error.bank_account_cannot_be_archived" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "controlled_by_dashboard" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "bank_account_cannot_be_archived" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when the PayoutMethodBankAccount object is controlled by the Stripe Dashboard, and cannot be archived."
      },
      "v2.error.bank_account_cannot_be_unarchived" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "controlled_by_dashboard" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "bank_account_cannot_be_unarchived" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when the PayoutMethodBankAccount object is controlled by the Stripe Dashboard, and cannot be unarchived."
      },
      "v2.error.billing_meter_event_session_expired" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "temporary_session_expired" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "billing_meter_event_session_expired" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The temporary session token has expired."
      },
      "v2.error.blocked_payout_method_bank_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "blocked_by_stripe" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "blocked_payout_method_bank_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when the bank account cannot be added due to previous suspicious activity."
      },
      "v2.error.blocked_payout_method_card" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "blocked_by_stripe" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "blocked_payout_method_card" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where the card cannot be used due to suspicious activity."
      },
      "v2.error.blocked_us_bank_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type", "user_message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "blocked_by_stripe" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "blocked_us_bank_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where the bank account cannot be used due to suspicious activity."
      },
      "v2.error.can_create_platform_owned_onboarding_accounts_required" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "can_create_platform_owned_onboarding_accounts_required" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Dormant accounts cannot create accounts where requirements collector is application (this is an account takeover prevention measure)."
      },
      "v2.error.cannot_cancel_terminal_outbound_setup_intent" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "cannot_cancel_terminal_outbound_setup_intent" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when attempting to cancel an outbound setup intent in a terminal state (canceled or succeeded)."
      },
      "v2.error.cannot_create_connected_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "cannot_create_connected_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Platform is in an invalid state and cannot create connected accounts."
      },
      "v2.error.cannot_create_new_account_rejected" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "cannot_create_new_account_rejected" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Platform is in a rejected state and cannot create connected accounts."
      },
      "v2.error.cannot_delete_account_with_balance" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "cannot_delete_account_with_balance" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Account with Merchant or Recipient configuration with transfers feature cannot be closed because the account has a cash balance."
      },
      "v2.error.cannot_delete_customer_with_available_cash_balance" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "cannot_delete_customer_with_available_cash_balance" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Account with Customer configuration cannot be closed because the customer has a cash balance."
      },
      "v2.error.cannot_update_terminal_outbound_setup_intent" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "cannot_update_terminal_outbound_setup_intent" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when attempting to update an outbound setup intent in a terminal state (canceled or succeeded)."
      },
      "v2.error.capability_cannot_be_unrequested_due_to_other_capability_requirement" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "capability_cannot_be_unrequested_due_to_other_capability_requirement" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Feature cannot be unrequested due to being a requirement for another feature."
      },
      "v2.error.capability_not_available_for_dashboard_type" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "capability_not_available_for_dashboard_type" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Feature cannot be requested for the dashboard type."
      },
      "v2.error.capability_not_available_for_entity_type_in_country" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "capability_not_available_for_entity_type_in_country" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Requested feature is not available for the entity type in your country."
      },
      "v2.error.capability_not_available_in_country" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "capability_not_available_in_country" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Requested capability is not available in your country."
      },
      "v2.error.capability_not_available_in_platform_country" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "capability_not_available_in_platform_country" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Feature cannot be requested given the platform's country."
      },
      "v2.error.capability_not_available_without_other_capability" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "capability_not_available_without_other_capability" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Requested feature is not available without also requesting a different feature."
      },
      "v2.error.capability_not_available_without_other_capability_in_country" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "capability_not_available_without_other_capability_in_country" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Requested feature is not available without also requesting a different feature in your country."
      },
      "v2.error.configs_must_match_to_close" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "applied_configurations", "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "configs_must_match_to_close" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              },
              "applied_configurations" : {
                "type" : "array",
                "description" : "The applied configurations that should be specified.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Account cannot be closed without specifying the right configurations."
      },
      "v2.error.configuration_creation_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "configuration_creation_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Cannot create an account with an invalid configuration."
      },
      "v2.error.connect_identity_not_verified" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "connect_identity_not_verified" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Platform is not verified and cannot create connected accounts."
      },
      "v2.error.connect_profile_not_submitted" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "connect_profile_not_submitted" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Platform has not completed platform questionnaire and cannot create connected accounts."
      },
      "v2.error.custom_account_beta" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "custom_account_beta" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Custom accounts cannot be created in certain countries."
      },
      "v2.error.date_of_birth_age_restriction" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "age_limit", "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "date_of_birth_age_restriction" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              },
              "age_limit" : {
                "type" : "string",
                "description" : "Representative age should be greater than or equal to the age_limit."
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Representative date of birth does not meet the age limit."
      },
      "v2.error.date_of_birth_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "date_of_birth_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Representative date of birth is provided an invalid date or a future date."
      },
      "v2.error.default_currency_immutable" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "default_currency_immutable" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Cannot change `defaults.currency` post account activation."
      },
      "v2.error.default_outbound_destination_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "default_outbound_destination_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Outbound Destination ID is invalid."
      },
      "v2.error.default_payment_method_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "default_payment_method_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Default payment method provided for a customer does not exist or is otherwise invalid."
      },
      "v2.error.default_payment_method_invalid_type" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "default_payment_method_invalid_type" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Specified payment method exists but its type is not allowed to be the default payment method."
      },
      "v2.error.document_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "document_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Provided file tokens for documents are invalid, not found, deleted, or belong to a different account."
      },
      "v2.error.document_purpose_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "document_purpose_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Provided file tokens for documents are of the wrong purpose."
      },
      "v2.error.duplicate_meter_event" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "duplicate_meter_event" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "A meter event with a duplicate identifier has already been submitted."
      },
      "v2.error.duplicate_person_not_allowed" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "duplicate_person_id", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "duplicate_person_not_allowed" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              },
              "duplicate_person_id" : {
                "type" : "string",
                "description" : "The ID of the other person with identical fields."
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Duplicate person is added to an account."
      },
      "v2.error.email_domain_invalid_for_recipient" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "email_domain_invalid_for_recipient" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Email contains unsupported domain."
      },
      "v2.error.email_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "email_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Incorrect email is provided."
      },
      "v2.error.entity_type_not_supported_in_country" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "entity_type_not_supported_in_country" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The `identity.entity_type` value is not supported in a given `identity.country`."
      },
      "v2.error.financial_account_balance_does_not_support_currency" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "financial_account_balance_does_not_support_currency" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : ""
      },
      "v2.error.financial_account_feature_restricted" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "financial_account_feature_restricted" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : ""
      },
      "v2.error.financial_account_not_in_open_status" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "financial_account_not_open" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "financial_account_not_in_open_status" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : ""
      },
      "v2.error.financial_address_invalid_page_token" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "financial_address_invalid_page_token" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : ""
      },
      "v2.error.financial_address_not_active" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "financial_address_not_active" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : ""
      },
      "v2.error.financial_addresses_api_only_in_sandbox" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "financial_addresses_api_only_in_sandbox" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : ""
      },
      "v2.error.financial_addresses_creation_limit_exceeded" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "financial_addresses_creation_limit_exceeded" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : ""
      },
      "v2.error.id_number_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "id_number_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Provided ID number is of the wrong format for the given type."
      },
      "v2.error.idempotency_conflict" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "idempotency_conflict" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "An idempotent retry results in resource conflicts."
      },
      "v2.error.idempotency_error" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "idempotency_error" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "An idempotent retry occurred with different request parameters."
      },
      "v2.error.identity_country_required" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "identity_country_required" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The `identity.country` value is required but not provided."
      },
      "v2.error.immutable_identity_param" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "immutable_identity_param" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Identity param has been made immutable due to the state of the account."
      },
      "v2.error.inbound_transfer_from_payment_method_not_found" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "inbound_transfer_from_payment_method_not_found" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when a PaymentMethod cannot be found."
      },
      "v2.error.inbound_transfer_from_payment_method_type_unsupported" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "inbound_transfer_from_payment_method_type_unsupported" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when a valid, but unsupported PaymentMethod for InboundTransfers is provided."
      },
      "v2.error.inbound_transfer_from_payment_method_unverified" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "inbound_transfer_from_payment_method_unverified" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when a PaymentMethod that has not been verified, is provided."
      },
      "v2.error.inbound_transfer_not_allowed" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "blocked_by_stripe" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "inbound_transfer_not_allowed" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned if an InboundTransfer is not allowed for risk, legal, regulatory or other unforeseen reasons."
      },
      "v2.error.inbound_transfer_to_financial_account_not_found" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "inbound_transfer_to_financial_account_not_found" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when a FinancialAccount cannot be found."
      },
      "v2.error.incorrect_id_number_for_country" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "incorrect_id_number_for_country" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Incorrect ID number is provided for a country."
      },
      "v2.error.individual_additional_person_not_allowed" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "individual_additional_person_not_allowed" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Additional person is added for an individual business type."
      },
      "v2.error.invalid_cancel_configuration" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_cancel_configuration" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The adjustment configuration is invalid for the adjustment type."
      },
      "v2.error.invalid_country_code" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_country_code" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where the country code requested for the bank account spec is invalid."
      },
      "v2.error.invalid_fields" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "flag_set_id", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_fields" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "flag_set_id" : {
                "type" : "string"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : ""
      },
      "v2.error.invalid_id_number_for_structure" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_id_number_for_structure" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "ID number is provided that is not permitted for the Identity's entity type and business structure."
      },
      "v2.error.invalid_id_number_registrar" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_id_number_registrar" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The `identity.business_details.id_numbers.registrar` value is an invalid DE registrar."
      },
      "v2.error.invalid_payout_method" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "invalid_payout_method" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_payout_method" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where the ID provided doesn't correspond to a valid payout method."
      },
      "v2.error.invalid_payout_method_bank_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "invalid_param", "message", "type", "user_message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "invalid_payout_method" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_payout_method_bank_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              },
              "invalid_param" : {
                "type" : "string",
                "description" : "Closed Enum. The invalid parameter field.",
                "enum" : [ "account_number", "branch_number", "routing_number", "swift_code" ]
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where the PayoutMethodBankAccount object provided is not valid (wrong format of\ncredentials that does not correspond to a banking institution)."
      },
      "v2.error.invalid_payout_method_card" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "invalid_param", "message", "type", "user_message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "invalid_payout_method" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_payout_method_card" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              },
              "invalid_param" : {
                "type" : "string",
                "description" : "Closed Enum. The invalid parameter field.",
                "enum" : [ "exp_date", "exp_month", "exp_year", "number" ]
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where the PayoutMethodCard object is not valid."
      },
      "v2.error.invalid_payout_method_update" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_payout_method_update" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when attempting to update non-updatable credential data."
      },
      "v2.error.invalid_status_payout_method" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_status_payout_method" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when the credential ID provided corresponds to a resource that does not allow usage as a payout method."
      },
      "v2.error.invalid_us_bank_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "invalid_param", "message", "type", "user_message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "invalid_payment_method" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invalid_us_bank_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              },
              "invalid_param" : {
                "type" : "string",
                "enum" : [ "account_number", "fedwire_routing_number", "routing_number" ]
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where the bank account provided is not valid (wrong format of account number\nor a routing number that does not correspond to a banking institution)."
      },
      "v2.error.invoice_rendering_template_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "invoice_rendering_template_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Invoice rendering template does not exist or is otherwise invalid."
      },
      "v2.error.ip_address_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "ip_address_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Invalid IP address is provided."
      },
      "v2.error.legal_guardian_representative_not_allowed" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "legal_guardian_representative_not_allowed" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Person is designated as both legal guardian and representative."
      },
      "v2.error.legal_guardian_requires_existing_representative" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "legal_guardian_requires_existing_representative" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "A legal guardian may not be added to the account without an existing representative."
      },
      "v2.error.limit_payout_method_bank_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "quota_exceeded" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "limit_payout_method_bank_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when the number of country bank accounts has exceeded the limit in a given workspace.\nPayoutMethodBankAccount objects may be archived with the /archive API, at which point they will not count against the limit.\nIf you are not passing a V2 Account ID in the Stripe-Context header you may receive this error since\nyou are creating all your bank account objects in your own workspace."
      },
      "v2.error.limit_payout_method_card" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "quota_exceeded" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "limit_payout_method_card" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when the number of cards has exceeded the limit in a given workspace.\nPayoutMethodCard objects may be archived with the /archive API, at which point they will not count against the limit.\nIf you are not passing a V2 Account ID in the Stripe-Context header you may receive this error since\nyou are creating all your bank account objects in your own workspace."
      },
      "v2.error.limit_us_bank_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type", "user_message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "quota_exceeded" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "limit_us_bank_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when the number of UsBankAccount objects on a given V2 Account has exceeded the limit of 10.\nUsBankAccount objects may be deactivated with /deactivate, at which point they will not count against the limit.\nIf you are not passing a V2 Account ID in the Stripe-Context header you may receive this error since\nyou are creating all your UsBankAccount objects in your own workspace."
      },
      "v2.error.mcc_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "mcc_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "MCC is invalid for `configuration.merchant.mcc`."
      },
      "v2.error.no_meter" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "no_meter" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "A meter must exist to submit events."
      },
      "v2.error.non_jp_kana_kanji_address" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "non_jp_kana_kanji_address" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Kana Kanji script addresses must have JP country."
      },
      "v2.error.not_found" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "not_found" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The resource wasn't found."
      },
      "v2.error.outbound_payment_account_not_configured_as_recipient" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_account_not_configured_as_recipient" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the recipient account in the OutboundPayment request is not configured as a recipient."
      },
      "v2.error.outbound_payment_already_canceled" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "already_canceled" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_already_canceled" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when user tries to cancel an OutboundPayment that was already canceled."
      },
      "v2.error.outbound_payment_amount_too_large_for_payout_method" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_amount_too_large_for_payout_method" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the specified amount exceeds the payout method's amount limits."
      },
      "v2.error.outbound_payment_amount_too_large_for_selected_method" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_amount_too_large_for_selected_method" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when user selected a method but the specified amount exceeds the method limits."
      },
      "v2.error.outbound_payment_card_payout_method_not_supported" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_card_payout_method_not_supported" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the provided Card payout method is not eligible for outbound payment."
      },
      "v2.error.outbound_payment_cop_not_accepted" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_cop_not_accepted" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the Confirmation of Payee is not accepted."
      },
      "v2.error.outbound_payment_default_payout_method_config_not_found" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_default_payout_method_config_not_found" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when a payout method is not provided in the OutboundPayment request and the recipient account does not have a default payout method."
      },
      "v2.error.outbound_payment_from_balance_type_not_found" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_from_balance_type_not_found" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Deprecated. Error returned when balance type of provided financial account in the OutboundPayment request cannot be identified."
      },
      "v2.error.outbound_payment_from_balance_unsupported_currency" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_from_balance_unsupported_currency" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the balance type in the OutboundPayment request does not support the provided currency."
      },
      "v2.error.outbound_payment_from_financial_account_not_found" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_from_financial_account_not_found" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when financial account in the OutboundPayment request cannot be identified."
      },
      "v2.error.outbound_payment_insufficient_funds" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "insufficient_funds" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_insufficient_funds" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the balance of provided financial account and balance type in the OutboundPayment request does not have enough funds."
      },
      "v2.error.outbound_payment_invalid_page_token" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_invalid_page_token" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the page token provided in the OutboundPayments list request is invalid."
      },
      "v2.error.outbound_payment_invalid_payout_method" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_invalid_payout_method" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the payout method in the OutboundPayment request cannot be identified."
      },
      "v2.error.outbound_payment_invalid_payout_method_country" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_invalid_payout_method_country" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the payout method country does not match the recipient account country."
      },
      "v2.error.outbound_payment_method_not_supported" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_method_not_supported" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the selected method is not supported for the payout method."
      },
      "v2.error.outbound_payment_no_suitable_methods_for_large_amount" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_no_suitable_methods_for_large_amount" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when user does not specify the method or provides automatic, and the amount exceeds all the possible methods for this payout method."
      },
      "v2.error.outbound_payment_not_allowed" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_not_allowed" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the user is not allowed to make this OutboundPayment request."
      },
      "v2.error.outbound_payment_not_cancelable" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "not_cancelable" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_not_cancelable" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when user tries to cancel an OutboundPayment that is not cancelable."
      },
      "v2.error.outbound_payment_payout_method_expired" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_payout_method_expired" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the provided payout method is expired."
      },
      "v2.error.outbound_payment_quote_mismatch" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_quote_mismatch" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when key money movement fields on outbound payment quote creation request don’t match outbound payment creation request, including from, to, amount and delivery_options."
      },
      "v2.error.outbound_payment_quote_missing" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_quote_missing" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when outbound payment quote is missing for CBPs that requires fee and amount estimates prior to OBP initiation."
      },
      "v2.error.outbound_payment_recipient_amount_limit_exceeded" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type", "user_message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "quota_exceeded" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_recipient_amount_limit_exceeded" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the recipient's recent total amount in outbound payments has exceeded its limit."
      },
      "v2.error.outbound_payment_recipient_count_limit_exceeded" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type", "user_message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "quota_exceeded" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_recipient_count_limit_exceeded" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the recipient's recent outbound payment count has exceeded its limit."
      },
      "v2.error.outbound_payment_recipient_email_does_not_exist" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "recipient_not_notifiable" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_recipient_email_does_not_exist" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the user enables notifications in the OutboundPayment request, but an email is not set up on the recipient account."
      },
      "v2.error.outbound_payment_recipient_feature_not_active" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "feature_not_enabled" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_recipient_feature_not_active" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when recipient does not have the active features required to receive funds from this OutboundPayment request."
      },
      "v2.error.outbound_payment_recipient_feature_not_active_for_suitable_method" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_recipient_feature_not_active_for_suitable_method" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when user does not specify the method or provides automatic, and recipient feature is not active for suitable method."
      },
      "v2.error.outbound_payment_to_recipient_not_found" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_to_recipient_not_found" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the recipient account in the OutboundPayment request cannot be identified."
      },
      "v2.error.outbound_payment_unsupported_currency" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_payment_unsupported_currency" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the payout method does not support the request's payout method currency."
      },
      "v2.error.outbound_transfer_already_canceled" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "already_canceled" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_already_canceled" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when user tries to cancel an OutboundTransfer that was already canceled."
      },
      "v2.error.outbound_transfer_amount_too_large_for_selected_method" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_amount_too_large_for_selected_method" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when user selected a method but the specified amount exceeds the method limits."
      },
      "v2.error.outbound_transfer_card_payout_method_unsupported" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_card_payout_method_unsupported" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the payout method in the OutboundTransfer request is a card which is not currently supported."
      },
      "v2.error.outbound_transfer_cop_not_accepted" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_cop_not_accepted" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the Confirmation of Payee is not accepted."
      },
      "v2.error.outbound_transfer_from_balance_type_not_found" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_from_balance_type_not_found" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when balance type of provided financial account in the OutboundTransfer request cannot be identified."
      },
      "v2.error.outbound_transfer_from_balance_unsupported_currency" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_from_balance_unsupported_currency" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the balance type in the OutboundTransfer request does not support the provided currency."
      },
      "v2.error.outbound_transfer_from_financial_account_not_found" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_from_financial_account_not_found" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when financial account in the OutboundTransfer request cannot be identified."
      },
      "v2.error.outbound_transfer_insufficient_funds" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "insufficient_funds" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_insufficient_funds" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the balance of provided financial account and balance type in the OutboundTransfer request does not have enough funds."
      },
      "v2.error.outbound_transfer_invalid_page_token" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_invalid_page_token" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the page token provided in the OutboundTransfers list request is invalid."
      },
      "v2.error.outbound_transfer_invalid_payout_method" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_invalid_payout_method" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the payout method in the OutboundTransfer request cannot be identified."
      },
      "v2.error.outbound_transfer_invalid_payout_method_country" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_invalid_payout_method_country" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the payout method country does not match the sender account country."
      },
      "v2.error.outbound_transfer_method_not_supported" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_method_not_supported" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the selected method is not supported for the payout method."
      },
      "v2.error.outbound_transfer_no_suitable_methods_for_large_amount" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_no_suitable_methods_for_large_amount" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when user does not specify the method or provides automatic, and the amount exceeds all the possible methods for this payout method allows."
      },
      "v2.error.outbound_transfer_not_allowed" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_not_allowed" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when the user is not allowed to make this OutboundTransfer request."
      },
      "v2.error.outbound_transfer_not_cancelable" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "not_cancelable" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "outbound_transfer_not_cancelable" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when user tries to cancel an OutboundTransfer that is not cancelable."
      },
      "v2.error.payload_invalid_value" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "payload_invalid_value" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The value must be a positive integer."
      },
      "v2.error.payload_no_customer_defined" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "payload_no_customer_defined" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The payload must have a reference to the customer."
      },
      "v2.error.payload_no_value_defined" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "payload_no_value_defined" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The payload must have a value."
      },
      "v2.error.pending_transactions_cannot_be_deleted" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "pending_transactions_cannot_be_deleted" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Account cannot be closed due to other pending resources."
      },
      "v2.error.person_percent_ownership_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "person_percent_ownership_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Error returned when relationship.owner is set to true but the ownership percentage is set to 0%."
      },
      "v2.error.phone_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "phone_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Phone number is invalid."
      },
      "v2.error.platform_registration_required" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "doc_url", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "platform_registration_required" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "doc_url" : {
                "type" : "string",
                "description" : "A URL to more information about the error reported"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Platform has not signed up for Connect and cannot create connected accounts."
      },
      "v2.error.script_characters_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "script_characters_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Provided script characters are invalid for the script."
      },
      "v2.error.shipping_address_required" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "shipping_address_required" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Shipping address is required within the shipping hash."
      },
      "v2.error.shipping_name_required" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "shipping_name_required" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Shipping name is required within the shipping hash."
      },
      "v2.error.statement_descriptor_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "statement_descriptor_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Statement descriptor is invalid."
      },
      "v2.error.stripe_loss_liable_cannot_be_deleted" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "stripe_loss_liable_cannot_be_deleted" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Account with Stripe-owned loss liability and dashboard cannot be deleted."
      },
      "v2.error.structure_incompatible_for_entity_type_country" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "structure_incompatible_for_entity_type_country" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "The `business_details.structure` value is not valid for `identity.country` and `identity.entity_type`."
      },
      "v2.error.test_clock_disallowed_on_live_mode" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "test_clock_disallowed_on_live_mode" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Cannot set a test clock on a livemode customer."
      },
      "v2.error.test_clock_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "test_clock_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Test clock does not exist or is otherwise invalid."
      },
      "v2.error.test_clocks_advance_in_progress" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "test_clocks_advance_in_progress" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Cannot modify a test clock that is currently advancing."
      },
      "v2.error.test_clocks_customer_limit_reached" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "test_clocks_customer_limit_reached" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Cannot add customer to a test clock that has already reached its customer limit."
      },
      "v2.error.too_many_concurrent_requests" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "too_many_concurrent_requests" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Cannot create multiple usage events for the same customer, meter concurrently."
      },
      "v2.error.tos_acceptance_on_behalf_not_allowed" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "tos_acceptance_on_behalf_not_allowed" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "TOS cannot is accepted on behalf of accounts when requirement collection is stripe."
      },
      "v2.error.total_person_ownership_exceeded" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "total_person_ownership_exceeded" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Total ownership percentages of all Persons on the account exceeds 100%."
      },
      "v2.error.unsupported_field_for_configs" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "unsupported_field_for_configs" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Cannot set responsibilities on the current configurations."
      },
      "v2.error.unsupported_identity_field_for_configs" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "unsupported_identity_field_for_configs" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Cannot set identity fields when the Account is only configured as a customer."
      },
      "v2.error.unsupported_payout_method_bank_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "blocked_by_stripe" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "unsupported_payout_method_bank_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where Stripe is unable to support this bank at this time."
      },
      "v2.error.unsupported_us_bank" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "unsupported_us_bank" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where Stripe is unable to support this bank at this time."
      },
      "v2.error.url_invalid" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "url_invalid" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "URL is invalid."
      },
      "v2.error.us_bank_account_cannot_be_archived" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message", "type", "user_message" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of error returned",
                "enum" : [ "controlled_by_dashboard" ]
              },
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "us_bank_account_cannot_be_archived" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned when the US Bank Account in question is controlled by the Stripe Dashboard, and cannot be archived."
      },
      "v2.error.us_bank_account_field_already_exists" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "invalid_field", "message", "user_message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "us_bank_account_field_already_exists" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              },
              "user_message" : {
                "type" : "string",
                "description" : "A user-friendly message that can be shown to end-users"
              },
              "invalid_field" : {
                "type" : "string",
                "description" : "Closed Enum. The field that already exists on the resource.",
                "enum" : [ "fedwire_routing_number", "routing_number" ]
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "Returned in cases where the bank account cannot be updated due to requesting\nto update a field that already exists."
      },
      "v2.error.v1_account_instead_of_v2_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "v1_account_instead_of_v2_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "V1 Account ID cannot be used in V2 Account APIs."
      },
      "v2.error.v1_customer_instead_of_v2_account" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "required" : [ "code", "message" ],
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Short code to identify the error, should not be handled programmatically",
                "enum" : [ "v1_customer_instead_of_v2_account" ]
              },
              "message" : {
                "type" : "string",
                "description" : "A human-readable message providing more details about the error"
              }
            },
            "description" : "Information about the error that occurred"
          }
        },
        "description" : "V1 Customer ID cannot be used in V2 Account APIs."
      },
      "v2.money_management.adjustment" : {
        "required" : [ "amount", "created", "financial_account", "id", "object", "receipt_url" ],
        "type" : "object",
        "properties" : {
          "adjusted_flow" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Closed Enum. If applicable, the type of flow linked to this Adjustment. The field matching this value will contain the ID of the flow.",
                "enum" : [ "adjustment", "balance_exchange", "inbound_payment", "inbound_transfer", "outbound_payment", "outbound_transfer", "received_credit", "received_debit" ]
              },
              "adjustment" : {
                "type" : "string",
                "description" : "If applicable, the ID of the Adjustment linked to this Adjustment."
              },
              "inbound_transfer" : {
                "type" : "string",
                "description" : "If applicable, the ID of the InboundTransfer linked to this Adjustment."
              },
              "outbound_payment" : {
                "type" : "string",
                "description" : "If applicable, the ID of the OutboundPayment linked to this Adjustment."
              },
              "outbound_transfer" : {
                "type" : "string",
                "description" : "If applicable, the ID of the OutboundTransfer linked to this Adjustment."
              },
              "received_credit" : {
                "type" : "string",
                "description" : "If applicable, the ID of the ReceivedCredit linked to this Adjustment."
              },
              "received_debit" : {
                "type" : "string",
                "description" : "If applicable, the ID of the ReceivedDebit linked to this Adjustment."
              }
            },
            "description" : "If applicable, contains information about the original flow linked to this Adjustment."
          },
          "amount" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "integer",
                "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                "nullable" : false
              },
              "currency" : {
                "type" : "string",
                "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                "nullable" : false
              }
            },
            "description" : "The amount of the Adjustment."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the Adjustment and what it was used for."
          },
          "financial_account" : {
            "type" : "string",
            "description" : "The FinancialAccount that this adjustment is for."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the object."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.adjustment" ]
          },
          "receipt_url" : {
            "type" : "string",
            "description" : "A hosted transaction receipt URL that is provided when money movement is considered regulated under Stripe’s money transmission licenses."
          }
        },
        "description" : "Adjustments represent Stripe-initiated credits or debits to a user balance. They might be used to amend balances due to technical or operational error.",
        "x-resourceId" : "v2.money_management.adjustment",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "Adjustment"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/adjustments"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/adjustments/{id}"
        } ]
      },
      "v2.money_management.financial_account" : {
        "required" : [ "balance", "country", "created", "id", "object", "status", "type" ],
        "type" : "object",
        "properties" : {
          "balance" : {
            "required" : [ "available", "inbound_pending", "outbound_pending" ],
            "type" : "object",
            "properties" : {
              "available" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "integer",
                      "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                      "nullable" : false
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                      "nullable" : false
                    }
                  }
                },
                "description" : "Balance that can be used for money movement."
              },
              "inbound_pending" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "integer",
                      "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                      "nullable" : false
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                      "nullable" : false
                    }
                  }
                },
                "description" : "Balance of inbound funds that will later transition to the `cash` balance."
              },
              "outbound_pending" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "integer",
                      "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                      "nullable" : false
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                      "nullable" : false
                    }
                  }
                },
                "description" : "Balance of funds that are being used for a pending outbound money movement."
              }
            },
            "description" : "Multi-currency balance of this FinancialAccount, split by availability state. Each balance is represented as a hash where the key is the three-letter ISO currency code, in lowercase, and the value is the amount for that currency."
          },
          "country" : {
            "type" : "string",
            "description" : "Open Enum. Two-letter country code that represents the country where the LegalEntity associated with the FinancialAccount is based in."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created.",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the object."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.financial_account" ]
          },
          "other" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of the FinancialAccount, represented as a string. Upgrade your API version to see the type reflected in `financial_account.type`."
              }
            },
            "description" : "If this is a `other` FinancialAccount, this hash indicates what the actual type is. Upgrade your API version to see it reflected in `type`."
          },
          "status" : {
            "type" : "string",
            "description" : "An enum value that specifies which state the FinancialAccount is in.",
            "enum" : [ "closed", "open" ]
          },
          "storage" : {
            "required" : [ "holds_currencies" ],
            "type" : "object",
            "properties" : {
              "holds_currencies" : {
                "type" : "array",
                "description" : "The currencies that this FinancialAccount can hold.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "If this is a `storage` FinancialAccount, this hash includes details specific to `storage` FinancialAccounts."
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the FinancialAccount. An additional hash is included on the FinancialAccount with a name matching this value.\nIt contains additional information specific to the FinancialAccount type.",
            "enum" : [ "other", "storage" ]
          }
        },
        "description" : "The Financial Account is the container that allows for the configuration of money movement.",
        "x-resourceId" : "v2.money_management.financial_account",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "FinancialAccount"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/financial_accounts"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/financial_accounts/{id}"
        } ]
      },
      "v2.money_management.financial_account.created" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.financial_account" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.financial_account.created" ]
          }
        },
        "description" : "Occurs when a financial account is created.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.financial_account.created"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.financial_address" : {
        "required" : [ "created", "currency", "financial_account", "id", "object", "status" ],
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "The creation timestamp of the FinancialAddress.",
            "format" : "date-time"
          },
          "credentials" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Open Enum. The type of Credentials that are provisioned for the FinancialAddress.",
                "enum" : [ "gb_bank_account", "us_bank_account" ]
              },
              "gb_bank_account" : {
                "required" : [ "account_holder_name", "last4", "sort_code" ],
                "type" : "object",
                "properties" : {
                  "account_holder_name" : {
                    "type" : "string",
                    "description" : "The account holder name to be used during bank transference."
                  },
                  "account_number" : {
                    "type" : "string",
                    "description" : "The account number of the UK Bank Account."
                  },
                  "last4" : {
                    "type" : "string",
                    "description" : "The last four digits of the UK Bank Account number. This will always be returned.\nTo view the full account number when retrieving or listing FinancialAddresses, use the `include` request parameter."
                  },
                  "sort_code" : {
                    "type" : "string",
                    "description" : "The sort code of the UK Bank Account."
                  }
                },
                "description" : "The credentials of the UK Bank Account for the FinancialAddress. This contains unique banking details such as the sort code, account number, etc. of a UK bank account."
              },
              "us_bank_account" : {
                "required" : [ "last4", "routing_number" ],
                "type" : "object",
                "properties" : {
                  "account_number" : {
                    "type" : "string",
                    "description" : "The account number of the US Bank Account."
                  },
                  "bank_name" : {
                    "type" : "string",
                    "description" : "The name of the Bank."
                  },
                  "last4" : {
                    "type" : "string",
                    "description" : "The last four digits of the US Bank Account number. This will always be returned.\nTo view the full account number when retrieving or listing FinancialAddresses, use the `include` request parameter."
                  },
                  "routing_number" : {
                    "type" : "string",
                    "description" : "The routing number of the US Bank Account."
                  },
                  "swift_code" : {
                    "type" : "string",
                    "description" : "The swift code of the bank or financial institution."
                  }
                },
                "description" : "The credentials of the US Bank Account for the FinancialAddress. This contains unique banking details such as the routing number, account number, etc. of a US bank account."
              }
            },
            "description" : "Object indicates the type of credentials that have been allocated and attached to the FinancialAddress.\nIt contains all necessary banking details with which to perform money movements with the FinancialAddress.\nThis field is only available for FinancialAddresses with an active status."
          },
          "currency" : {
            "type" : "string",
            "description" : "Open Enum. The currency the FinancialAddress supports."
          },
          "financial_account" : {
            "type" : "string",
            "description" : "A ID of the FinancialAccount this FinancialAddress corresponds to."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of a FinancialAddress."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.financial_address" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Closed Enum. An enum representing the status of the FinancialAddress. This indicates whether or not the FinancialAddress can be used for any money movement flows.",
            "enum" : [ "active", "archived", "failed", "pending" ]
          }
        },
        "description" : "A FinancialAddress contains information needed to transfer money to a Financial Account. A Financial Account can have more than one Financial Address.",
        "x-resourceId" : "v2.money_management.financial_address",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "FinancialAddress"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/financial_addresses"
        }, {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/money_management/financial_addresses"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/financial_addresses/{id}"
        } ]
      },
      "v2.money_management.financial_address.activated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.financial_address" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.financial_address.activated" ]
          }
        },
        "description" : "The FinancialAddress is now active and ready to receive funds using the credentials provided.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.financial_address.activated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.financial_address.failed" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.financial_address" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.financial_address.failed" ]
          }
        },
        "description" : "The FinancialAddress could not be activated and can not receive funds.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.financial_address.failed"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.inbound_transfer" : {
        "required" : [ "amount", "created", "description", "from", "id", "object", "receipt_url", "to", "transfer_history" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "integer",
                "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                "nullable" : false
              },
              "currency" : {
                "type" : "string",
                "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                "nullable" : false
              }
            },
            "description" : "The amount in specified currency that will land in the FinancialAccount balance."
          },
          "created" : {
            "type" : "string",
            "description" : "Creation time of the InboundTransfer. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "A freeform text field provided by user, containing metadata."
          },
          "from" : {
            "required" : [ "debited", "payment_method" ],
            "type" : "object",
            "properties" : {
              "debited" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "The amount in specified currency that was debited from the Payment Method."
              },
              "payment_method" : {
                "required" : [ "type" ],
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "string",
                    "description" : "The type of object this destination represents. For a us bank account, we expect us_bank_account."
                  },
                  "us_bank_account" : {
                    "type" : "string",
                    "description" : "The destination US bank account identifier. eg \"usba_***\"."
                  }
                },
                "description" : "The Payment Method object used to create the InboundTransfer."
              }
            },
            "description" : "A nested object containing information about the origin of the InboundTransfer."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the InboundTransfer."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.inbound_transfer" ]
          },
          "receipt_url" : {
            "type" : "string",
            "description" : "A hosted transaction receipt URL that is provided when money movement is considered regulated under Stripe’s money transmission licenses."
          },
          "to" : {
            "required" : [ "credited", "financial_account" ],
            "type" : "object",
            "properties" : {
              "credited" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "The amount by which the FinancialAccount balance is credited."
              },
              "financial_account" : {
                "type" : "string",
                "description" : "The FinancialAccount that funds will land in."
              }
            },
            "description" : "A nested object containing information about the destination of the InboundTransfer."
          },
          "transfer_history" : {
            "type" : "array",
            "description" : "A list of history objects, representing changes in the state of the InboundTransfer.",
            "items" : {
              "required" : [ "created", "effective_at", "id", "level", "type" ],
              "type" : "object",
              "properties" : {
                "created" : {
                  "type" : "string",
                  "description" : "Creation time of the HistoryEntry in RFC 3339 format and UTC.",
                  "format" : "date-time"
                },
                "effective_at" : {
                  "type" : "string",
                  "description" : "Effective at time of the HistoryEntry in RFC 3339 format and UTC.",
                  "format" : "date-time"
                },
                "id" : {
                  "type" : "string",
                  "description" : "A unique ID for the HistoryEntry."
                },
                "level" : {
                  "type" : "string",
                  "description" : "Open Enum. The Level of the HistoryEntry.",
                  "enum" : [ "canonical", "debug" ]
                },
                "type" : {
                  "type" : "string",
                  "description" : "Open Enum. The type of the HistoryEntry.",
                  "enum" : [ "bank_debit_failed", "bank_debit_processing", "bank_debit_queued", "bank_debit_returned", "bank_debit_succeeded" ]
                },
                "bank_debit_failed" : {
                  "required" : [ "failure_reason" ],
                  "type" : "object",
                  "properties" : {
                    "failure_reason" : {
                      "type" : "string",
                      "description" : "Open Enum. The return reason for the failed InboundTransfer.",
                      "enum" : [ "bank_account_closed", "bank_account_not_found", "bank_debit_could_not_be_processed", "bank_debit_not_authorized", "insufficient_funds" ]
                    }
                  },
                  "description" : "The history entry for a failed InboundTransfer."
                },
                "bank_debit_processing" : {
                  "type" : "object",
                  "description" : "The history entry for a processing InboundTransfer."
                },
                "bank_debit_queued" : {
                  "type" : "object",
                  "description" : "The history entry for a queued InboundTransfer."
                },
                "bank_debit_returned" : {
                  "required" : [ "return_reason" ],
                  "type" : "object",
                  "properties" : {
                    "return_reason" : {
                      "type" : "string",
                      "description" : "Open Enum. The return reason for the returned InboundTransfer.",
                      "enum" : [ "bank_account_closed", "bank_account_not_found", "bank_debit_could_not_be_processed", "bank_debit_not_authorized", "insufficient_funds" ]
                    }
                  },
                  "description" : "The history entry for a returned InboundTransfer."
                },
                "bank_debit_succeeded" : {
                  "type" : "object",
                  "description" : "The history entry for a succeeded InboundTransfer."
                }
              }
            }
          }
        },
        "description" : "An InboundTransfer object, representing a money movement from a\nuser owned PaymentMethod to a FinancialAccount belonging to the same user.",
        "x-resourceId" : "v2.money_management.inbound_transfer",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "InboundTransfer"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/inbound_transfers"
        }, {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/money_management/inbound_transfers"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/inbound_transfers/{id}"
        } ]
      },
      "v2.money_management.inbound_transfer.available" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "transaction_id" ],
            "type" : "object",
            "properties" : {
              "transaction_id" : {
                "type" : "string",
                "description" : "The transaction ID of the received credit."
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.inbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.inbound_transfer.available" ]
          }
        },
        "description" : "Funds from an InboundTransfer were just made available.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.inbound_transfer.available"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.inbound_transfer.bank_debit_failed" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.inbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.inbound_transfer.bank_debit_failed" ]
          }
        },
        "description" : "An InboundTransfer failed.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.inbound_transfer.bank_debit_failed"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.inbound_transfer.bank_debit_processing" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.inbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.inbound_transfer.bank_debit_processing" ]
          }
        },
        "description" : "An InboundTransfer is now processing.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.inbound_transfer.bank_debit_processing"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.inbound_transfer.bank_debit_queued" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.inbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.inbound_transfer.bank_debit_queued" ]
          }
        },
        "description" : "An InboundTransfer has been queued.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.inbound_transfer.bank_debit_queued"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.inbound_transfer.bank_debit_returned" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.inbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.inbound_transfer.bank_debit_returned" ]
          }
        },
        "description" : "An InboundTransfer was returned.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.inbound_transfer.bank_debit_returned"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.inbound_transfer.bank_debit_succeeded" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.inbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.inbound_transfer.bank_debit_succeeded" ]
          }
        },
        "description" : "An InboundTransfer succeeded.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.inbound_transfer.bank_debit_succeeded"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_payment" : {
        "required" : [ "amount", "cancelable", "created", "from", "id", "object", "receipt_url", "recipient_notification", "statement_descriptor", "status", "to", "trace_id" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "integer",
                "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                "nullable" : false
              },
              "currency" : {
                "type" : "string",
                "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                "nullable" : false
              }
            },
            "description" : "The \"presentment amount\" for the OutboundPayment."
          },
          "cancelable" : {
            "type" : "boolean",
            "description" : "Returns true if the OutboundPayment can be canceled, and false otherwise."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the OutboundPayment was created.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "delivery_options" : {
            "type" : "object",
            "properties" : {
              "bank_account" : {
                "type" : "string",
                "description" : "Open Enum. Method for bank account.",
                "enum" : [ "automatic", "local", "wire" ]
              }
            },
            "description" : "Delivery options to be used to send the OutboundPayment."
          },
          "description" : {
            "type" : "string",
            "description" : "An arbitrary string attached to the OutboundPayment. Often useful for displaying to users."
          },
          "expected_arrival_date" : {
            "type" : "string",
            "description" : "The date when funds are expected to arrive in the payout method. This field is not set if the payout method is in a `failed`, `canceled`, or `returned` state.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "from" : {
            "required" : [ "debited", "financial_account" ],
            "type" : "object",
            "properties" : {
              "debited" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "The monetary amount debited from the sender, only set on responses."
              },
              "financial_account" : {
                "type" : "string",
                "description" : "The FinancialAccount that funds were pulled from."
              }
            },
            "description" : "The FinancialAccount that funds were pulled from."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the OutboundPayment."
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.outbound_payment" ]
          },
          "outbound_payment_quote" : {
            "type" : "string",
            "description" : "The quote for this OutboundPayment. Only required for countries with regulatory mandates to display fee estimates before OutboundPayment creation.",
            "x-stripeNotPublic" : true
          },
          "receipt_url" : {
            "type" : "string",
            "description" : "A hosted transaction receipt URL that is provided when money movement is considered regulated under Stripe's money transmission licenses."
          },
          "recipient_notification" : {
            "required" : [ "setting" ],
            "type" : "object",
            "properties" : {
              "setting" : {
                "type" : "string",
                "description" : "Closed Enum. Configuration option to enable or disable notifications to recipients.\nDo not send notifications when setting is NONE. Default to account setting when setting is CONFIGURED or not set.",
                "enum" : [ "configured", "none" ]
              }
            },
            "description" : "Details about the OutboundPayment notification settings for recipient."
          },
          "statement_descriptor" : {
            "type" : "string",
            "description" : "The description that appears on the receiving end for an OutboundPayment (for example, bank statement for external bank transfer)."
          },
          "status" : {
            "type" : "string",
            "description" : "Closed Enum. Current status of the OutboundPayment: `processing`, `failed`, `posted`, `returned`, `canceled`.\nAn OutboundPayment is `processing` if it has been created and is processing.\nThe status changes to `posted` once the OutboundPayment has been \"confirmed\" and funds have left the account, or to `failed` or `canceled`.\nIf an OutboundPayment fails to arrive at its payout method, its status will change to `returned`.",
            "enum" : [ "canceled", "failed", "posted", "processing", "returned" ]
          },
          "status_details" : {
            "type" : "object",
            "properties" : {
              "failed" : {
                "required" : [ "reason" ],
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string",
                    "description" : "Open Enum. The `failed` status reason.",
                    "enum" : [ "payout_method_declined", "payout_method_does_not_exist", "payout_method_expired", "payout_method_unsupported", "payout_method_usage_frequency_limit_exceeded", "unknown_failure" ]
                  }
                },
                "description" : "The `failed` status reason."
              },
              "returned" : {
                "required" : [ "reason" ],
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string",
                    "description" : "Open Enum. The `returned` status reason.",
                    "enum" : [ "payout_method_canceled_by_customer", "payout_method_closed", "payout_method_currency_unsupported", "payout_method_does_not_exist", "payout_method_holder_address_incorrect", "payout_method_holder_details_incorrect", "payout_method_holder_name_incorrect", "payout_method_invalid_account_number", "payout_method_restricted", "recalled", "unknown_failure" ]
                  }
                },
                "description" : "The `returned` status reason."
              }
            },
            "description" : "Status details for an OutboundPayment in a `failed` or `returned` state."
          },
          "status_transitions" : {
            "type" : "object",
            "properties" : {
              "canceled_at" : {
                "type" : "string",
                "description" : "Timestamp describing when an OutboundPayment changed status to `canceled`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              },
              "failed_at" : {
                "type" : "string",
                "description" : "Timestamp describing when an OutboundPayment changed status to `failed`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              },
              "posted_at" : {
                "type" : "string",
                "description" : "Timestamp describing when an OutboundPayment changed status to `posted`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              },
              "returned_at" : {
                "type" : "string",
                "description" : "Timestamp describing when an OutboundPayment changed status to `returned`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              }
            },
            "description" : "Hash containing timestamps of when the object transitioned to a particular status."
          },
          "to" : {
            "required" : [ "credited", "payout_method", "recipient" ],
            "type" : "object",
            "properties" : {
              "credited" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "The monetary amount being credited to the destination."
              },
              "payout_method" : {
                "type" : "string",
                "description" : "The payout method which the OutboundPayment uses to send payout."
              },
              "recipient" : {
                "type" : "string",
                "description" : "To which account the OutboundPayment is sent."
              }
            },
            "description" : "To which payout method the OutboundPayment was sent."
          },
          "trace_id" : {
            "required" : [ "status" ],
            "type" : "object",
            "properties" : {
              "status" : {
                "type" : "string",
                "description" : "Possible values are `pending`, `supported`, and `unsupported`. Initially set to `pending`, it changes to\n`supported` when the recipient bank provides a trace ID, or `unsupported` if the recipient bank doesn't support it.\nNote that this status may not align with the OutboundPayment or OutboundTransfer status and can remain `pending`\neven after the payment or transfer is posted.",
                "enum" : [ "pending", "supported", "unsupported" ]
              },
              "value" : {
                "type" : "string",
                "description" : "The trace ID value if `trace_id.status` is `supported`, otherwise empty."
              }
            },
            "description" : "A unique identifier that can be used to track this OutboundPayment with recipient bank. Banks might call this a “reference number” or something similar.",
            "x-stripeNotPublic" : true
          }
        },
        "description" : "OutboundPayment represents a single money movement from one FinancialAccount you own to a payout method someone else owns.",
        "x-resourceId" : "v2.money_management.outbound_payment",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "OutboundPayment"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/outbound_payments"
        }, {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/money_management/outbound_payments"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/outbound_payments/{id}"
        }, {
          "method_name" : "cancel",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/money_management/outbound_payments/{id}/cancel"
        } ]
      },
      "v2.money_management.outbound_payment.canceled" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_payment" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_payment.canceled" ]
          }
        },
        "description" : "An OutboundPayment has transitioned into the canceled state.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_payment.canceled"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_payment.created" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_payment" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_payment.created" ]
          }
        },
        "description" : "A new OutboundPayment has been created.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_payment.created"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_payment.failed" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_payment" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_payment.failed" ]
          }
        },
        "description" : "An OutboundPayment has transitioned into the failed state.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_payment.failed"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_payment.posted" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_payment" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_payment.posted" ]
          }
        },
        "description" : "An OutboundPayment has transitioned into the posted state.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_payment.posted"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_payment.returned" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_payment" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_payment.returned" ]
          }
        },
        "description" : "An OutboundPayment has transitioned into the returned state.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_payment.returned"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_payment_quote" : {
        "required" : [ "amount", "created", "estimated_fees", "from", "fx_quote", "id", "object", "to" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "integer",
                "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                "nullable" : false
              },
              "currency" : {
                "type" : "string",
                "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                "nullable" : false
              }
            },
            "description" : "The \"presentment amount\" for the OutboundPaymentQuote."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the OutboundPaymentQuote was created.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "delivery_options" : {
            "type" : "object",
            "properties" : {
              "bank_account" : {
                "type" : "string",
                "description" : "Open Enum. Method for bank account.",
                "enum" : [ "automatic", "local", "wire" ]
              }
            },
            "description" : "Delivery options to be used to send the OutboundPayment."
          },
          "estimated_fees" : {
            "type" : "array",
            "description" : "The estimated fees for the OutboundPaymentQuote.",
            "items" : {
              "required" : [ "amount", "type" ],
              "type" : "object",
              "properties" : {
                "amount" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "integer",
                      "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                      "nullable" : false
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                      "nullable" : false
                    }
                  },
                  "description" : "The fee amount for corresponding fee type."
                },
                "type" : {
                  "type" : "string",
                  "description" : "The fee type.",
                  "enum" : [ "cross_border_fee", "fx_fee", "payout_fee" ]
                }
              }
            }
          },
          "from" : {
            "required" : [ "debited", "financial_account" ],
            "type" : "object",
            "properties" : {
              "debited" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "The monetary amount debited from the sender, only set on responses."
              },
              "financial_account" : {
                "type" : "string",
                "description" : "The FinancialAccount that funds were pulled from."
              }
            },
            "description" : "Details about the sender of an OutboundPaymentQuote."
          },
          "fx_quote" : {
            "required" : [ "rates", "to_currency" ],
            "type" : "object",
            "properties" : {
              "rates" : {
                "type" : "object",
                "additionalProperties" : {
                  "required" : [ "exchange_rate" ],
                  "type" : "object",
                  "properties" : {
                    "exchange_rate" : {
                      "type" : "string",
                      "description" : "The exchange rate going from_currency -> to_currency."
                    }
                  }
                },
                "description" : "Key pair: from currency Value: exchange rate going from_currency -> to_currency."
              },
              "to_currency" : {
                "type" : "string",
                "description" : "The currency that the transaction is exchanging to."
              }
            },
            "description" : "The underlying FXQuote details for the OutboundPaymentQuote."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the OutboundPaymentQuote."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.outbound_payment_quote" ]
          },
          "to" : {
            "required" : [ "credited", "payout_method", "recipient" ],
            "type" : "object",
            "properties" : {
              "credited" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "The monetary amount being credited to the destination."
              },
              "payout_method" : {
                "type" : "string",
                "description" : "The payout method which the OutboundPayment uses to send payout."
              },
              "recipient" : {
                "type" : "string",
                "description" : "To which account the OutboundPayment is sent."
              }
            },
            "description" : "Details about the recipient of an OutboundPaymentQuote."
          }
        },
        "description" : "OutboundPaymentQuote represents a quote",
        "x-resourceId" : "v2.money_management.outbound_payment_quote",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "OutboundPaymentQuote"
        },
        "x-stripeOperations" : [ {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/money_management/outbound_payment_quotes"
        } ]
      },
      "v2.money_management.outbound_setup_intent" : {
        "required" : [ "created", "id", "object", "payout_method", "status", "usage_intent" ],
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "Created timestamp.",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the outbound setup intent."
          },
          "next_action" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of next action.",
                "enum" : [ "confirmation_of_payee" ]
              },
              "confirmation_of_payee" : {
                "required" : [ "object", "status" ],
                "type" : "object",
                "properties" : {
                  "object" : {
                    "type" : "string",
                    "description" : "The type of the credential."
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "The Confirmation of Payee status.",
                    "enum" : [ "awaiting_acknowledgement", "confirmed", "uninitiated" ]
                  }
                },
                "description" : "Confirmation of Payee details."
              }
            },
            "description" : "Specifies which actions needs to be taken next to continue setup of the credential."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.outbound_setup_intent" ]
          },
          "payout_method" : {
            "$ref" : "#/components/schemas/v2.money_management.payout_method"
          },
          "status" : {
            "type" : "string",
            "description" : "Closed Enum. Status of the outbound setup intent.",
            "enum" : [ "canceled", "requires_action", "requires_payout_method", "succeeded" ]
          },
          "usage_intent" : {
            "type" : "string",
            "description" : "The intended money movement flow this payout method should be set up for, specified in params.",
            "enum" : [ "payment", "transfer" ]
          }
        },
        "description" : "Use the OutboundSetupIntent API to create and setup usable payout methods.",
        "x-resourceId" : "v2.money_management.outbound_setup_intent",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "OutboundSetupIntent"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/outbound_setup_intents"
        }, {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/money_management/outbound_setup_intents"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/outbound_setup_intents/{id}"
        }, {
          "method_name" : "update",
          "method_on" : "service",
          "method_type" : "update",
          "operation" : "post",
          "path" : "/v2/money_management/outbound_setup_intents/{id}"
        }, {
          "method_name" : "cancel",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/money_management/outbound_setup_intents/{id}/cancel"
        } ]
      },
      "v2.money_management.outbound_transfer" : {
        "required" : [ "amount", "cancelable", "created", "from", "id", "object", "receipt_url", "statement_descriptor", "status", "to", "trace_id" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "integer",
                "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                "nullable" : false
              },
              "currency" : {
                "type" : "string",
                "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                "nullable" : false
              }
            },
            "description" : "The \"presentment amount\" for the OutboundTransfer."
          },
          "cancelable" : {
            "type" : "boolean",
            "description" : "Returns true if the OutboundTransfer can be canceled, and false otherwise."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the OutboundTransfer was created.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "delivery_options" : {
            "type" : "object",
            "properties" : {
              "bank_account" : {
                "type" : "string",
                "description" : "Open Enum. Method for bank account.",
                "enum" : [ "automatic", "local", "wire" ]
              }
            },
            "description" : "Delivery options to be used to send the OutboundTransfer."
          },
          "description" : {
            "type" : "string",
            "description" : "An arbitrary string attached to the OutboundTransfer. Often useful for displaying to users."
          },
          "expected_arrival_date" : {
            "type" : "string",
            "description" : "The date when funds are expected to arrive in the payout method. This field is not set if the payout method is in a `failed`, `canceled`, or `returned` state.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "from" : {
            "required" : [ "debited", "financial_account" ],
            "type" : "object",
            "properties" : {
              "debited" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "The monetary amount debited from the sender, only set on responses."
              },
              "financial_account" : {
                "type" : "string",
                "description" : "The FinancialAccount that funds were pulled from."
              }
            },
            "description" : "The FinancialAccount that funds were pulled from."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the OutboundTransfer."
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.outbound_transfer" ]
          },
          "receipt_url" : {
            "type" : "string",
            "description" : "A hosted transaction receipt URL that is provided when money movement is considered regulated under Stripe's money transmission licenses."
          },
          "statement_descriptor" : {
            "type" : "string",
            "description" : "The description that appears on the receiving end for an OutboundTransfer (for example, bank statement for external bank transfer)."
          },
          "status" : {
            "type" : "string",
            "description" : "Closed Enum. Current status of the OutboundTransfer: `processing`, `failed`, `posted`, `returned`, `canceled`.\nAn OutboundTransfer is `processing` if it has been created and is processing.\nThe status changes to `posted` once the OutboundTransfer has been \"confirmed\" and funds have left the account, or to `failed` or `canceled`.\nIf an OutboundTransfer fails to arrive at its payout method, its status will change to `returned`.",
            "enum" : [ "canceled", "failed", "posted", "processing", "returned" ]
          },
          "status_details" : {
            "type" : "object",
            "properties" : {
              "failed" : {
                "required" : [ "reason" ],
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string",
                    "description" : "Open Enum. The `failed` status reason.",
                    "enum" : [ "payout_method_declined", "payout_method_does_not_exist", "payout_method_expired", "payout_method_unsupported", "payout_method_usage_frequency_limit_exceeded", "unknown_failure" ]
                  }
                },
                "description" : "The `failed` status reason."
              },
              "returned" : {
                "required" : [ "reason" ],
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string",
                    "description" : "Open Enum. The `returned` status reason.",
                    "enum" : [ "payout_method_canceled_by_customer", "payout_method_closed", "payout_method_currency_unsupported", "payout_method_does_not_exist", "payout_method_holder_address_incorrect", "payout_method_holder_details_incorrect", "payout_method_holder_name_incorrect", "payout_method_invalid_account_number", "payout_method_restricted", "recalled", "unknown_failure" ]
                  }
                },
                "description" : "The `returned` status reason."
              }
            },
            "description" : "Status details for an OutboundTransfer in a `failed` or `returned` state."
          },
          "status_transitions" : {
            "type" : "object",
            "properties" : {
              "canceled_at" : {
                "type" : "string",
                "description" : "Timestamp describing when an OutboundTransfer changed status to `canceled`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              },
              "failed_at" : {
                "type" : "string",
                "description" : "Timestamp describing when an OutboundTransfer changed status to `failed`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              },
              "posted_at" : {
                "type" : "string",
                "description" : "Timestamp describing when an OutboundTransfer changed status to `posted`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              },
              "returned_at" : {
                "type" : "string",
                "description" : "Timestamp describing when an OutboundTransfer changed status to `returned`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              }
            },
            "description" : "Hash containing timestamps of when the object transitioned to a particular status."
          },
          "to" : {
            "required" : [ "credited", "payout_method" ],
            "type" : "object",
            "properties" : {
              "credited" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "The monetary amount being credited to the destination."
              },
              "payout_method" : {
                "type" : "string",
                "description" : "The payout method which the OutboundTransfer uses to send payout."
              }
            },
            "description" : "To which payout method the OutboundTransfer was sent."
          },
          "trace_id" : {
            "required" : [ "status" ],
            "type" : "object",
            "properties" : {
              "status" : {
                "type" : "string",
                "description" : "Possible values are `pending`, `supported`, and `unsupported`. Initially set to `pending`, it changes to\n`supported` when the recipient bank provides a trace ID, or `unsupported` if the recipient bank doesn't support it.\nNote that this status may not align with the OutboundPayment or OutboundTransfer status and can remain `pending`\neven after the payment or transfer is posted.",
                "enum" : [ "pending", "supported", "unsupported" ]
              },
              "value" : {
                "type" : "string",
                "description" : "The trace ID value if `trace_id.status` is `supported`, otherwise empty."
              }
            },
            "description" : "A unique identifier that can be used to track this OutboundTransfer with recipient bank. Banks might call this a “reference number” or something similar.",
            "x-stripeNotPublic" : true
          }
        },
        "description" : "OutboundTransfer represents a single money movement from one FinancialAccount you own to a payout method you also own.",
        "x-resourceId" : "v2.money_management.outbound_transfer",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "OutboundTransfer"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/outbound_transfers"
        }, {
          "method_name" : "create",
          "method_on" : "service",
          "method_type" : "create",
          "operation" : "post",
          "path" : "/v2/money_management/outbound_transfers"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/outbound_transfers/{id}"
        }, {
          "method_name" : "cancel",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/money_management/outbound_transfers/{id}/cancel"
        } ]
      },
      "v2.money_management.outbound_transfer.canceled" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_transfer.canceled" ]
          }
        },
        "description" : "An OutboundTransfer has transitioned into the canceled state.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_transfer.canceled"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_transfer.created" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_transfer.created" ]
          }
        },
        "description" : "A new OutboundTransfer has been created.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_transfer.created"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_transfer.failed" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_transfer.failed" ]
          }
        },
        "description" : "An OutboundTransfer has transitioned into the failed state.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_transfer.failed"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_transfer.posted" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_transfer.posted" ]
          }
        },
        "description" : "An OutboundTransfer has transitioned into the posted state.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_transfer.posted"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.outbound_transfer.returned" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.outbound_transfer" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.outbound_transfer.returned" ]
          }
        },
        "description" : "An OutboundTransfer has transitioned into the returned state.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.outbound_transfer.returned"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.payout_method" : {
        "required" : [ "available_payout_speeds", "created", "id", "object", "type", "usage_status" ],
        "type" : "object",
        "properties" : {
          "available_payout_speeds" : {
            "type" : "array",
            "description" : "A set of available payout speeds for this payout method.",
            "items" : {
              "type" : "string",
              "enum" : [ "instant", "standard" ]
            }
          },
          "created" : {
            "type" : "string",
            "description" : "Created timestamp.",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of the PayoutMethod object."
          },
          "latest_outbound_setup_intent" : {
            "type" : "string",
            "description" : "ID of the underlying active OutboundSetupIntent object, if any."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.payout_method" ]
          },
          "type" : {
            "type" : "string",
            "description" : "Closed Enum. The type of payout method.",
            "enum" : [ "bank_account", "card" ]
          },
          "usage_status" : {
            "required" : [ "payments", "transfers" ],
            "type" : "object",
            "properties" : {
              "payments" : {
                "type" : "string",
                "description" : "Payments status.",
                "enum" : [ "eligible", "invalid", "requires_action" ]
              },
              "transfers" : {
                "type" : "string",
                "description" : "Transfers status.",
                "enum" : [ "eligible", "invalid", "requires_action" ]
              }
            },
            "description" : "Indicates whether the payout method has met the necessary requirements for outbound money movement."
          },
          "bank_account" : {
            "required" : [ "archived", "bank_name", "country", "enabled_delivery_options", "last4", "supported_currencies" ],
            "type" : "object",
            "properties" : {
              "archived" : {
                "type" : "boolean",
                "description" : "Whether this PayoutMethodBankAccount object was archived. PayoutMethodBankAccount objects can be archived through\nthe /archive API, and they will not be automatically archived by Stripe. Archived PayoutMethodBankAccount objects\ncannot be used as payout methods and will not appear in the payout method list."
              },
              "bank_name" : {
                "type" : "string",
                "description" : "The name of the bank this bank account is in. This field is populated automatically by Stripe."
              },
              "country" : {
                "type" : "string",
                "description" : "The country code of the bank account."
              },
              "enabled_delivery_options" : {
                "type" : "array",
                "description" : "List of enabled flows for this bank account (wire or local).",
                "items" : {
                  "type" : "string"
                }
              },
              "last4" : {
                "type" : "string",
                "description" : "The last 4 digits of the account number."
              },
              "routing_number" : {
                "type" : "string",
                "description" : "The routing number of the bank account, if present."
              },
              "supported_currencies" : {
                "type" : "array",
                "description" : "The list of currencies supported by this bank account.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "The PayoutMethodBankAccount object details."
          },
          "card" : {
            "required" : [ "archived", "exp_month", "exp_year", "last4" ],
            "type" : "object",
            "properties" : {
              "archived" : {
                "type" : "boolean",
                "description" : "Whether the PayoutMethodCard object was archived. PayoutMethodCard objects can be archived through\nthe /archive API, and they will not be automatically archived by Stripe. Archived PayoutMethodCard objects\ncannot be used as payout methods and will not appear in the payout method list."
              },
              "exp_month" : {
                "type" : "string",
                "description" : "The month the card expires."
              },
              "exp_year" : {
                "type" : "string",
                "description" : "The year the card expires."
              },
              "last4" : {
                "type" : "string",
                "description" : "The last 4 digits of the card number."
              }
            },
            "description" : "The PayoutMethodCard object details."
          }
        },
        "description" : "Use the PayoutMethods API to list and interact with PayoutMethod objects.",
        "x-resourceId" : "v2.money_management.payout_method",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "PayoutMethod"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/payout_methods"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/payout_methods/{id}"
        }, {
          "method_name" : "archive",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/money_management/payout_methods/{id}/archive"
        }, {
          "method_name" : "unarchive",
          "method_on" : "service",
          "method_type" : "custom",
          "operation" : "post",
          "path" : "/v2/money_management/payout_methods/{id}/unarchive"
        } ]
      },
      "v2.money_management.payout_methods_bank_account_spec" : {
        "required" : [ "countries", "object" ],
        "type" : "object",
        "properties" : {
          "countries" : {
            "type" : "object",
            "additionalProperties" : {
              "required" : [ "fields" ],
              "type" : "object",
              "properties" : {
                "fields" : {
                  "type" : "array",
                  "description" : "The list of fields for a country, along with associated information.",
                  "items" : {
                    "required" : [ "local_name", "local_name_human", "max_length", "min_length", "placeholder", "stripe_name", "validation_regex" ],
                    "type" : "object",
                    "properties" : {
                      "local_name" : {
                        "type" : "string",
                        "description" : "The local name of the field."
                      },
                      "local_name_human" : {
                        "required" : [ "content", "localization_key" ],
                        "type" : "object",
                        "properties" : {
                          "content" : {
                            "type" : "string",
                            "description" : "The default content of the localizable string.",
                            "nullable" : false
                          },
                          "localization_key" : {
                            "type" : "string",
                            "description" : "A unique key representing the instance of this localizable string.",
                            "nullable" : false
                          }
                        },
                        "description" : "The human readable local name of the field."
                      },
                      "max_length" : {
                        "type" : "integer",
                        "description" : "The maximum length of the field."
                      },
                      "min_length" : {
                        "type" : "integer",
                        "description" : "THe minimum length of the field."
                      },
                      "placeholder" : {
                        "type" : "string",
                        "description" : "The placeholder value of the field."
                      },
                      "stripe_name" : {
                        "type" : "string",
                        "description" : "The stripe name of the field."
                      },
                      "validation_regex" : {
                        "type" : "string",
                        "description" : "The validation regex of the field."
                      }
                    }
                  }
                }
              }
            },
            "description" : "The list of specs by country."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.payout_methods_bank_account_spec" ]
          }
        },
        "description" : "The PayoutMethodsBankAccountSpec object.",
        "x-resourceId" : "v2.money_management.payout_methods_bank_account_spec",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "PayoutMethodsBankAccountSpec"
        },
        "x-stripeOperations" : [ {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/payout_methods_bank_account_spec"
        } ]
      },
      "v2.money_management.received_credit" : {
        "required" : [ "amount", "created", "financial_account", "id", "object", "status", "type" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "integer",
                "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                "nullable" : false
              },
              "currency" : {
                "type" : "string",
                "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                "nullable" : false
              }
            },
            "description" : "The amount and currency of the ReceivedCredit."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the ReceivedCredit was created.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "Freeform string set by originator of the ReceivedCredit."
          },
          "financial_account" : {
            "type" : "string",
            "description" : "Financial Account ID on which funds for ReceivedCredit were received."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the ReceivedCredit."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.received_credit" ]
          },
          "receipt_url" : {
            "type" : "string",
            "description" : "A hosted transaction receipt URL that is provided when money movement is considered regulated under Stripe’s money transmission licenses."
          },
          "status" : {
            "type" : "string",
            "description" : "Open Enum. The status of the ReceivedCredit.",
            "enum" : [ "failed", "pending", "returned", "succeeded" ]
          },
          "status_details" : {
            "type" : "object",
            "properties" : {
              "failed" : {
                "required" : [ "reason" ],
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string",
                    "description" : "Open Enum. The `failed` status reason.",
                    "enum" : [ "capability_inactive", "currency_unsupported_on_financial_address", "financial_address_inactive", "stripe_rejected" ]
                  }
                },
                "description" : "Hash that provides additional information regarding the reason behind a `failed` ReceivedCredit status. It is only present when the ReceivedCredit status is `failed`."
              },
              "returned" : {
                "required" : [ "reason" ],
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string",
                    "description" : "Open Enum. The `returned` status reason.",
                    "enum" : [ "originator_initiated_reversal" ]
                  }
                },
                "description" : "Hash that provides additional information regarding the reason behind a `returned` ReceivedCredit status. It is only present when the ReceivedCredit status is `returned`."
              }
            },
            "description" : "This hash contains detailed information that elaborates on the specific status of the ReceivedCredit. e.g the reason behind a failure if the status is marked as `failed`."
          },
          "status_transitions" : {
            "type" : "object",
            "properties" : {
              "failed_at" : {
                "type" : "string",
                "description" : "Timestamp describing when the ReceivedCredit was marked as `failed`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              },
              "returned_at" : {
                "type" : "string",
                "description" : "Timestamp describing when the ReceivedCredit changed status to `returned`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              },
              "succeeded_at" : {
                "type" : "string",
                "description" : "Timestamp describing when the ReceivedCredit was marked as `succeeded`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
                "format" : "date-time"
              }
            },
            "description" : "Hash containing timestamps of when the object transitioned to a particular status."
          },
          "type" : {
            "type" : "string",
            "description" : "Open Enum. The type of flow that caused the ReceivedCredit.",
            "enum" : [ "balance_transfer", "bank_transfer", "card_spend", "external_credit" ]
          },
          "balance_transfer" : {
            "required" : [ "payout_v1", "type" ],
            "type" : "object",
            "properties" : {
              "payout_v1" : {
                "type" : "string",
                "description" : "The ID of the Stripe Money Movement that originated the ReceivedCredit."
              },
              "type" : {
                "type" : "string",
                "description" : "Open Enum. The type of Stripe Money Movement that originated the ReceivedCredit.",
                "enum" : [ "payout_v1" ]
              }
            },
            "description" : "This object stores details about the originating Stripe transaction that resulted in the ReceivedCredit. Present if `type` field value is `balance_transfer`."
          },
          "bank_transfer" : {
            "required" : [ "financial_address", "payment_method_type" ],
            "type" : "object",
            "properties" : {
              "financial_address" : {
                "type" : "string",
                "description" : "Financial Address on which funds for ReceivedCredit were received."
              },
              "payment_method_type" : {
                "type" : "string",
                "description" : "Open Enum. Indicates the type of source via from which external funds originated.",
                "enum" : [ "gb_bank_account", "us_bank_account" ]
              },
              "statement_descriptor" : {
                "type" : "string",
                "description" : "Freeform string set by originator of the external ReceivedCredit."
              },
              "gb_bank_account" : {
                "required" : [ "network" ],
                "type" : "object",
                "properties" : {
                  "account_holder_name" : {
                    "type" : "string",
                    "description" : "The bank name the transfer was received from."
                  },
                  "bank_name" : {
                    "type" : "string",
                    "description" : "The bank name the transfer was received from."
                  },
                  "last4" : {
                    "type" : "string",
                    "description" : "The last 4 digits of the account number that originated the transfer."
                  },
                  "network" : {
                    "type" : "string",
                    "description" : "Open Enum. The money transmission network used to send funds for this ReceivedCredit.",
                    "enum" : [ "fps" ]
                  },
                  "sort_code" : {
                    "type" : "string",
                    "description" : "The sort code of the account that originated the transfer."
                  }
                },
                "description" : "Hash containing the transaction bank details. Present if `payment_method_type` field value is `gb_bank_account`."
              },
              "us_bank_account" : {
                "required" : [ "network" ],
                "type" : "object",
                "properties" : {
                  "bank_name" : {
                    "type" : "string",
                    "description" : "The bank name the transfer was received from."
                  },
                  "last4" : {
                    "type" : "string",
                    "description" : "The last 4 digits of the account number that originated the transfer."
                  },
                  "network" : {
                    "type" : "string",
                    "description" : "Open Enum. The money transmission network used to send funds for this ReceivedCredit.",
                    "enum" : [ "ach", "rtp", "us_domestic_wire" ]
                  },
                  "routing_number" : {
                    "type" : "string",
                    "description" : "The routing number of the account that originated the transfer."
                  }
                },
                "description" : "Hash containing the transaction bank details. Present if `payment_method_type` field value is `us_bank_account`."
              }
            },
            "description" : "This object stores details about the originating banking transaction that resulted in the ReceivedCredit. Present if `type` field value is `external_credit`."
          },
          "card_spend" : {
            "required" : [ "card_v1_id" ],
            "type" : "object",
            "properties" : {
              "card_v1_id" : {
                "type" : "string",
                "description" : "The reference to the issuing card object."
              },
              "dispute" : {
                "required" : [ "issuing_dispute_v1" ],
                "type" : "object",
                "properties" : {
                  "issuing_dispute_v1" : {
                    "type" : "string",
                    "description" : "The reference to the v1 issuing dispute ID."
                  }
                },
                "description" : "Hash containing information about the Dispute that triggered this credit."
              },
              "refund" : {
                "required" : [ "issuing_transaction_v1" ],
                "type" : "object",
                "properties" : {
                  "issuing_transaction_v1" : {
                    "type" : "string",
                    "description" : "The reference to the v1 issuing transaction ID."
                  }
                },
                "description" : "Hash containing information about the Refund that triggered this credit."
              }
            },
            "description" : "This object stores details about the originating issuing card spend that resulted in the ReceivedCredit. Present if `type` field value is `card_spend`."
          }
        },
        "description" : "Use ReceivedCredits API to retrieve information on when, where, and how funds are sent into your FinancialAccount.",
        "x-resourceId" : "v2.money_management.received_credit",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "ReceivedCredit"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/received_credits"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/received_credits/{id}"
        } ]
      },
      "v2.money_management.received_credit.available" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "required" : [ "transaction_id" ],
            "type" : "object",
            "properties" : {
              "transaction_id" : {
                "type" : "string",
                "description" : "The transaction ID of the received credit."
              }
            },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.received_credit" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.received_credit.available" ]
          }
        },
        "description" : "The funds related to the received credit are available in your balance.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.received_credit.available"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.received_credit.failed" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.received_credit" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.received_credit.failed" ]
          }
        },
        "description" : "A credit was attempted to your balance and was not successful. See the status_details for more information.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.received_credit.failed"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.received_credit.returned" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.received_credit" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.received_credit.returned" ]
          }
        },
        "description" : "The previously received credit has been reversed, returned to the originator and deducted from your balance.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.received_credit.returned"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.received_credit.succeeded" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.received_credit" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.received_credit.succeeded" ]
          }
        },
        "description" : "A credit was received successfully and processed by Stripe.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.received_credit.succeeded"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.received_debit" : {
        "required" : [ "amount", "created", "financial_account", "id", "object", "status", "status_transitions", "type" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "integer",
                "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                "nullable" : false
              },
              "currency" : {
                "type" : "string",
                "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                "nullable" : false
              }
            },
            "description" : "Amount and currency of the ReceivedDebit."
          },
          "created" : {
            "type" : "string",
            "description" : "The time at which the ReceivedDebit was created.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: `2022-09-18T13:22:18.123Z`.",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "Freeform string sent by the originator of the ReceivedDebit."
          },
          "financial_account" : {
            "type" : "string",
            "description" : "Financial Account on which funds for ReceivedDebit were debited."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the ReceivedDebit."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.received_debit" ]
          },
          "receipt_url" : {
            "type" : "string",
            "description" : "A link to the Stripe-hosted receipt for this ReceivedDebit."
          },
          "status" : {
            "type" : "string",
            "description" : "Open Enum. The status of the ReceivedDebit.",
            "enum" : [ "canceled", "failed", "pending", "returned", "succeeded" ]
          },
          "status_details" : {
            "required" : [ "failed" ],
            "type" : "object",
            "properties" : {
              "failed" : {
                "required" : [ "reason" ],
                "type" : "object",
                "properties" : {
                  "reason" : {
                    "type" : "string",
                    "description" : "Open Enum. The reason for the failure of the ReceivedDebit.",
                    "enum" : [ "financial_address_inactive", "insufficient_funds", "stripe_rejected" ]
                  }
                },
                "description" : "Information that elaborates on the `failed` status of a ReceivedDebit.\nIt is only present when the ReceivedDebit status is `failed`."
              }
            },
            "description" : "Detailed information about the status of the ReceivedDebit."
          },
          "status_transitions" : {
            "type" : "object",
            "properties" : {
              "canceled_at" : {
                "type" : "string",
                "description" : "The time when the ReceivedDebit was marked as `canceled`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: `2022-09-18T13:22:18.123Z`.",
                "format" : "date-time"
              },
              "failed_at" : {
                "type" : "string",
                "description" : "The time when the ReceivedDebit was marked as `failed`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: `2022-09-18T13:22:18.123Z`.",
                "format" : "date-time"
              },
              "succeeded_at" : {
                "type" : "string",
                "description" : "The time when the ReceivedDebit was marked as `succeeded`.\nRepresented as a RFC 3339 date & time UTC value in millisecond precision, for example: `2022-09-18T13:22:18.123Z`.",
                "format" : "date-time"
              }
            },
            "description" : "The time at which the ReceivedDebit transitioned to a particular status."
          },
          "type" : {
            "type" : "string",
            "description" : "Open Enum. The type of the ReceivedDebit.",
            "enum" : [ "bank_transfer", "card_spend", "external_debit" ]
          },
          "bank_transfer" : {
            "required" : [ "financial_address", "payment_method_type", "us_bank_account" ],
            "type" : "object",
            "properties" : {
              "financial_address" : {
                "type" : "string",
                "description" : "The Financial Address that was debited."
              },
              "payment_method_type" : {
                "type" : "string",
                "description" : "Open Enum. The type of the payment method used to originate the debit.",
                "enum" : [ "us_bank_account" ]
              },
              "statement_descriptor" : {
                "type" : "string",
                "description" : "The statement descriptor set by the originator of the debit."
              },
              "us_bank_account" : {
                "required" : [ "network" ],
                "type" : "object",
                "properties" : {
                  "bank_name" : {
                    "type" : "string",
                    "description" : "The name of the bank the debit originated from."
                  },
                  "network" : {
                    "type" : "string",
                    "description" : "Open Enum. The bank network the debit was originated on.",
                    "enum" : [ "ach" ]
                  },
                  "routing_number" : {
                    "type" : "string",
                    "description" : "The routing number of the bank that originated the debit."
                  }
                },
                "description" : "The payment method used to originate the debit."
              }
            },
            "description" : "This object stores details about the originating banking transaction that resulted in the ReceivedDebit. Present if `type` field value is `bank_transfer`."
          },
          "card_spend" : {
            "required" : [ "card_transactions", "card_v1_id" ],
            "type" : "object",
            "properties" : {
              "authorization" : {
                "required" : [ "amount", "issuing_authorization_v1" ],
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "object",
                    "properties" : {
                      "amount" : {
                        "type" : "integer",
                        "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                        "nullable" : false
                      },
                      "currency" : {
                        "type" : "string",
                        "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "nullable" : false
                      }
                    },
                    "description" : "Amount associated with this issuing authorization."
                  },
                  "issuing_authorization_v1" : {
                    "type" : "string",
                    "description" : "The reference to the v1 issuing authorization ID."
                  }
                },
                "description" : "The Issuing Authorization for this card_spend. Contains the reference id and the amount."
              },
              "card_transactions" : {
                "type" : "array",
                "description" : "The list of card spend transactions. These contain the transaction reference ID and the amount.",
                "items" : {
                  "required" : [ "amount", "issuing_transaction_v1" ],
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "object",
                      "properties" : {
                        "amount" : {
                          "type" : "integer",
                          "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                          "nullable" : false
                        },
                        "currency" : {
                          "type" : "string",
                          "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                          "nullable" : false
                        }
                      },
                      "description" : "Amount associated with this issuing transaction."
                    },
                    "issuing_transaction_v1" : {
                      "type" : "string",
                      "description" : "The reference to the v1 issuing transaction ID."
                    }
                  }
                }
              },
              "card_v1_id" : {
                "type" : "string",
                "description" : "The reference to the card object that resulted in the debit."
              }
            },
            "description" : "This object stores details about the issuing transactions that resulted in the ReceivedDebit. Present if `type` field value is `card_spend`."
          }
        },
        "description" : "ReceivedDebit resource",
        "x-resourceId" : "v2.money_management.received_debit",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "ReceivedDebit"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/received_debits"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/received_debits/{id}"
        } ]
      },
      "v2.money_management.received_debit.canceled" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.received_debit" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.received_debit.canceled" ]
          }
        },
        "description" : "This event is sent when a received debit is canceled.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.received_debit.canceled"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.received_debit.failed" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.received_debit" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.received_debit.failed" ]
          }
        },
        "description" : "This event is sent when a received debit fails.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.received_debit.failed"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.received_debit.pending" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.received_debit" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.received_debit.pending" ]
          }
        },
        "description" : "This event is sent when a ReceivedDebit is set to pending.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.received_debit.pending"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.received_debit.succeeded" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.received_debit" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.received_debit.succeeded" ]
          }
        },
        "description" : "This event is sent when a ReceivedDebit succeeds.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.received_debit.succeeded"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.received_debit.updated" : {
        "required" : [ "data", "related_object", "type" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : { },
            "description" : "Additional data about the event."
          },
          "related_object" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Object tag of the resource relevant to the event.",
                "enum" : [ "v2.money_management.received_debit" ]
              }
            },
            "description" : "Object containing the reference to API resource relevant to the event."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the event.",
            "enum" : [ "v2.money_management.received_debit.updated" ]
          }
        },
        "description" : "This event is sent when a ReceivedDebit is updated.",
        "x-stripeEvent" : {
          "kind" : "thin",
          "type" : "v2.money_management.received_debit.updated"
        },
        "x-stripeNotPublic" : true
      },
      "v2.money_management.transaction" : {
        "required" : [ "amount", "balance_impact", "category", "created", "financial_account", "flow", "id", "object", "status", "status_transitions" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "integer",
                "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                "nullable" : false
              },
              "currency" : {
                "type" : "string",
                "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                "nullable" : false
              }
            },
            "description" : "The amount of the Transaction."
          },
          "balance_impact" : {
            "required" : [ "available", "inbound_pending", "outbound_pending" ],
            "type" : "object",
            "properties" : {
              "available" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "Impact to the available balance."
              },
              "inbound_pending" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "Impact to the inbound_pending balance."
              },
              "outbound_pending" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "Impact to the outbound_pending balance."
              }
            },
            "description" : "The delta to the FinancialAccount's balance. The balance_impact for the Transaction is equal to sum of its\nTransactionEntries that have `effective_at`s in the past."
          },
          "category" : {
            "type" : "string",
            "description" : "Open Enum. A descriptive category used to classify the Transaction.",
            "enum" : [ "adjustment", "inbound_transfer", "outbound_payment", "outbound_transfer", "received_credit", "received_debit", "return", "stripe_fee" ]
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created. Represented as a RFC 3339 date & time UTC value in millisecond precision, for example: 2022-09-18T13:22:18.123Z.",
            "format" : "date-time"
          },
          "financial_account" : {
            "type" : "string",
            "description" : "Indicates the FinancialAccount affected by this Transaction."
          },
          "flow" : {
            "required" : [ "type" ],
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Open Enum. Type of the flow that created the Transaction. The field matching this value will contain the ID of the flow.",
                "enum" : [ "adjustment", "currency_conversion", "fee_transaction", "inbound_transfer", "outbound_payment", "outbound_transfer", "received_credit", "received_debit" ]
              },
              "adjustment" : {
                "type" : "string",
                "description" : "If applicable, the ID of the Adjustment that created this Transaction."
              },
              "fee_transaction" : {
                "type" : "string",
                "description" : "If applicable, the ID of the FeeTransaction that created this Transaction."
              },
              "inbound_transfer" : {
                "type" : "string",
                "description" : "If applicable, the ID of the InboundTransfer that created this Transaction."
              },
              "outbound_payment" : {
                "type" : "string",
                "description" : "If applicable, the ID of the OutboundPayment that created this Transaction."
              },
              "outbound_transfer" : {
                "type" : "string",
                "description" : "If applicable, the ID of the OutboundTransfer that created this Transaction."
              },
              "received_credit" : {
                "type" : "string",
                "description" : "If applicable, the ID of the ReceivedCredit that created this Transaction."
              },
              "received_debit" : {
                "type" : "string",
                "description" : "If applicable, the ID of the ReceivedDebit that created this Transaction."
              }
            },
            "description" : "Details about the Flow object that created the Transaction."
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the object."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.transaction" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Closed Enum. Current status of the Transaction.\nA Transaction is `pending` if either `balance_impact.inbound_pending` or `balance_impact.outbound_pending` is non-zero.\nA Transaction is `posted` if only `balance_impact.available` is non-zero.\nA Transaction is `void` if there is no balance impact.\n`posted` and `void` are terminal states, and no additional entries will be added to the Transaction.",
            "enum" : [ "pending", "posted", "void" ]
          },
          "status_transitions" : {
            "type" : "object",
            "properties" : {
              "posted_at" : {
                "type" : "string",
                "description" : "The time at which the Transaction became posted. Only present if status == posted.",
                "format" : "date-time"
              },
              "void_at" : {
                "type" : "string",
                "description" : "The time at which the Transaction became void. Only present if status == void.",
                "format" : "date-time"
              }
            },
            "description" : "Timestamps for when the Transaction transitioned to a particular status."
          }
        },
        "description" : "Use Transactions to view changes to your FinancialAccount balance over time. Every flow that moves money, such as OutboundPayments or ReceivedCredits, will have one or more Transactions that describes how the flow impacted your balance. Note that while the FinancialAccount balance will always be up to date, be aware that Transactions and TransactionEntries are created shortly after to reflect changes.",
        "x-resourceId" : "v2.money_management.transaction",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "Transaction"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/transactions"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/transactions/{id}"
        } ]
      },
      "v2.money_management.transaction_entry" : {
        "required" : [ "balance_impact", "created", "effective_at", "id", "object", "transaction", "transaction_details" ],
        "type" : "object",
        "properties" : {
          "balance_impact" : {
            "required" : [ "available", "inbound_pending", "outbound_pending" ],
            "type" : "object",
            "properties" : {
              "available" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "Impact to the available balance."
              },
              "inbound_pending" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "Impact to the inbound_pending balance."
              },
              "outbound_pending" : {
                "type" : "object",
                "properties" : {
                  "amount" : {
                    "type" : "integer",
                    "description" : "A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#minor-units).",
                    "nullable" : false
                  },
                  "currency" : {
                    "type" : "string",
                    "description" : "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                    "nullable" : false
                  }
                },
                "description" : "Impact to the outbound_pending balance."
              }
            },
            "description" : "The delta to the FinancialAccount's balance."
          },
          "created" : {
            "type" : "string",
            "description" : "Time at which the object was created.",
            "format" : "date-time"
          },
          "effective_at" : {
            "type" : "string",
            "description" : "Time at which the entry impacted (or will impact if it's in the future) the FinancialAccount balance.",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the object."
          },
          "object" : {
            "type" : "string",
            "description" : "String representing the object's type. Objects of the same type share the same value of the object field.",
            "enum" : [ "v2.money_management.transaction_entry" ]
          },
          "transaction" : {
            "type" : "string",
            "description" : "The Transaction that this TransactionEntry belongs to."
          },
          "transaction_details" : {
            "required" : [ "category", "financial_account", "flow" ],
            "type" : "object",
            "properties" : {
              "category" : {
                "type" : "string",
                "description" : "Closed Enum for now, and will be turned into an Open Enum soon. A descriptive category used to classify the Transaction.",
                "enum" : [ "adjustment", "inbound_transfer", "outbound_payment", "outbound_transfer", "received_credit", "received_debit", "return", "stripe_fee" ]
              },
              "financial_account" : {
                "type" : "string",
                "description" : "Indicates the FinancialAccount affected by this Transaction."
              },
              "flow" : {
                "required" : [ "type" ],
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "string",
                    "description" : "Open Enum. Type of the flow that created the Transaction. The field matching this value will contain the ID of the flow.",
                    "enum" : [ "adjustment", "currency_conversion", "fee_transaction", "inbound_transfer", "outbound_payment", "outbound_transfer", "received_credit", "received_debit" ]
                  },
                  "adjustment" : {
                    "type" : "string",
                    "description" : "If applicable, the ID of the Adjustment that created this Transaction."
                  },
                  "fee_transaction" : {
                    "type" : "string",
                    "description" : "If applicable, the ID of the FeeTransaction that created this Transaction."
                  },
                  "inbound_transfer" : {
                    "type" : "string",
                    "description" : "If applicable, the ID of the InboundTransfer that created this Transaction."
                  },
                  "outbound_payment" : {
                    "type" : "string",
                    "description" : "If applicable, the ID of the OutboundPayment that created this Transaction."
                  },
                  "outbound_transfer" : {
                    "type" : "string",
                    "description" : "If applicable, the ID of the OutboundTransfer that created this Transaction."
                  },
                  "received_credit" : {
                    "type" : "string",
                    "description" : "If applicable, the ID of the ReceivedCredit that created this Transaction."
                  },
                  "received_debit" : {
                    "type" : "string",
                    "description" : "If applicable, the ID of the ReceivedDebit that created this Transaction."
                  }
                },
                "description" : "Details about the Flow object that created the Transaction."
              }
            },
            "description" : "Details copied from the transaction that this TransactionEntry belongs to."
          }
        },
        "description" : "TransactionEntries represent individual money movements across different states within a Transaction.",
        "x-resourceId" : "v2.money_management.transaction_entry",
        "x-stripeResource" : {
          "in_package" : "v2.moneyManagement",
          "class_name" : "TransactionEntry"
        },
        "x-stripeOperations" : [ {
          "method_name" : "list",
          "method_on" : "service",
          "method_type" : "list",
          "operation" : "get",
          "path" : "/v2/money_management/transaction_entries"
        }, {
          "method_name" : "retrieve",
          "method_on" : "service",
          "method_type" : "retrieve",
          "operation" : "get",
          "path" : "/v2/money_management/transaction_entries/{id}"
        } ]
      }
    }
  }
}
